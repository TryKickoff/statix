@charset "UTF-8";
/**
 * Site dependencies
 * See http://trykickoff.com/demos/ for more info
 */
/*
 * Mixins, helpers and functions
 * Most CSS3 vendor prefixed items have a mixin,
 * but we should not need them if autoprefixer is being used
 * See mixins/css3.scss for the full list
 */
/**
 * Sass Mixins
 * - Vendor prefixer
 * - Responsive
 * - CSS3
 * - Utility Mixins
 * - hiDpi
 * - Forms */
/**
 * Vendor prefixer
 * Usage: @include prefixer(border-radius, $radii, webkit ms spec);
 */
/**
 * Responsive media query mixins
 * - These are used so that we can define separate media-query content
 *   for <IE9 and browsers with support for media queries
 * - These are directly related to the global $fix-mqs var defined in
 *   kickoff-old-ie.scss
 * - kickoff-old-ie.scss ignores any content in media-queries with values less
 *   than the $fix-mqs var value
 */
/**
 * Min-width media query:
 * - Equivalent to: @media screen and (min-width: 20em) { ... }
 * - Usage: @include respond-min(500) { ... };
 * - Argument is a pixel value WITHOUT a unit of measurement
 */
/**
 * Max-width media query:
 * - Equivalent to: @media screen and (max-width: 20em) { ... }
 * - Usage: @include respond-max(500) { ... };
 * - Argument is a pixel value WITHOUT a unit of measurement
 */
/**
 * Min-max-width media query:
 * - Equivalent to: @media screen and (min-width: 10em) and (max-width: 20em) { ... }
 * - Usage: @include respond-min-max(500, 600) { ... };
 * - Arguments are pixel values WITHOUT a unit of measurement
 */
/**
 * Old IE specific mixin
 * - Only use this content if we're dealing with old IE
 * - Usage: @include oldie() { ... }
 */
/**
 * Linear Gradient
 * Usage: @include linear-gradient(#000, #BADA55, horizontal, true);
 */
/**
 * Radial Gradient
 * Usage: @include radial-gradient(#000, #BADA55, true);
 */
/**
 * vertical-center
 * Vertically center any element. Needs support for CSS tranforms.
 * Usage:
 * @include vertical-center;
 */
/**
 * Utility mixins
 * Clearfix, REM + fallbacks,
 * @font-face, sizing shortcuts,
 * and other helpers
 */
/**
 * Utility Mixins
 */
/**
 * Typography mixins
 */
/**
 *  HiDPI mixin.
 *  @include hidpi { ... };
 *  Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)
 */
/**
 * Hidpi with a minimum width media query
 * @include hidpi-min($bp-mid, 1.5) { ... };
 */
/**
 * Hidpi with a max width media query
 * @include hidpi-max($bp-mid, 1.3) { ... };
 */
/**
 * Core variables
 * Edit your color palette and app vars before your begin
 */
/**
 * Global Color palette
 * - Generic colors
 * - Color scheme
 * - Common colors
 * - Links
 * - Text selection
 * - <hr>
 * - Any others..
 */
/**
 * Variables
 * - Typography
 * - Breakpoints
 * - Paths
 * - Layout & Grid
 * - App-specific
 */
/**
 * Typography
 *
 * Base sizes:
 * Set this in pixels (but do not add px),
 * the font-size mixin will convert to REMS
 */
/**
 * Breakpoints
 * There are no common breakpoints so these are just a suggestions
 * You'll need to define your own breakpoints to suit your design
 */
/**
 * Path vars
 */
/**
 * Layout setup
 * Settings here override & affect the output in scss/partials/components/grid.scss
 */
/**
 * App-specific variables
 */
/* CSS Reset - Normalize etc */
/**
 * Kickoff reset
 */
html {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
}

*, *:before, *:after {
  -moz-box-sizing: inherit;
       box-sizing: inherit;
}

/**
 * Normalize - CSS reset
 * http://github.com/necolas/normalize.css
 * Kickoff uses an amended version of this file.
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
       box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
       box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/**
 * Global typography styles
 * See http://trykickoff.com/demos/typography.html for more info
 */
/**
 * Typography
 * - Base
 * - Paragraphs
 * - Headings
 * - Type sizes
 * - Misc
 * - Utilities
 *
 * Body font size, leadings etc have been set in _variables.scss
 * Resources:
 * http://www.gridlover.net/
 * http://modularscale.com/
 * http://lamb.cc/typograph/
 *
 */
html {
  font-size: 18px;
  -webkit-text-size-adjust: 100%;
}

@media screen and (min-width: 46.875em) {
  html {
    font-size: 20px;
  }
}

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 20px;
  font-size: 1rem;
  line-height: 1.4;
  color: #444;
  -webkit-font-feature-settings: "liga","dlig";
     -moz-font-feature-settings: "liga","dlig";
          font-feature-settings: "liga","dlig";
}

/**
 * Paragraphs
 */
p {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 20px;
  font-size: 1rem;
  margin-top: 0;
  margin-bottom: 28px;
}

/**
 * Headings
 */
h1, h2, h3, h4, h5, h6 {
  margin: 0;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: bold;
  line-height: 1.1;
  text-rendering: optimizelegibility;
  margin-top: 0;
  margin-bottom: 28px;
}

h1 small, h2 small, h3 small, h4 small, h5 small, h6 small {
  font-weight: normal;
}

h1, .h1, .alpha {
  font-size: 40px;
  font-size: 2rem;
  margin-bottom: 56px;
}

h2, .h2, .beta {
  font-size: 32px;
  font-size: 1.6rem;
}

h3, .h3, .gamma {
  font-size: 25px;
  font-size: 1.25rem;
}

h4, .h4, .delta {
  font-size: 20px;
  font-size: 1rem;
}

h5, .h5, .epsilon,
h6, .h6, .zeta {
  font-size: 16px;
  font-size: 0.8rem;
  margin-bottom: 0;
}

* + h1, * + .h1, * + .alpha,
* + h2, * + .h2, * + .beta,
* + h3, * + .h3, * + .gamma,
* + h4, * + .h4, * + .delta {
  margin-top: 28px;
}

small {
  font-size: 80%;
}

/**
 * Miscellaneous
 */
strong, b {
  font-weight: bold;
}

em, i {
  font-style: italic;
}

abbr[title] {
  border-bottom: 1px dotted #ddd;
  cursor: help;
}

/**
 * Blockquotes
 */
blockquote {
  padding-left: 10px;
  margin: 28px;
  border-left: 4px solid #cccccc;
}

blockquote p {
  margin-bottom: 0;
  font-size: 20px;
  font-size: 1rem;
  font-weight: 300;
}

blockquote small {
  display: block;
  color: #b3b3b3;
}

blockquote small:before {
  content: '\2014 \00A0';
}

q:before, q:after,
blockquote:before,
blockquote:after {
  content: "";
}

cite {
  font-style: normal;
}

dfn {
  font-style: italic;
}

mark {
  background: #feef6d;
  padding: 2px 4px;
  border-radius: 3px;
}

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -.5em;
}

sub {
  bottom: -.25em;
}

samp {
  font-family: Menlo, Monaco, "Courier New", monospace;
}

/**
 * Utilities
 */
.text-centre,
.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

::-moz-selection {
  color: #fff;
  background: #181830;
  text-shadow: none;
}

::selection {
  color: #fff;
  background: #181830;
  text-shadow: none;
}

hr {
  margin: 28px 0;
  border: 0;
  border-top: 1px solid #b3b3b3;
  border-bottom: 1px solid #fff;
}

/**
 * Components:
 * See http://trykickoff.com/demos/components.html for more info
 */
/**
 * Forms
 * =================================
 * Index:
 * - Associated Form Variables
 * - Generic form styles
 * - Form inputs and groups
 * - Form field feedback states
 * - Horizontal & vertical forms
 * - Horizontal-specific styles
 */
/**
 * Define associated Form variables
 */
/**
 * Generic form styles
 * =================================
 * Demo: http://trykickoff.com/demos/forms.html#layout-example-labels-above
 * Code: https://gist.github.com/mrmartineau/6712577#file-labels-above-inputs-html
 * Usage:
  	<div class="form-controlGroup">
  		<label for="name" class="form-label">Name</label>
  		<div class="form-controlGroup-inputWrapper">
  			<input type="text" id="name" placeholder="Zander Martineau" class="form-input"/>
  		</div>
  	</div>
 */
.form {
  margin: 0 0 28px;
}

.form-fieldset {
  padding: 0;
  margin: 0;
  border: 0;
}

.form-legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: 28px;
  font-size: 25px;
  font-size: 1.25rem;
  line-height: 1.4;
  color: #444;
  border: 0;
  border-bottom: 1px solid #eee;
  white-space: normal;
}

.form-legend small {
  font-size: 16px;
  font-size: 0.8rem;
  color: #b3b3b3;
}

/**
 * Form inputs and groups
 */
.form-controlGroup {
  margin-top: 14px;
  margin-bottom: 14px;
  list-style-type: none;
}

.form-legend + .form-controlGroup {
  margin-top: 28px;
  -webkit-margin-top-collapse: separate;
}

.form-label {
  display: block;
  color: #444;
  font-weight: bold;
}

.form-label small {
  font-weight: normal;
  color: #919191;
}

.form-input {
  display: block;
  width: 100%;
  height: 2.5em;
  padding: .5em;
  font-size: 20px;
  font-size: 1rem;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.4;
  color: #444;
  font-weight: normal;
  vertical-align: baseline;
  background-color: #fff;
  border: 2px solid #ccc;
  border-radius: 5px;
  background-clip: padding-box;
  -webkit-transition: border 200ms ease-in-out;
     -moz-transition: border 200ms ease-in-out;
          transition: border 200ms ease-in-out;
}

.form-input:focus {
  border-color: #181830;
  outline: 0;
  outline: thin dotted \9;
}

.form-input[type="image"], .form-input[type="checkbox"], .form-input[type="radio"], .form-input[type="range"] {
  width: auto;
  height: auto;
  padding: 0;
  margin: 3px 0;
  line-height: normal;
  cursor: pointer;
  border-radius: 0;
  -moz-box-sizing: border-box;
       box-sizing: border-box;
}

.form-input[type="image"] {
  border: 0;
}

.form-input[type="file"] {
  width: auto;
  height: 28px;
  padding: initial;
  line-height: initial;
  border: initial;
  background-color: #fff;
  background-color: initial;
}

.form-input[type="hidden"] {
  display: none;
}

.form-input[type="color"] {
  width: 40px;
  height: 40px;
  overflow: hidden;
  padding: 2px;
}

.form-input[type="password"] {
  font-family: sans-serif;
}

.form-input[type="range"] {
  width: 100%;
}

.form-input > .radio:first-child,
.form-input > .checkbox:first-child {
  padding-top: 5px;
}

.form-input[disabled], .form-input[readonly] {
  background-color: #e6e6e6;
  border-color: #ccc;
  cursor: not-allowed;
}

.form-input--textarea {
  height: auto;
  resize: vertical;
}

.form-input--textarea--uneditable {
  width: auto;
  height: auto;
}

.form-input--select {
  background-color: #fff;
}

.form-input--select[multiple], .form-input--select[size] {
  height: auto;
}

.form-input-file {
  display: inline-block;
  width: 100%;
  font-size: 20px;
  font-size: 1rem;
  margin: 0;
  vertical-align: middle;
  line-height: 1em;
}

.form-input-file:focus {
  outline: none;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  width: auto;
  cursor: pointer;
  -webkit-appearance: button;
}

/**
 * Checkboxes:
 * =================================
	<label class="control">
		<input type="checkbox" value="check1">
		This is a checkbox
	</label>
	<label class="control control--inline">
		<input type="checkbox" value="check1">
		This is a checkbox
	</label>

 * Radios:
 * =================================
	<label class="control">
		<input type="radio" name="optionsRadios" id="optionsRadios1" value="option1" checked>
		This is a radio
	</label>
	<label class="control control--inline">
		<input type="radio" name="optionsRadios" id="optionsRadios1" value="option2" checked>
		This is a radio
	</label>
 */
.control {
  display: block;
}

.control input[type="radio"],
.control input[type="checkbox"] {
  vertical-align: middle;
  margin-right: .5em;
  margin-top: -.1em;
  display: inline;
  line-height: normal;
}

.control--inline {
  display: inline-block;
  vertical-align: middle;
  margin-right: 1.5em;
}

/**
 * Search input
 */
.form-input--search {
  padding-left: 14px;
  padding-right: 14px;
  margin-bottom: 0;
  border-radius: 100px;
}

/**
 * Form actions
 */
.form-actions {
  padding: 28px 20px;
  margin-top: 28px;
  margin-bottom: 28px;
  background-color: #f5f5f5;
  border-top: 1px solid #ddd;
}

.form-actions .btn {
  margin-right: 10px;
}

.form-actions .btn:last-child {
  margin-right: 0;
}

/**
 * Form validation messages
 */
.form-controlGroup .form-message {
  display: none;
  padding-top: 0.5em;
  padding-left: 0.5em;
}

.form-actions .form-message {
  padding: 0.5em;
}

/**
 * Form field feedback states
 */
.has-warning {
  color: #f4aa47;
}

.form-controlGroup.has-warning .form-label {
  color: #f4aa47;
}

.form-controlGroup.has-warning .form-input {
  color: #f4aa47;
  border-color: #f4aa47;
}

.form-controlGroup.has-warning .form-input:focus {
  border-color: #f19417;
}

.form-controlGroup.has-warning .form-message {
  display: block;
  color: #f4aa47;
}

.has-error {
  color: #B94A4D;
}

.form-controlGroup.has-error .form-label {
  color: #B94A4D;
}

.form-controlGroup.has-error .form-input {
  color: #B94A4D;
  border-color: #B94A4D;
}

.form-controlGroup.has-error .form-input:focus {
  border-color: #963a3c;
}

.form-controlGroup.has-error .form-message {
  display: block;
  color: #B94A4D;
}

.has-success {
  color: #16c98d;
}

.form-controlGroup.has-success .form-label {
  color: #16c98d;
}

.form-controlGroup.has-success .form-input {
  color: #16c98d;
  border-color: #16c98d;
}

.form-controlGroup.has-success .form-input:focus {
  border-color: #119b6d;
}

.form-controlGroup.has-success .form-message {
  display: block;
  color: #16c98d;
}

.has-info {
  color: #288ad6;
}

.form-controlGroup.has-info .form-label {
  color: #288ad6;
}

.form-controlGroup.has-info .form-input {
  color: #288ad6;
  border-color: #288ad6;
}

.form-controlGroup.has-info .form-input:focus {
  border-color: #206eab;
}

.form-controlGroup.has-info .form-message {
  display: block;
  color: #288ad6;
}

/**
 * Placeholder text
 * =================================
 * Gets special styles; can't be bundled together though for some reason
 */
:-ms-input-placeholder {
  color: #b3b3b3;
}

:-moz-placeholder {
  color: #b3b3b3;
}

::-webkit-input-placeholder {
  color: #b3b3b3;
}

@media screen and (min-width: 46.875em) {
  /**
	 * Horizontal-specific styles
	 * =================================
	 * add .form--horizontal to the <form> element
	 * Demo: http://trykickoff.com/demos/forms.html#layout-example-labels-inline
	 * Code: https://gist.github.com/mrmartineau/6712577#file-labels-inline-html
	 */
  .form--horizontal .form-controlGroup {
    margin-bottom: 28px;
  }
  .form--horizontal .form-controlGroup:after {
    content: "";
    display: table;
    clear: both;
  }
  .form--horizontal .form-controlGroup .form-input--fileWrapper {
    margin-left: 0;
  }
  .form--horizontal .form-label {
    float: left;
    width: 140px;
    padding-top: 5px;
    text-align: right;
  }
  .form--horizontal .form-controlGroup-inputWrapper {
    margin-left: 160px;
  }
  .form--horizontal .form-controlGroup-inputWrapper:first-child {
    padding-left: 160px;
  }
  .form--horizontal .form-helpBlock {
    margin-top: 14px;
    margin-bottom: 0;
  }
  .form--horizontal .form-actions {
    padding-left: 160px;
  }
}

/**
 * Custom Checkboxes and radios
 *
 * IE9+
 *
 * --------------------------------
 *
 * Checkbox button example HTML
 *
 *	<label class="control control--custom" for="checkbox1">
 *		<input class="control--custom-input" type="checkbox" id="checkbox1" name="myCheckbox" value="A value"/>
 *		<span class="control-indicator control-indicator--checkbox"></span>
 *		My Checkbox Label Text
 *	</label>
 *
 * -------------------------------
 *
 * Radio button example HTML
 *
 *	<label class="control control--custom" for="radio1">
 *		<input class="control--custom-input" type="radio" id="radio1" name="myRadioBtn" value="A value"/>
 *		<span class="control-indicator control-indicator--radio"></span>
 *		My Radio Button Label Text
 * 	</label>
 *
 * ================================= */
.control--custom {
  position: relative;
  display: block;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.control--custom--inline {
  display: inline-block;
  padding-right: 2em;
}

.control--custom-input {
  position: absolute;
  opacity: 0;
  z-index: -1;
}

.control-indicator {
  position: relative;
  display: inline-block;
  width: 1em;
  height: 1em;
  -webkit-transition: all 100ms ease-in-out;
     -moz-transition: all 100ms ease-in-out;
          transition: all 100ms ease-in-out;
  border: 0.1em solid #181830;
  background-color: #181830;
  vertical-align: middle;
  margin-top: -.2em;
  box-shadow: 0 0 0 2px transparent, 0 0 0 0 transparent;
}

.control--custom-input:focus ~ .control-indicator {
  box-shadow: 0 0 0 2px #f1f1f1, 0 0 0 3px #181830;
}

.control-indicator--checkbox,
.control-indicator--tickbox {
  border-radius: .2em;
}

.control-indicator--checkbox:before, .control-indicator--checkbox:after,
.control-indicator--tickbox:before,
.control-indicator--tickbox:after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 90%;
  display: block;
  opacity: 0;
  -webkit-transition: all 250ms ease-in-out;
     -moz-transition: all 250ms ease-in-out;
          transition: all 250ms ease-in-out;
}

.control-indicator--checkbox:before, .control-indicator--checkbox:after {
  top: 50%;
  width: 90%;
  height: 0.1em;
  background-color: #f1f1f1;
}

.control-indicator--checkbox:before {
  -webkit-transform: translate(-50%, -50%) rotate(45deg);
     -moz-transform: translate(-50%, -50%) rotate(45deg);
      -ms-transform: translate(-50%, -50%) rotate(45deg);
          transform: translate(-50%, -50%) rotate(45deg);
}

.control-indicator--checkbox:after {
  -webkit-transform: translate(-50%, -50%) rotate(-45deg);
     -moz-transform: translate(-50%, -50%) rotate(-45deg);
      -ms-transform: translate(-50%, -50%) rotate(-45deg);
          transform: translate(-50%, -50%) rotate(-45deg);
}

.control-indicator--tickbox:before {
  top: 0;
  -webkit-transform: translateX(-50%) rotate(45deg);
     -moz-transform: translateX(-50%) rotate(45deg);
      -ms-transform: translateX(-50%) rotate(45deg);
          transform: translateX(-50%) rotate(45deg);
  border: 0.1em solid #f1f1f1;
  background-color: transparent;
  width: 40%;
  height: 80%;
  border-top: 0;
  border-left: 0;
}

.control-indicator--tickbox:after {
  display: none;
}

.control--custom-input:checked ~ .control-indicator--checkbox:before, .control--custom-input:checked ~ .control-indicator--checkbox:after,
.control--custom-input:checked ~ .control-indicator--tickbox:before,
.control--custom-input:checked ~ .control-indicator--tickbox:after {
  opacity: 1;
}

.control-indicator--radio {
  border-radius: 50%;
}

.control--custom-input:checked ~ .control-indicator--radio {
  background-color: #f1f1f1;
  border: 0.3em solid #181830;
}

/**
 * Custom select element
 *
 * Firefox 39+, IE10+
 *
 *	<div class="form-controlGroup">
 *			<label for="cs-choice" class="form-label">Custom select</label>
 *			<div class="form-controlGroup-inputWrapper form-controlGroup-inputWrapper--select">
 *				<select id="cs-choice" name="cs-choice" class="form-input form-input--select">
 *					<option value="--">Select title</option>
 *					<option value="Mr">Mr</option>
 *					<option value="Mrs">Mrs</option>
 *				</select>
 *			</div>
 *	</div>
 */
.form-controlGroup-inputWrapper--select {
  position: relative;
  display: block;
  padding: 0;
  /* Custom arrow sits on top of the select - could be an image, SVG, icon font, etc. or the arrow could just baked into the bg image on the select */
}

.form-controlGroup-inputWrapper--select:after {
  color: #181830;
  content: "\25BC";
  font-size: .7em;
  padding: 0;
  position: absolute;
  right: 1.2em;
  top: 50%;
  margin-top: -9px;
  z-index: 2;
  /* These hacks make the select behind the arrow clickable in some browsers */
  -ms-pointer-events: none;
  pointer-events: none;
  background: url(#);
}

@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .form-controlGroup-inputWrapper--select:after {
    display: none;
  }
}

.form-controlGroup-inputWrapper--select .form-input--select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .form-controlGroup-inputWrapper--select .form-input--select:focus::-ms-value {
    background: transparent;
    color: #222;
  }
}

option {
  font-weight: normal;
}

/**
 * Icons
 */
[class^="icon-"], [class*=" icon-"] {
  speak: none;
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}

.icon-large {
  display: block;
  width: 120px;
  height: 120px;
}

.icon-small {
  display: inline-block;
  width: 25px;
  height: 25px;
  vertical-align: top;
}

/**
 * Links
 */
a {
  -webkit-transition: all 100ms ease-in-out;
     -moz-transition: all 100ms ease-in-out;
          transition: all 100ms ease-in-out;
}

a, a:link {
  color: #288ad6;
  text-decoration: none;
}

a:visited {
  color: #288ad6;
  text-decoration: none;
}

a:hover, a:focus {
  color: #185380;
}

a:active {
  color: #185380;
}

/**
 * Buttons
 * =================================
 * Index:
 * - Associated Button Variables
 * - Base button styling
 * – Button Modifiers
 * 	 – btn--primary
 *   – btn--block
 */
/**
 * Define associated Button variables
 */
/**
 * Base button styles – Based on csswizardry.com/beautons
 *
 * 1. Allow us to better style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Stop buttons wrapping and looking broken.
 * 4. Make buttons inherit font styles.
 * 5. Force all elements using beautons to appear clickable.
 * 6. Normalise box model styles.
 * 7. If the button’s text is 1em, and the button is (3 * font-size) tall, then
 *    there is 1em of space above and below that text. We therefore apply 1em
 *    of space to the left and right, as padding, to keep consistent spacing.
 * 8. Fixes odd inner spacing in IE7.
 * 9. Don’t allow buttons to have underlines; it kinda ruins the illusion.
 *10. Prevents from inheriting default anchor styles.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  white-space: nowrap;
  /* [3] */
  font-family: inherit;
  /* [4] */
  font-size: 100%;
  /* [4] */
  cursor: pointer;
  /* [5] */
  border: none;
  /* [6] */
  margin: 0;
  /* [6] */
  padding-top: 0;
  /* [6] */
  padding-bottom: 0;
  /* [6] */
  line-height: 2.5;
  /* [7] */
  height: 2.5em;
  /* [7] */
  padding-right: 1.5em;
  /* [7] */
  padding-left: 1.5em;
  /* [7] */
  overflow: visible;
  /* [8] */
  text-align: center;
  background-color: #95a5a6;
  border-radius: 5px;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.btn, .btn:link, .btn:visited {
  color: #fff;
}

.btn:hover, .btn:active, .btn:focus {
  background-color: #798d8f;
}

.btn, .btn:hover, .btn:active, .btn:focus, .btn:visited {
  text-decoration: none;
}

.btn:active, .btn:focus {
  outline: none;
}

.btn.disabled, .btn[disabled] {
  cursor: default;
  background-image: none;
  opacity: .65;
}

.btn--primary {
  background-color: #288ad6;
}

.btn--primary, .btn--primary:link, .btn--primary:visited {
  color: #fff;
}

.btn--primary:hover, .btn--primary:active, .btn--primary:focus {
  background-color: #206eab;
}

.btn--block {
  display: block;
  width: 100%;
  padding-left: 0;
  padding-right: 0;
}

.btn--block + .btn--block {
  margin-top: 10px;
}

input[type="submit"].btn--block,
input[type="reset"].btn--block,
input[type="button"].btn--block {
  width: 100%;
}

/**
 * The Kickoff Grid
 * =================================
 * Default grid styles
 * Media queries
 * Centred columns
 */
/* Import Grid helpers and mixins */
/**
 * Kickoff grid helpers
 */
/**
 * Grid columns width calcs
 */
/**
 * Column width mixin
 * Usage:
 * @include column(2);
 */
/**
 * Gutter calcs
 * Default: percent
 * Usage: gutterCalc() or gutterCalc(false)
 */
/**
 * Column padding (gutter)
 * Default: percent (can be pixels though)
 * Usage: paddingCalc() or paddingCalc(px)
 */
/**
 * Shunts, offset columns, column source order calculations
 */
/**
 * Basic Usage:
 * =================================
	<div class="g-row">
		<div class="g-col g-span4"></div>
		<div class="g-col g-span8"></div>
	</div>
 */
.g-row {
  width: 100%;
  margin: 0 auto;
}

.g-row:after {
  content: "";
  display: table;
  clear: both;
}

.g-row .g-row {
  min-width: 0;
}

.g-row .g-row .g-col {
  padding: 0;
}

@media screen and (min-width: 46.875em) {
  .g-col {
    float: left;
    min-height: 1px;
    position: relative;
    clear: none;
    -moz-box-sizing: border-box;
         box-sizing: border-box;
    margin-left: 2%;
  }
  .g-col:first-child {
    margin-left: 0;
  }
  .g-col + .g-col:last-child {
    float: right;
  }
  .g-col + .g-col.end {
    float: left;
  }
}

@media screen and (min-width: 46.875em) {
  .g-span1 {
    width: 6.5%;
  }
  .g-span2 {
    width: 15%;
  }
  .g-span3 {
    width: 23.5%;
  }
  .g-span4 {
    width: 32%;
  }
  .g-span5 {
    width: 40.5%;
  }
  .g-span6 {
    width: 49%;
  }
  .g-span7 {
    width: 57.5%;
  }
  .g-span8 {
    width: 66%;
  }
  .g-span9 {
    width: 74.5%;
  }
  .g-span10 {
    width: 83%;
  }
  .g-span11 {
    width: 91.5%;
  }
  .g-span12 {
    width: 100%;
  }
  /**
	 * Offset columns
	 * http://trykickoff.com/demos/grids.html#offset
	 */
  /**
	 * Source ordering (push & pull)
	 * http://trykickoff.com/demos/grids.html#source-ordering
	 */
}

/**
 * Centred columns
 */
.g-col.g-col--centered,
.g-col.g-col--centred {
  float: none;
  margin: 0 auto;
}

/**
 * Block grids
 * These are suited for repeating blocks of content. See below for usage
 *
 * Usage:
 * <ul class="l-blockGrid l-blockGrid--3">
 *     <li class="l-blockGrid-item"></li>
 * </ul>
 *
 * <div class="l-blockGrid l-blockGrid--4 l-blockGrid--2--narrow l-blockGrid--6--wide">
 *     <div class="l-blockGrid-item"></div>
 * </div>
 */
/**
 * Block grid breakpoints
 * Add or remove any breakpoints that you may or may not need.
 * Note: Reorder these if your breakpoints aren't in this order, 
 * should be smallest to largest.
 */
/**
 * Generate block grids based on colum count
 */
.l-blockGrid {
  display: block;
  list-style-type: none;
  margin: 0;
}

.l-blockGrid:after {
  content: "";
  display: table;
  clear: both;
}

.l-blockGrid-item {
  display: block;
  height: auto;
}

@media screen and (min-width: 25em) {
  .l-blockGrid--1--narrow .l-blockGrid-item {
    float: left;
    width: 100%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--1--narrow .l-blockGrid-item:nth-of-type(1n + 1) {
    clear: left;
  }
  .l-blockGrid--1--narrow .l-blockGrid-item:not(:nth-of-type(1n + 1)) {
    clear: none;
  }
  .l-blockGrid--2--narrow .l-blockGrid-item {
    float: left;
    width: 50%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--2--narrow .l-blockGrid-item:nth-of-type(2n + 1) {
    clear: left;
  }
  .l-blockGrid--2--narrow .l-blockGrid-item:not(:nth-of-type(2n + 1)) {
    clear: none;
  }
  .l-blockGrid--3--narrow .l-blockGrid-item {
    float: left;
    width: 33.3333333333%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--3--narrow .l-blockGrid-item:nth-of-type(3n + 1) {
    clear: left;
  }
  .l-blockGrid--3--narrow .l-blockGrid-item:not(:nth-of-type(3n + 1)) {
    clear: none;
  }
  .l-blockGrid--4--narrow .l-blockGrid-item {
    float: left;
    width: 25%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--4--narrow .l-blockGrid-item:nth-of-type(4n + 1) {
    clear: left;
  }
  .l-blockGrid--4--narrow .l-blockGrid-item:not(:nth-of-type(4n + 1)) {
    clear: none;
  }
  .l-blockGrid--5--narrow .l-blockGrid-item {
    float: left;
    width: 20%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--5--narrow .l-blockGrid-item:nth-of-type(5n + 1) {
    clear: left;
  }
  .l-blockGrid--5--narrow .l-blockGrid-item:not(:nth-of-type(5n + 1)) {
    clear: none;
  }
  .l-blockGrid--6--narrow .l-blockGrid-item {
    float: left;
    width: 16.6666666667%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--6--narrow .l-blockGrid-item:nth-of-type(6n + 1) {
    clear: left;
  }
  .l-blockGrid--6--narrow .l-blockGrid-item:not(:nth-of-type(6n + 1)) {
    clear: none;
  }
  .l-blockGrid--7--narrow .l-blockGrid-item {
    float: left;
    width: 14.2857142857%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--7--narrow .l-blockGrid-item:nth-of-type(7n + 1) {
    clear: left;
  }
  .l-blockGrid--7--narrow .l-blockGrid-item:not(:nth-of-type(7n + 1)) {
    clear: none;
  }
  .l-blockGrid--8--narrow .l-blockGrid-item {
    float: left;
    width: 12.5%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--8--narrow .l-blockGrid-item:nth-of-type(8n + 1) {
    clear: left;
  }
  .l-blockGrid--8--narrow .l-blockGrid-item:not(:nth-of-type(8n + 1)) {
    clear: none;
  }
  .l-blockGrid--9--narrow .l-blockGrid-item {
    float: left;
    width: 11.1111111111%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--9--narrow .l-blockGrid-item:nth-of-type(9n + 1) {
    clear: left;
  }
  .l-blockGrid--9--narrow .l-blockGrid-item:not(:nth-of-type(9n + 1)) {
    clear: none;
  }
  .l-blockGrid--10--narrow .l-blockGrid-item {
    float: left;
    width: 10%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--10--narrow .l-blockGrid-item:nth-of-type(10n + 1) {
    clear: left;
  }
  .l-blockGrid--10--narrow .l-blockGrid-item:not(:nth-of-type(10n + 1)) {
    clear: none;
  }
  .l-blockGrid--11--narrow .l-blockGrid-item {
    float: left;
    width: 9.0909090909%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--11--narrow .l-blockGrid-item:nth-of-type(11n + 1) {
    clear: left;
  }
  .l-blockGrid--11--narrow .l-blockGrid-item:not(:nth-of-type(11n + 1)) {
    clear: none;
  }
  .l-blockGrid--12--narrow .l-blockGrid-item {
    float: left;
    width: 8.3333333333%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--12--narrow .l-blockGrid-item:nth-of-type(12n + 1) {
    clear: left;
  }
  .l-blockGrid--12--narrow .l-blockGrid-item:not(:nth-of-type(12n + 1)) {
    clear: none;
  }
}

@media screen and (min-width: 46.875em) {
  .l-blockGrid--1 .l-blockGrid-item {
    float: left;
    width: 100%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--1 .l-blockGrid-item:nth-of-type(1n + 1) {
    clear: left;
  }
  .l-blockGrid--1 .l-blockGrid-item:not(:nth-of-type(1n + 1)) {
    clear: none;
  }
  .l-blockGrid--2 .l-blockGrid-item {
    float: left;
    width: 50%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--2 .l-blockGrid-item:nth-of-type(2n + 1) {
    clear: left;
  }
  .l-blockGrid--2 .l-blockGrid-item:not(:nth-of-type(2n + 1)) {
    clear: none;
  }
  .l-blockGrid--3 .l-blockGrid-item {
    float: left;
    width: 33.3333333333%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--3 .l-blockGrid-item:nth-of-type(3n + 1) {
    clear: left;
  }
  .l-blockGrid--3 .l-blockGrid-item:not(:nth-of-type(3n + 1)) {
    clear: none;
  }
  .l-blockGrid--4 .l-blockGrid-item {
    float: left;
    width: 25%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--4 .l-blockGrid-item:nth-of-type(4n + 1) {
    clear: left;
  }
  .l-blockGrid--4 .l-blockGrid-item:not(:nth-of-type(4n + 1)) {
    clear: none;
  }
  .l-blockGrid--5 .l-blockGrid-item {
    float: left;
    width: 20%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--5 .l-blockGrid-item:nth-of-type(5n + 1) {
    clear: left;
  }
  .l-blockGrid--5 .l-blockGrid-item:not(:nth-of-type(5n + 1)) {
    clear: none;
  }
  .l-blockGrid--6 .l-blockGrid-item {
    float: left;
    width: 16.6666666667%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--6 .l-blockGrid-item:nth-of-type(6n + 1) {
    clear: left;
  }
  .l-blockGrid--6 .l-blockGrid-item:not(:nth-of-type(6n + 1)) {
    clear: none;
  }
  .l-blockGrid--7 .l-blockGrid-item {
    float: left;
    width: 14.2857142857%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--7 .l-blockGrid-item:nth-of-type(7n + 1) {
    clear: left;
  }
  .l-blockGrid--7 .l-blockGrid-item:not(:nth-of-type(7n + 1)) {
    clear: none;
  }
  .l-blockGrid--8 .l-blockGrid-item {
    float: left;
    width: 12.5%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--8 .l-blockGrid-item:nth-of-type(8n + 1) {
    clear: left;
  }
  .l-blockGrid--8 .l-blockGrid-item:not(:nth-of-type(8n + 1)) {
    clear: none;
  }
  .l-blockGrid--9 .l-blockGrid-item {
    float: left;
    width: 11.1111111111%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--9 .l-blockGrid-item:nth-of-type(9n + 1) {
    clear: left;
  }
  .l-blockGrid--9 .l-blockGrid-item:not(:nth-of-type(9n + 1)) {
    clear: none;
  }
  .l-blockGrid--10 .l-blockGrid-item {
    float: left;
    width: 10%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--10 .l-blockGrid-item:nth-of-type(10n + 1) {
    clear: left;
  }
  .l-blockGrid--10 .l-blockGrid-item:not(:nth-of-type(10n + 1)) {
    clear: none;
  }
  .l-blockGrid--11 .l-blockGrid-item {
    float: left;
    width: 9.0909090909%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--11 .l-blockGrid-item:nth-of-type(11n + 1) {
    clear: left;
  }
  .l-blockGrid--11 .l-blockGrid-item:not(:nth-of-type(11n + 1)) {
    clear: none;
  }
  .l-blockGrid--12 .l-blockGrid-item {
    float: left;
    width: 8.3333333333%;
    /**
				 * Clear incase of height difference of block items.
				 * Note: Remove these if all your items are the same height.
				 */
  }
  .l-blockGrid--12 .l-blockGrid-item:nth-of-type(12n + 1) {
    clear: left;
  }
  .l-blockGrid--12 .l-blockGrid-item:not(:nth-of-type(12n + 1)) {
    clear: none;
  }
}

/**
 * Guttered block grid mutator
 */
.l-blockGrid--guttered {
  margin-left: -20px;
}

.l-blockGrid--guttered .l-blockGrid-item {
  padding-left: 20px;
  padding-bottom: 20px;
}

/**
 * Lists
 * - (Un)ordered lists
 * - Unstyled lists
 * - Definition lists
 * - Centred lists
 * - Floated lists
 */
ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}

ul, ol {
  padding: 0;
  margin: 0 0 28px 28px;
}

ul ul,
ul ol, ol ul,
ol ol {
  margin-left: 56px;
}

ul ul, ol ul {
  list-style-type: circle;
}

ul ul ul, ol ul ul {
  list-style-type: square;
}

ul ol, ol ol {
  list-style-type: upper-roman;
}

ul ol ol, ol ol ol {
  list-style-type: lower-roman;
}

ul ul, ul ol, ol ul, ol ol {
  margin-bottom: 0;
}

/**
 * Unstyled lists
 */
.unstyled {
  margin: 0;
  padding: 0;
  list-style: none;
  list-style-image: none;
}

/**
 * Definition lists
 */
dl {
  margin-bottom: 28px;
}

dt {
  font-weight: bold;
}

dd {
  margin-left: 28px;
}

/**
 * Centred lists
 *
 * Usage:
	<ul class="l-list--centred">
		<li></li>
	</ul>
 */
.l-list--centred, .l-list--centered {
  text-align: center;
}

.l-list--centred li, .l-list--centered li {
  display: inline;
}

/**
 * Floated lists
 * Usage:
	<ul class="l-list--floated">
		<li></li>
	</ul>
 */
.l-list--floated:after {
  content: "";
  display: table;
  clear: both;
}

.l-list--floated li {
  float: left;
  display: inline-block;
}

/**
 * Embedded content
 */
img {
  font-style: italic;
  color: #c00;
  border: 0;
  -ms-interpolation-mode: bicubic;
}

img.img--left {
  margin: 0 20px 0 0;
}

img.img--right {
  margin: 0 0 0 20px;
}

svg:not(:root) {
  overflow: hidden;
}

img, object, embed, video {
  max-width: 100%;
}

/**
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/**
 * Media Object
 *
 * Place any image- and text-like content side-by-side, as per:
 * http://csswizardry.com/2013/05/the-flag-object/
 *
 * +---------+
 * |         | ~~~~ ~~~~~~~~~~~
 * |         | ~~~~~~~ ~~~~~ ~~
 * |         | ~~~~~~~~~~~~
 * +---------+
 *
 * Markup:
	<div class="media">
		<div class="media-img">
			<img src="http://placekitten.com/100/100">
		</div>
		<div class="media-body">
			<p>Lorem ipsum dolor sit amet.</p>
		</div>
	</div>
 */
.media {
  display: table;
  width: 100%;
}

.media-img,
.media-body {
  display: table-cell;
  vertical-align: middle;
}

.media--top .media-img, .media--top
.media-body {
  vertical-align: top;
}

.media--bottom .media-img, .media--bottom
.media-body {
  vertical-align: bottom;
}

.media-body {
  width: 100%;
}

.media-img {
  padding-right: 10px;
}

.media-img > img {
  display: block;
  max-width: none;
}

.media--rev .media-img {
  padding-right: 0;
  padding-left: 10px;
}

@media screen and (max-width: 46.875em) {
  .media--stackOnSkinny .media-img,
  .media--stackOnSkinny .media-body {
    display: block;
  }
}

@media screen and (min-width: 46.875em) {
  .media--stackOnWide .media-img,
  .media--stackOnWide .media-body {
    display: block;
  }
}

/**
 * Fluid width video
 * - 16:9 aspect ratio by default
 * Usage:
 * <div class="fluidVideo"><iframe src="..."/></div>
 */
.fluidVideo {
  position: relative;
  padding-bottom: 56.25%;
  /* 16:9 */
  height: 0;
}

.fluidVideo iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/**
 * Tables
 * =================================
 * Index:
 * - Associated Table Variables
 * - Default table Styles
 * – Table modifiers:
 *   - .table--condensed
 *   - .table--bordered
 *   - .table--rounded
 *   - .table--striped
 *   – .table--hover
 * – .responsiveTable
 */
/**
 * Define associated Table variables
 */
/**
 * Customizes the `.table` component with basic values, each used across all table variations.
 */
table {
  width: 100%;
  max-width: 100%;
  margin-bottom: 28px;
  border-spacing: 0;
  border: 2px solid #ccc;
  background-color: #f1f1f1;
}

table th,
table td {
  padding: 8px;
  line-height: 28px;
  vertical-align: top;
  border: 1px solid #ccc;
}

table th:first-child,
table td:first-child {
  border-left: 0;
}

table th:last-child,
table td:last-child {
  border-right: 0;
}

table > thead th,
table > thead td {
  vertical-align: bottom;
  border-bottom: 2px solid #ccc;
}

table > tfoot td {
  border-top: 2px solid #ccc;
  border-bottom: 0;
}

table > thead:first-child > tr:first-child > th,
table > thead:first-child > tr:first-child > td {
  border-top: 0;
}

table tr:hover td, table tr:hover th {
  background-color: inherit;
}

table > tbody + tbody {
  border-top: 2px solid #ccc;
}

table table,
table .table {
  background-color: #f1f1f1;
}

th {
  text-align: left;
}

/**
 * Zebra-striping
 * Default zebra-stripe styles (alternating gray and transparent backgrounds)
 */
.table--striped tbody :nth-child(odd) th,
.table--striped tbody :nth-child(odd) td {
  background-color: #f9f9f9 !important;
}

/**
 * Responsive tables
 * Wrap your tables in `.responsiveTable` and we'll make them mobile friendly by enabling horizontal scrolling. Only applies <768px. Everything above that will display normally.
 *
 * If you need more responsive tables, consider Tablesaw by the Filament Group:
 * https://github.com/filamentgroup/tablesaw
 */
@media screen and (max-width: 46.875em) {
  .responsiveTable {
    width: 100%;
    margin-bottom: 21px;
    overflow-y: hidden;
    overflow-x: auto;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    border: 1px solid #ccc;
    -webkit-overflow-scrolling: touch;
  }
  .responsiveTable > table {
    margin-bottom: 0;
    border: 0;
  }
  .responsiveTable > table > thead th,
  .responsiveTable > table > thead td,
  .responsiveTable > table > tbody th,
  .responsiveTable > table > tbody td,
  .responsiveTable > table > tfoot th,
  .responsiveTable > table > tfoot td {
    white-space: nowrap;
  }
  .responsiveTable > table > thead th:first-child,
  .responsiveTable > table > thead td:first-child,
  .responsiveTable > table > tbody th:first-child,
  .responsiveTable > table > tbody td:first-child,
  .responsiveTable > table > tfoot th:first-child,
  .responsiveTable > table > tfoot td:first-child {
    border-left: 0;
  }
  .responsiveTable > table > thead th:last-child,
  .responsiveTable > table > thead td:last-child,
  .responsiveTable > table > tbody th:last-child,
  .responsiveTable > table > tbody td:last-child,
  .responsiveTable > table > tfoot th:last-child,
  .responsiveTable > table > tfoot td:last-child {
    border-right: 0;
  }
  .responsiveTable > table > tbody > th,
  .responsiveTable > table > tbody > td,
  .responsiveTable > table > tfoot tr:last-child > th,
  .responsiveTable > table > tfoot tr:last-child > td {
    border-bottom: 0;
  }
}

/**
 * Preformatted code
 * Code typography styles for the <code> and <pre> elements
 */
/**
 * Define associated Code variables
 */
code,
pre {
  padding: 0 3px 2px;
  font-family: Menlo, Monaco, "Courier New", monospace;
  font-size: 16px;
  font-size: 0.8rem;
  color: #444;
  border-radius: 3px;
  -moz-tab-size: 3;
       tab-size: 3;
}

code {
  padding: 2px 4px;
  color: #444;
  background-color: #ddd;
}

pre {
  display: block;
  padding: 14px;
  margin: 0 0 28px;
  color: #444;
  background-color: #ddd;
  border-radius: 4px;
  white-space: pre;
}

pre code {
  padding: 0;
  color: #444;
  background-color: #ddd;
  border: 0;
}

.pre--scrollable {
  max-height: 340px;
  overflow-y: scroll;
}

/**
 * Skip to main content link
 * <div class="skipToContent"><a href="#mainContent" class="btn btn--primary">Skip to main content</a></div>
 */
.skipToContent {
  position: relative;
  text-align: center;
  height: 0;
}

.skipToContent a {
  position: relative;
  top: -100px;
  z-index: 100;
  background-color: #fff;
  -webkit-transition: all 100ms ease-in-out;
     -moz-transition: all 100ms ease-in-out;
          transition: all 100ms ease-in-out;
}

.skipToContent a:focus {
  top: 5px;
}

/**
 * Your app styles
 */
/**
 * Global app/site styles
 */
body {
  background-color: #f1f1f1;
}

/**
 * Default layout container
 */
.l-container {
  padding-left: 0px;
  padding-right: 0px;
  width: 95%;
  max-width: 1000px;
  margin: 0 auto;
}

.lt-ie9 .l-container {
  min-width: 1000px;
}

.browserupgrade {
  margin: .2em 0;
  background: #ccc;
  color: #000;
  padding: .2em 0;
}

/**
 * Views
 */
/* Helper/utility classes */
/**
 * Utilities
 * Non-semantic helper classes
 */
/**
 * Clearfix
 * http://www.cssmojo.com/latest_new_clearfix_so_far/
 * See mixins/_utility.scss for a mixin version of this
 */
.clearfix:after {
  content: "";
  display: table;
  clear: both;
}

.ir {
  background-color: transparent;
  background-repeat: no-repeat;
  border: 0;
  direction: ltr;
  display: block;
  overflow: hidden;
  text-align: left;
  text-indent: -999em;
}

.ir br {
  display: none;
}

.is-hidden {
  display: none !important;
  visibility: hidden !important;
}

.is-shown {
  display: block;
}

.is-visuallyHidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.is-visuallyHidden.focusable:active, .is-visuallyHidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

.is-invisible {
  visibility: hidden;
}

.l-floatLeft {
  float: left;
}

.l-floatRight {
  float: right;
}

.l-clear {
  clear: both;
  float: none;
}

.l-mb0 {
  margin-bottom: 0 !important;
}

.l-mt0 {
  margin-top: 0 !important;
}

/**
 * Responsive Utilities
 */
* {
  -webkit-tap-highlight-color: #181830 !important;
}

/* A hack for HTML5 contenteditable attribute on mobile */
textarea[contenteditable] {
  -webkit-appearance: none;
}

.promote-layer {
  /*
  This may promote the layer to a composited
  layer.

  Replace with will-change when available

  #perfmatters
  */
  -webkit-backface-visibility: hidden;
     -moz-backface-visibility: hidden;
          backface-visibility: hidden;
}

.transition {
  -webkit-transition: all 100ms ease-in-out;
     -moz-transition: all 100ms ease-in-out;
          transition: all 100ms ease-in-out;
}

/* Print styles */
/**
 * Print styles
 */
@media print {
  *,
  *:before,
  *:after,
  *:first-letter,
  *:first-line {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a:visited {
    text-decoration: underline;
  }
  a[href]:after {
    content: " (" attr(href) ")";
  }
  abbr[title]:after {
    content: " (" attr(title) ")";
  }
  /*
	 * Don't show links for images, or javascript/internal links
	 */
  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: "";
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
    /* h5bp.com/t */
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  @page {
    margin: .5cm;
  }
  p, h2, h3 {
    orphans: 3;
    widows: 3;
  }
  h2, h3 {
    page-break-after: avoid;
  }
}
/*# sourceMappingURL=kickoff.css.map */