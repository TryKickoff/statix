@charset "UTF-8";
/**
 * ██╗  ██╗██╗ ██████╗██╗  ██╗ ██████╗ ███████╗███████╗
 * ██║ ██╔╝██║██╔════╝██║ ██╔╝██╔═══██╗██╔════╝██╔════╝
 * █████╔╝ ██║██║     █████╔╝ ██║   ██║█████╗  █████╗
 * ██╔═██╗ ██║██║     ██╔═██╗ ██║   ██║██╔══╝  ██╔══╝
 * ██║  ██╗██║╚██████╗██║  ██╗╚██████╔╝██║     ██║
 * ╚═╝  ╚═╝╚═╝ ╚═════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝
 * By Zander Martineau & Ashley Nolan
 * http://trykickoff.com
 *
 * Project dependencies
 * =================================
 * - Mixins, helpers and functions
 * - Core variables
 * - CSS resets
 * - Typography styles
 * - Components
 * - Partials
 * - Views
 * - Global styles
 * - Helper/utility classes
 * - Print styles
 *
 * Read about our distinction between views, partials and components at
 * https://trykickoff.com/learn/css.html#views-partials--components
 *
 * ## Yeoman
 * The Yeoman generator can also be used to add new views, partials and
 * components. e.g. `yo kickoff:sass:component foo` will create a new file:
 * `scss/components/_component.scss` and add the `@import` statement in this
 * file. Install the generator by running `npm i -g yo generator-kickoff`
 *
 */
/*
 * Mixins, helpers and functions
 */
/**
 * Usage:
 *
 * ko-getVal(100, $map) - uses an integer
 * ko-getVal(mid, $map) - uses a Sass map
 * ko-getVal($foo, $map) - uses a Sass variable
 */
/**
 * Get breakpoints
 *
 * ko-bp()
 *
 * Usage:
 * ko-bp(100) - uses an integer
 * ko-bp(mid) - uses the $breakpoints Sass map
 * ko-bp($foo) - uses a Sass variable
 */
/**
 * Get type size
 *
 * ko-type()
 *
 * Usage:
 * ko-type(100) - uses an integer
 * ko-type(mid) - uses the $type Sass map
 * ko-type($foo) - uses a Sass variable
 */
/**
 * Usage:
 *
 $grid-configuration: (
   'columns': 12,
   'layouts': (
     'small': 800px,
     'medium': 1000px,
     'large': 1200px,
   ),
 );

 div {
   font-size: ko-map-deep-get($grid-configuration, 'columns');
   width: ko-map-deep-get($grid-configuration, 'layouts', 'medium');
 }
 */
/**
 * Modular scale
 * =================================
 * Usage: ko-modular-scale($font-size-base, 3, $type-scale)
 * or with the shorthand version: ko-ms(3)
 */
/**
 * Shorthand modular scale
 * Uses the $font-size-base and $type-scale framework variables so that you
 * only need to provide the scale increment
 *
 * e.g. ko-ms(5)
 */
/**
 * Multiply
 * =================
 * Multiply any value
 *
 * Usage:
 * ko-multiply(15, 2)
 * ko-multiply($baseline, 1.5)
 */
/**
 * Sass Mixins
 * - Responsive
 * - Dimensions
 * - Positioning
 * - Utility
 * - Forms
 * - Module Naming Helpers
 */
/**
 * Responsive media query mixins
 * - These are used so that we can define separate media-query content
 * - Arguments can use:
 *   - a named breakpoint in the $breakpoints map, e.g. mid
 *   - a pixel value e.g. 500px
 *   - a unitless value that is eqivalent to a pixel e.g. 500
 */
/**
 * Min-width media query:
 * - Equivalent to: @media screen and (min-width: 20em) { ... }
 * - Usage: @include ko-respond-min(mid) { ... };
 */
/**
 * Max-width media query:
 * - Equivalent to: @media screen and (max-width: 20em) { ... }
 * - Usage: @include ko-respond-max(mid) { ... };
 */
/**
 * Min-max-width media query:
 * - Equivalent to: @media screen and (min-width: 10em) and (max-width: 20em) { ... }
 * - Usage: @include ko-respond-min-max(narrow, 600) { ... };
 */
/**
 *  HiDPI mixin.
 *  @include ko-hidpi { ... };
 *  Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)
 */
/**
 * Hidpi with a minimum width media query
 * @include ko-hidpi-min(bp(mid), 1.5) { ... };
 */
/**
 * Hidpi with a max width media query
 * @include ko-hidpi-max(bp(mid), 1.3) { ... };
 */
/**
 * Dimensions-based mixins
 * - REM calculation
 * - Typography mixins based on the REM mixin
 *   - font-size
 *   - line-height
 *   - font-size-ems
 */
/**
 * Typography mixins
 */
/**
 * ko-position
 * Usage:
 * @include ko-position(absolute, 10px 20px 30px 10px);
 */
/**
 * vertical-center
 * Vertically center any element. Needs support for CSS tranforms.
 * Usage:
 * @include ko-vertical-center;
 */
/**
 * Utility Mixins
 * - clearfix
 * - font-face
 * -
 * - sizing shortcuts
 *   - size
 *   - square
 * - resizable
 */
/**
 * Sizing shortcuts
 */
/**
 * bemify [modified for Kickoff]
 * https://gtihub.com/franzheidl/bemify
 * Franz Heidl 2015
 *
 * Usage: https://gist.github.com/mrmartineau/0cd2010bf265d712bafb
 */
/**
 * Core variables
 * Edit your color palette and app vars before your begin
 */
/**
 * Global color palette
 * =================================
 * - Generic colors
 * - Color scheme
 * - Common colors
 * - Links
 * - Text selection
 * - <hr>
 * - Any others..
 */
/**
 * Variables
 * =================================
 * - Typography
 * - Breakpoints
 * - Paths
 * - Layout & Grid
 * - App-specific
 */
/* stylelint-disable indentation */
/**
 * Typography
 * =================================
 *
 * Base sizes:
 * Set this in pixels (but do not add px),
 * the font-size mixin will convert to REMS
 */
/**
 * Breakpoints
 * =================================
 * There are no common breakpoints so these are just a suggestions
 * You'll need to define your own breakpoints to suit your design
 * Add your breakpoints to this Sass map
 * Used in the Kickoff grid
 */
/**
 * Grid
 * =================================
 * These variables will control the grid module.
 *
 * if your project doesnt use Kickoff’s default grid, you can delete these
 */
/**
 * Path variables
 * =================================
 */
/**
 * Z-index variables
 * =================================
 */
/**
 * App-specific variables
 * =================================
 */
/**
 * CSS resets
 */
/**
 * Kickoff reset
 * =================================
 * We use normalize.css for the bulk of our 'reset'
 */
html {
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Change the default font family in all browsers (opinionated).
     * 2. Correct the line height in all browsers.
     * 3. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
     * Remove the outline on focused links when they are also active or hovered
     * in all browsers (opinionated).
     */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Change the border, margin, and padding in all browsers (opinionated).
     */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

/**
 * Typography styles
 * See https://trykickoff.com/demos/typography.html for more info
 */
/**
 * Typography
 * =================================
 * - Base
 * - Paragraphs
 * - Headings
 * - Type sizes
 * - Misc
 * - Utilities
 *
 * Body font size, leadings etc have been set in _variables.scss
 *
 * See http://modularscale.com for
 *
 */
html {
  font-size: 18px;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%; }
  @media (min-width: 751px) {
    html {
      font-size: 20px; } }

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  font-size: 1rem;
  line-height: 1.4;
  color: #444;
  -webkit-font-feature-settings: "liga", "dlig", "hist";
          font-feature-settings: "liga", "dlig", "hist";
  -webkit-font-variant-ligatures: common-ligatures discretionary-ligatures historical-ligatures;
          font-variant-ligatures: common-ligatures discretionary-ligatures historical-ligatures; }

/**
 * Paragraphs
 */
p {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  font-size: 1rem;
  margin-top: 0;
  margin-bottom: 28px; }

/**
 * Headings
 */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  font-weight: bold;
  line-height: 1.1;
  text-rendering: optimizelegibility;
  margin-top: 0;
  margin-bottom: 28px; }
  h1 small,
  h2 small,
  h3 small,
  h4 small,
  h5 small,
  h6 small {
    font-weight: normal; }

h1,
.h1,
.alpha {
  font-size: 1.95312rem;
  margin-bottom: 56px; }

h2,
.h2,
.beta {
  font-size: 1.5625rem; }

h3,
.h3,
.gamma {
  font-size: 1.25rem; }

h4,
.h4,
.delta {
  font-size: 1rem; }

h5,
.h5,
.epsilon,
h6,
.h6,
.zeta {
  font-size: 1rem;
  margin-bottom: 0; }

* + h1,
* + .h1,
* + .alpha,
* + h2,
* + .h2,
* + .beta,
* + h3,
* + .h3,
* + .gamma,
* + h4,
* + .h4,
* + .delta {
  margin-top: 28px; }

small {
  font-size: 80%; }

/**
 * Miscellaneous
 */
strong,
b {
  font-weight: bold; }

em,
i {
  font-style: italic; }

abbr[title] {
  border-bottom: 1px dotted #ddd;
  cursor: help; }

/**
 * Blockquotes
 */
blockquote {
  padding-left: 10px;
  margin: 28px;
  border-left: 4px solid #cccccc; }
  blockquote p {
    margin-bottom: 0;
    font-size: 1rem;
    font-weight: 300; }
  blockquote small {
    display: block;
    color: #b3b3b3; }
    blockquote small::before {
      content: '\2014 \00A0'; }

q::before, q::after,
blockquote::before,
blockquote::after {
  content: ""; }

cite {
  font-style: normal; }

dfn {
  font-style: italic; }

mark {
  background: #feef6d;
  padding: 2px 4px;
  border-radius: 3px; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

samp {
  font-family: Menlo, Monaco, "Courier New", monospace; }

/**
 * Utilities
 */
.text-centre,
.text-center {
  text-align: center; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

::-moz-selection {
  color: #fff;
  background: #181830;
  text-shadow: none; }

::selection {
  color: #fff;
  background: #181830;
  text-shadow: none; }

hr {
  margin: 28px 0;
  border: 0;
  height: 1px;
  background-color: #b3b3b3; }

.hyphenate {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto; }

/**
 * Components
 * See https://trykickoff.com/demos/components.html for more info
 *
 * Note: place all 3rd party components at the top of the list
 */
.fluidVideo {
  position: relative;
  height: 0;
  padding-bottom: 56.25%; }
  .fluidVideo--4-3 {
    padding-bottom: 75%; }

.fluidVideo-item,
.fluidVideo iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

/**
 * The Kickoff Flexbox Grid
 * =================================
 * Default grid classes
 * Grid gutter options
 * Modifier Classes (column height and cell alignment)
 * Legacy fallbacks for flexbox
 * Grid span classes
 * Breakpoint stacking
 */
/* Import Grid helpers and mixins */
/**
 * Grid Variables
 * =================================
 * These are defined here so that the grid can run as a standalone module (outside of Kickoff),
 * as well as allowing these files to be generated into standard CSS.
 *
 * When importing the grid into your own project, copy the variables from this file into your own variables.scss
 * They will then override the values specified here (as long as the grid is imported below where your own variables are defined).
 */
/**
 * Kickoff grid helpers
 */
/**
 * Grid stacking
 * Stack grids based on a given breakpoint
 *
 * Usage:
 * .g--stack--narrow
 * .g--stack--wide
 */
/**
 * Gutter Calculations
 * Default: percent
 * Usage: ko-gutterCalc() or ko-gutterCalc(false)
 * When show-unit is true, returns the percentage, otherwise return a decimal
 */
/**
 * Grid columns width calculations
 * This is where the magic of working out the column widths happens
 *
 * $column-span: define the width for the number of columns required
 * $show-unit: Switch return value between percentage (default) and decimal
 * $include-gutters: if gutters should be included in the calculations. Default = false
 * $legacy-calc: if we are working out a legacy column width calculation, or not. Default = false
 */
/**
 * Column width mixin
 * Usage:
 * @include column(2);
 */
/**
 * Basic Usage:
 * =================================
	<div class="g">
		<div class="g-col g-span4 g-span6--mid"></div>
		<div class="g-col g-span8 g-span6--mid"></div>
	</div>
 */
.g {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row; }
  .g img {
    max-width: 100%; }

.g-col {
  display: block;
  box-sizing: border-box;
  -webkit-box-flex: 1;
      -ms-flex: 1 0 0%;
          flex: 1 0 0%;
  min-width: 0; }

/**
 * Gutter calcs – applied to grid columns in our grid (direct descendants only)
 * Default: pixels (can look at changing to percentage)
 * Usage: gutterCalc() or gutterCalc(false)
 */
.g--gutter {
  margin-left: -10px;
  margin-right: -10px; }
  .g--gutter > .g-col {
    padding-left: 10px;
    padding-right: 10px; }

.g--gutter--scaled > .g-col {
  margin-left: 2%;
  margin-right: 0; }
  .g--gutter--scaled > .g-col:first-child {
    margin-left: 0; }

.g--stack > .g-col {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
  max-width: 100%; }

.g--stack.g--gutter--scaled > .g-col {
  margin-left: 0; }

/**
 * .g--equalHeight – Equal Height Child Elements
 */
.g--equalHeight > .g-col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  .g--equalHeight > .g-col > * {
    -ms-flex-preferred-size: 100%;
        flex-basis: 100%; }

/**
 * Alignment
 * Modifier classes to move our grid elements around
 */
.g--alignTop {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start; }

.g--alignBottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end; }

.g--alignSelfBottom {
  -ms-flex-item-align: end;
      align-self: flex-end; }

.g--alignRight {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

.g--alignCenter {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.g--alignCenter--v {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

/**
 * Centering
 * Centers an individual column, rather than the entire grid
 */
.g-col--centered {
  margin: 0 auto; }

/**
 * Shrinking Content
 * Shrink a .g-col down to only the space it needs (flexbox only)
 *
 * Effectively just changes it’s values back to the default flex properties
 */
.g-col--shrink {
  -webkit-box-flex: 0;
      -ms-flex: 0 1 auto;
          flex: 0 1 auto; }

/**
 * Add fallbacks for non-flexbox supporting browsers (for example, IE8/9)
 */
.no-flexbox .g {
  display: block !important; }
  .no-flexbox .g:after {
    content: "";
    display: table;
    clear: both; }

.no-flexbox .g-col {
  float: left;
  min-height: 1px;
  clear: none;
  box-sizing: border-box; }

.no-flexbox .g--stack .g-col {
  width: 100%; }

.no-flexbox .g--equalHeight > .g-col {
  display: block; }

/**
 * Grid Span classes (for different breakpoints)
 *
 * Applied by using .g-spanx to .g-col elements, where x is the number of columns
 */
.g-span1 {
  -ms-flex-preferred-size: 8.33333% !important;
      flex-basis: 8.33333% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 8.33333% !important; }
  .g-span1.g-holdWidth {
    min-width: 83.33333px; }
    .g--gutter--scaled .g-span1.g-holdWidth {
      min-width: 63.33333px; }
  .g--gutter--scaled .g-span1 {
    -ms-flex-preferred-size: 6.5% !important;
        flex-basis: 6.5% !important;
    max-width: 6.5%;
    margin-left: 2%; }
  .no-flexbox .g-span1 {
    width: 8.33333% !important; }

.g-offset1 {
  margin-left: 8.33333% !important; }

.g-span2 {
  -ms-flex-preferred-size: 16.66667% !important;
      flex-basis: 16.66667% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 16.66667% !important; }
  .g-span2.g-holdWidth {
    min-width: 166.66667px; }
    .g--gutter--scaled .g-span2.g-holdWidth {
      min-width: 146.66667px; }
  .g--gutter--scaled .g-span2 {
    -ms-flex-preferred-size: 15% !important;
        flex-basis: 15% !important;
    max-width: 15%;
    margin-left: 2%; }
  .no-flexbox .g-span2 {
    width: 16.66667% !important; }

.g-offset2 {
  margin-left: 16.66667% !important; }

.g-span3 {
  -ms-flex-preferred-size: 25% !important;
      flex-basis: 25% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 25% !important; }
  .g-span3.g-holdWidth {
    min-width: 250px; }
    .g--gutter--scaled .g-span3.g-holdWidth {
      min-width: 230px; }
  .g--gutter--scaled .g-span3 {
    -ms-flex-preferred-size: 23.5% !important;
        flex-basis: 23.5% !important;
    max-width: 23.5%;
    margin-left: 2%; }
  .no-flexbox .g-span3 {
    width: 25% !important; }

.g-offset3 {
  margin-left: 25% !important; }

.g-span4 {
  -ms-flex-preferred-size: 33.33333% !important;
      flex-basis: 33.33333% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 33.33333% !important; }
  .g-span4.g-holdWidth {
    min-width: 333.33333px; }
    .g--gutter--scaled .g-span4.g-holdWidth {
      min-width: 313.33333px; }
  .g--gutter--scaled .g-span4 {
    -ms-flex-preferred-size: 32% !important;
        flex-basis: 32% !important;
    max-width: 32%;
    margin-left: 2%; }
  .no-flexbox .g-span4 {
    width: 33.33333% !important; }

.g-offset4 {
  margin-left: 33.33333% !important; }

.g-span5 {
  -ms-flex-preferred-size: 41.66667% !important;
      flex-basis: 41.66667% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 41.66667% !important; }
  .g-span5.g-holdWidth {
    min-width: 416.66667px; }
    .g--gutter--scaled .g-span5.g-holdWidth {
      min-width: 396.66667px; }
  .g--gutter--scaled .g-span5 {
    -ms-flex-preferred-size: 40.5% !important;
        flex-basis: 40.5% !important;
    max-width: 40.5%;
    margin-left: 2%; }
  .no-flexbox .g-span5 {
    width: 41.66667% !important; }

.g-offset5 {
  margin-left: 41.66667% !important; }

.g-span6 {
  -ms-flex-preferred-size: 50% !important;
      flex-basis: 50% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 50% !important; }
  .g-span6.g-holdWidth {
    min-width: 500px; }
    .g--gutter--scaled .g-span6.g-holdWidth {
      min-width: 480px; }
  .g--gutter--scaled .g-span6 {
    -ms-flex-preferred-size: 49% !important;
        flex-basis: 49% !important;
    max-width: 49%;
    margin-left: 2%; }
  .no-flexbox .g-span6 {
    width: 50% !important; }

.g-offset6 {
  margin-left: 50% !important; }

.g-span7 {
  -ms-flex-preferred-size: 58.33333% !important;
      flex-basis: 58.33333% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 58.33333% !important; }
  .g-span7.g-holdWidth {
    min-width: 583.33333px; }
    .g--gutter--scaled .g-span7.g-holdWidth {
      min-width: 563.33333px; }
  .g--gutter--scaled .g-span7 {
    -ms-flex-preferred-size: 57.5% !important;
        flex-basis: 57.5% !important;
    max-width: 57.5%;
    margin-left: 2%; }
  .no-flexbox .g-span7 {
    width: 58.33333% !important; }

.g-offset7 {
  margin-left: 58.33333% !important; }

.g-span8 {
  -ms-flex-preferred-size: 66.66667% !important;
      flex-basis: 66.66667% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 66.66667% !important; }
  .g-span8.g-holdWidth {
    min-width: 666.66667px; }
    .g--gutter--scaled .g-span8.g-holdWidth {
      min-width: 646.66667px; }
  .g--gutter--scaled .g-span8 {
    -ms-flex-preferred-size: 66% !important;
        flex-basis: 66% !important;
    max-width: 66%;
    margin-left: 2%; }
  .no-flexbox .g-span8 {
    width: 66.66667% !important; }

.g-offset8 {
  margin-left: 66.66667% !important; }

.g-span9 {
  -ms-flex-preferred-size: 75% !important;
      flex-basis: 75% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 75% !important; }
  .g-span9.g-holdWidth {
    min-width: 750px; }
    .g--gutter--scaled .g-span9.g-holdWidth {
      min-width: 730px; }
  .g--gutter--scaled .g-span9 {
    -ms-flex-preferred-size: 74.5% !important;
        flex-basis: 74.5% !important;
    max-width: 74.5%;
    margin-left: 2%; }
  .no-flexbox .g-span9 {
    width: 75% !important; }

.g-offset9 {
  margin-left: 75% !important; }

.g-span10 {
  -ms-flex-preferred-size: 83.33333% !important;
      flex-basis: 83.33333% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 83.33333% !important; }
  .g-span10.g-holdWidth {
    min-width: 833.33333px; }
    .g--gutter--scaled .g-span10.g-holdWidth {
      min-width: 813.33333px; }
  .g--gutter--scaled .g-span10 {
    -ms-flex-preferred-size: 83% !important;
        flex-basis: 83% !important;
    max-width: 83%;
    margin-left: 2%; }
  .no-flexbox .g-span10 {
    width: 83.33333% !important; }

.g-offset10 {
  margin-left: 83.33333% !important; }

.g-span11 {
  -ms-flex-preferred-size: 91.66667% !important;
      flex-basis: 91.66667% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 91.66667% !important; }
  .g-span11.g-holdWidth {
    min-width: 916.66667px; }
    .g--gutter--scaled .g-span11.g-holdWidth {
      min-width: 896.66667px; }
  .g--gutter--scaled .g-span11 {
    -ms-flex-preferred-size: 91.5% !important;
        flex-basis: 91.5% !important;
    max-width: 91.5%;
    margin-left: 2%; }
  .no-flexbox .g-span11 {
    width: 91.66667% !important; }

.g-offset11 {
  margin-left: 91.66667% !important; }

.g-span12 {
  -ms-flex-preferred-size: 100% !important;
      flex-basis: 100% !important;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  max-width: 100% !important; }
  .g-span12.g-holdWidth {
    min-width: 1000px; }
    .g--gutter--scaled .g-span12.g-holdWidth {
      min-width: 980px; }
  .g--gutter--scaled .g-span12 {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important;
    max-width: 100%;
    margin-left: 0; }
  .no-flexbox .g-span12 {
    width: 100% !important; }

@media (min-width: 400px) {
  .g-span1--narrow {
    -ms-flex-preferred-size: 8.33333% !important;
        flex-basis: 8.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 8.33333% !important; }
    .g-span1--narrow.g-holdWidth--narrow {
      min-width: 83.33333px; }
      .g--gutter--scaled .g-span1--narrow.g-holdWidth--narrow {
        min-width: 63.33333px; }
    .g--gutter--scaled .g-span1--narrow {
      -ms-flex-preferred-size: 6.5% !important;
          flex-basis: 6.5% !important;
      max-width: 6.5%;
      margin-left: 2%; }
    .no-flexbox .g-span1--narrow {
      width: 8.33333% !important; }
  .g-offset1--narrow {
    margin-left: 8.33333% !important; }
  .g-span2--narrow {
    -ms-flex-preferred-size: 16.66667% !important;
        flex-basis: 16.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 16.66667% !important; }
    .g-span2--narrow.g-holdWidth--narrow {
      min-width: 166.66667px; }
      .g--gutter--scaled .g-span2--narrow.g-holdWidth--narrow {
        min-width: 146.66667px; }
    .g--gutter--scaled .g-span2--narrow {
      -ms-flex-preferred-size: 15% !important;
          flex-basis: 15% !important;
      max-width: 15%;
      margin-left: 2%; }
    .no-flexbox .g-span2--narrow {
      width: 16.66667% !important; }
  .g-offset2--narrow {
    margin-left: 16.66667% !important; }
  .g-span3--narrow {
    -ms-flex-preferred-size: 25% !important;
        flex-basis: 25% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 25% !important; }
    .g-span3--narrow.g-holdWidth--narrow {
      min-width: 250px; }
      .g--gutter--scaled .g-span3--narrow.g-holdWidth--narrow {
        min-width: 230px; }
    .g--gutter--scaled .g-span3--narrow {
      -ms-flex-preferred-size: 23.5% !important;
          flex-basis: 23.5% !important;
      max-width: 23.5%;
      margin-left: 2%; }
    .no-flexbox .g-span3--narrow {
      width: 25% !important; }
  .g-offset3--narrow {
    margin-left: 25% !important; }
  .g-span4--narrow {
    -ms-flex-preferred-size: 33.33333% !important;
        flex-basis: 33.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 33.33333% !important; }
    .g-span4--narrow.g-holdWidth--narrow {
      min-width: 333.33333px; }
      .g--gutter--scaled .g-span4--narrow.g-holdWidth--narrow {
        min-width: 313.33333px; }
    .g--gutter--scaled .g-span4--narrow {
      -ms-flex-preferred-size: 32% !important;
          flex-basis: 32% !important;
      max-width: 32%;
      margin-left: 2%; }
    .no-flexbox .g-span4--narrow {
      width: 33.33333% !important; }
  .g-offset4--narrow {
    margin-left: 33.33333% !important; }
  .g-span5--narrow {
    -ms-flex-preferred-size: 41.66667% !important;
        flex-basis: 41.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 41.66667% !important; }
    .g-span5--narrow.g-holdWidth--narrow {
      min-width: 416.66667px; }
      .g--gutter--scaled .g-span5--narrow.g-holdWidth--narrow {
        min-width: 396.66667px; }
    .g--gutter--scaled .g-span5--narrow {
      -ms-flex-preferred-size: 40.5% !important;
          flex-basis: 40.5% !important;
      max-width: 40.5%;
      margin-left: 2%; }
    .no-flexbox .g-span5--narrow {
      width: 41.66667% !important; }
  .g-offset5--narrow {
    margin-left: 41.66667% !important; }
  .g-span6--narrow {
    -ms-flex-preferred-size: 50% !important;
        flex-basis: 50% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 50% !important; }
    .g-span6--narrow.g-holdWidth--narrow {
      min-width: 500px; }
      .g--gutter--scaled .g-span6--narrow.g-holdWidth--narrow {
        min-width: 480px; }
    .g--gutter--scaled .g-span6--narrow {
      -ms-flex-preferred-size: 49% !important;
          flex-basis: 49% !important;
      max-width: 49%;
      margin-left: 2%; }
    .no-flexbox .g-span6--narrow {
      width: 50% !important; }
  .g-offset6--narrow {
    margin-left: 50% !important; }
  .g-span7--narrow {
    -ms-flex-preferred-size: 58.33333% !important;
        flex-basis: 58.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 58.33333% !important; }
    .g-span7--narrow.g-holdWidth--narrow {
      min-width: 583.33333px; }
      .g--gutter--scaled .g-span7--narrow.g-holdWidth--narrow {
        min-width: 563.33333px; }
    .g--gutter--scaled .g-span7--narrow {
      -ms-flex-preferred-size: 57.5% !important;
          flex-basis: 57.5% !important;
      max-width: 57.5%;
      margin-left: 2%; }
    .no-flexbox .g-span7--narrow {
      width: 58.33333% !important; }
  .g-offset7--narrow {
    margin-left: 58.33333% !important; }
  .g-span8--narrow {
    -ms-flex-preferred-size: 66.66667% !important;
        flex-basis: 66.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 66.66667% !important; }
    .g-span8--narrow.g-holdWidth--narrow {
      min-width: 666.66667px; }
      .g--gutter--scaled .g-span8--narrow.g-holdWidth--narrow {
        min-width: 646.66667px; }
    .g--gutter--scaled .g-span8--narrow {
      -ms-flex-preferred-size: 66% !important;
          flex-basis: 66% !important;
      max-width: 66%;
      margin-left: 2%; }
    .no-flexbox .g-span8--narrow {
      width: 66.66667% !important; }
  .g-offset8--narrow {
    margin-left: 66.66667% !important; }
  .g-span9--narrow {
    -ms-flex-preferred-size: 75% !important;
        flex-basis: 75% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 75% !important; }
    .g-span9--narrow.g-holdWidth--narrow {
      min-width: 750px; }
      .g--gutter--scaled .g-span9--narrow.g-holdWidth--narrow {
        min-width: 730px; }
    .g--gutter--scaled .g-span9--narrow {
      -ms-flex-preferred-size: 74.5% !important;
          flex-basis: 74.5% !important;
      max-width: 74.5%;
      margin-left: 2%; }
    .no-flexbox .g-span9--narrow {
      width: 75% !important; }
  .g-offset9--narrow {
    margin-left: 75% !important; }
  .g-span10--narrow {
    -ms-flex-preferred-size: 83.33333% !important;
        flex-basis: 83.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 83.33333% !important; }
    .g-span10--narrow.g-holdWidth--narrow {
      min-width: 833.33333px; }
      .g--gutter--scaled .g-span10--narrow.g-holdWidth--narrow {
        min-width: 813.33333px; }
    .g--gutter--scaled .g-span10--narrow {
      -ms-flex-preferred-size: 83% !important;
          flex-basis: 83% !important;
      max-width: 83%;
      margin-left: 2%; }
    .no-flexbox .g-span10--narrow {
      width: 83.33333% !important; }
  .g-offset10--narrow {
    margin-left: 83.33333% !important; }
  .g-span11--narrow {
    -ms-flex-preferred-size: 91.66667% !important;
        flex-basis: 91.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 91.66667% !important; }
    .g-span11--narrow.g-holdWidth--narrow {
      min-width: 916.66667px; }
      .g--gutter--scaled .g-span11--narrow.g-holdWidth--narrow {
        min-width: 896.66667px; }
    .g--gutter--scaled .g-span11--narrow {
      -ms-flex-preferred-size: 91.5% !important;
          flex-basis: 91.5% !important;
      max-width: 91.5%;
      margin-left: 2%; }
    .no-flexbox .g-span11--narrow {
      width: 91.66667% !important; }
  .g-offset11--narrow {
    margin-left: 91.66667% !important; }
  .g-span12--narrow {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 100% !important; }
    .g-span12--narrow.g-holdWidth--narrow {
      min-width: 1000px; }
      .g--gutter--scaled .g-span12--narrow.g-holdWidth--narrow {
        min-width: 980px; }
    .g--gutter--scaled .g-span12--narrow {
      -ms-flex-preferred-size: 100% !important;
          flex-basis: 100% !important;
      max-width: 100%;
      margin-left: 0; }
    .no-flexbox .g-span12--narrow {
      width: 100% !important; } }

@media (min-width: 750px) {
  .g-span1--mid {
    -ms-flex-preferred-size: 8.33333% !important;
        flex-basis: 8.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 8.33333% !important; }
    .g-span1--mid.g-holdWidth--mid {
      min-width: 83.33333px; }
      .g--gutter--scaled .g-span1--mid.g-holdWidth--mid {
        min-width: 63.33333px; }
    .g--gutter--scaled .g-span1--mid {
      -ms-flex-preferred-size: 6.5% !important;
          flex-basis: 6.5% !important;
      max-width: 6.5%;
      margin-left: 2%; }
    .no-flexbox .g-span1--mid {
      width: 8.33333% !important; }
  .g-offset1--mid {
    margin-left: 8.33333% !important; }
  .g-span2--mid {
    -ms-flex-preferred-size: 16.66667% !important;
        flex-basis: 16.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 16.66667% !important; }
    .g-span2--mid.g-holdWidth--mid {
      min-width: 166.66667px; }
      .g--gutter--scaled .g-span2--mid.g-holdWidth--mid {
        min-width: 146.66667px; }
    .g--gutter--scaled .g-span2--mid {
      -ms-flex-preferred-size: 15% !important;
          flex-basis: 15% !important;
      max-width: 15%;
      margin-left: 2%; }
    .no-flexbox .g-span2--mid {
      width: 16.66667% !important; }
  .g-offset2--mid {
    margin-left: 16.66667% !important; }
  .g-span3--mid {
    -ms-flex-preferred-size: 25% !important;
        flex-basis: 25% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 25% !important; }
    .g-span3--mid.g-holdWidth--mid {
      min-width: 250px; }
      .g--gutter--scaled .g-span3--mid.g-holdWidth--mid {
        min-width: 230px; }
    .g--gutter--scaled .g-span3--mid {
      -ms-flex-preferred-size: 23.5% !important;
          flex-basis: 23.5% !important;
      max-width: 23.5%;
      margin-left: 2%; }
    .no-flexbox .g-span3--mid {
      width: 25% !important; }
  .g-offset3--mid {
    margin-left: 25% !important; }
  .g-span4--mid {
    -ms-flex-preferred-size: 33.33333% !important;
        flex-basis: 33.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 33.33333% !important; }
    .g-span4--mid.g-holdWidth--mid {
      min-width: 333.33333px; }
      .g--gutter--scaled .g-span4--mid.g-holdWidth--mid {
        min-width: 313.33333px; }
    .g--gutter--scaled .g-span4--mid {
      -ms-flex-preferred-size: 32% !important;
          flex-basis: 32% !important;
      max-width: 32%;
      margin-left: 2%; }
    .no-flexbox .g-span4--mid {
      width: 33.33333% !important; }
  .g-offset4--mid {
    margin-left: 33.33333% !important; }
  .g-span5--mid {
    -ms-flex-preferred-size: 41.66667% !important;
        flex-basis: 41.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 41.66667% !important; }
    .g-span5--mid.g-holdWidth--mid {
      min-width: 416.66667px; }
      .g--gutter--scaled .g-span5--mid.g-holdWidth--mid {
        min-width: 396.66667px; }
    .g--gutter--scaled .g-span5--mid {
      -ms-flex-preferred-size: 40.5% !important;
          flex-basis: 40.5% !important;
      max-width: 40.5%;
      margin-left: 2%; }
    .no-flexbox .g-span5--mid {
      width: 41.66667% !important; }
  .g-offset5--mid {
    margin-left: 41.66667% !important; }
  .g-span6--mid {
    -ms-flex-preferred-size: 50% !important;
        flex-basis: 50% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 50% !important; }
    .g-span6--mid.g-holdWidth--mid {
      min-width: 500px; }
      .g--gutter--scaled .g-span6--mid.g-holdWidth--mid {
        min-width: 480px; }
    .g--gutter--scaled .g-span6--mid {
      -ms-flex-preferred-size: 49% !important;
          flex-basis: 49% !important;
      max-width: 49%;
      margin-left: 2%; }
    .no-flexbox .g-span6--mid {
      width: 50% !important; }
  .g-offset6--mid {
    margin-left: 50% !important; }
  .g-span7--mid {
    -ms-flex-preferred-size: 58.33333% !important;
        flex-basis: 58.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 58.33333% !important; }
    .g-span7--mid.g-holdWidth--mid {
      min-width: 583.33333px; }
      .g--gutter--scaled .g-span7--mid.g-holdWidth--mid {
        min-width: 563.33333px; }
    .g--gutter--scaled .g-span7--mid {
      -ms-flex-preferred-size: 57.5% !important;
          flex-basis: 57.5% !important;
      max-width: 57.5%;
      margin-left: 2%; }
    .no-flexbox .g-span7--mid {
      width: 58.33333% !important; }
  .g-offset7--mid {
    margin-left: 58.33333% !important; }
  .g-span8--mid {
    -ms-flex-preferred-size: 66.66667% !important;
        flex-basis: 66.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 66.66667% !important; }
    .g-span8--mid.g-holdWidth--mid {
      min-width: 666.66667px; }
      .g--gutter--scaled .g-span8--mid.g-holdWidth--mid {
        min-width: 646.66667px; }
    .g--gutter--scaled .g-span8--mid {
      -ms-flex-preferred-size: 66% !important;
          flex-basis: 66% !important;
      max-width: 66%;
      margin-left: 2%; }
    .no-flexbox .g-span8--mid {
      width: 66.66667% !important; }
  .g-offset8--mid {
    margin-left: 66.66667% !important; }
  .g-span9--mid {
    -ms-flex-preferred-size: 75% !important;
        flex-basis: 75% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 75% !important; }
    .g-span9--mid.g-holdWidth--mid {
      min-width: 750px; }
      .g--gutter--scaled .g-span9--mid.g-holdWidth--mid {
        min-width: 730px; }
    .g--gutter--scaled .g-span9--mid {
      -ms-flex-preferred-size: 74.5% !important;
          flex-basis: 74.5% !important;
      max-width: 74.5%;
      margin-left: 2%; }
    .no-flexbox .g-span9--mid {
      width: 75% !important; }
  .g-offset9--mid {
    margin-left: 75% !important; }
  .g-span10--mid {
    -ms-flex-preferred-size: 83.33333% !important;
        flex-basis: 83.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 83.33333% !important; }
    .g-span10--mid.g-holdWidth--mid {
      min-width: 833.33333px; }
      .g--gutter--scaled .g-span10--mid.g-holdWidth--mid {
        min-width: 813.33333px; }
    .g--gutter--scaled .g-span10--mid {
      -ms-flex-preferred-size: 83% !important;
          flex-basis: 83% !important;
      max-width: 83%;
      margin-left: 2%; }
    .no-flexbox .g-span10--mid {
      width: 83.33333% !important; }
  .g-offset10--mid {
    margin-left: 83.33333% !important; }
  .g-span11--mid {
    -ms-flex-preferred-size: 91.66667% !important;
        flex-basis: 91.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 91.66667% !important; }
    .g-span11--mid.g-holdWidth--mid {
      min-width: 916.66667px; }
      .g--gutter--scaled .g-span11--mid.g-holdWidth--mid {
        min-width: 896.66667px; }
    .g--gutter--scaled .g-span11--mid {
      -ms-flex-preferred-size: 91.5% !important;
          flex-basis: 91.5% !important;
      max-width: 91.5%;
      margin-left: 2%; }
    .no-flexbox .g-span11--mid {
      width: 91.66667% !important; }
  .g-offset11--mid {
    margin-left: 91.66667% !important; }
  .g-span12--mid {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 100% !important; }
    .g-span12--mid.g-holdWidth--mid {
      min-width: 1000px; }
      .g--gutter--scaled .g-span12--mid.g-holdWidth--mid {
        min-width: 980px; }
    .g--gutter--scaled .g-span12--mid {
      -ms-flex-preferred-size: 100% !important;
          flex-basis: 100% !important;
      max-width: 100%;
      margin-left: 0; }
    .no-flexbox .g-span12--mid {
      width: 100% !important; } }

@media (min-width: 1000px) {
  .g-span1--wide {
    -ms-flex-preferred-size: 8.33333% !important;
        flex-basis: 8.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 8.33333% !important; }
    .g-span1--wide.g-holdWidth--wide {
      min-width: 83.33333px; }
      .g--gutter--scaled .g-span1--wide.g-holdWidth--wide {
        min-width: 63.33333px; }
    .g--gutter--scaled .g-span1--wide {
      -ms-flex-preferred-size: 6.5% !important;
          flex-basis: 6.5% !important;
      max-width: 6.5%;
      margin-left: 2%; }
    .no-flexbox .g-span1--wide {
      width: 8.33333% !important; }
  .g-offset1--wide {
    margin-left: 8.33333% !important; }
  .g-span2--wide {
    -ms-flex-preferred-size: 16.66667% !important;
        flex-basis: 16.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 16.66667% !important; }
    .g-span2--wide.g-holdWidth--wide {
      min-width: 166.66667px; }
      .g--gutter--scaled .g-span2--wide.g-holdWidth--wide {
        min-width: 146.66667px; }
    .g--gutter--scaled .g-span2--wide {
      -ms-flex-preferred-size: 15% !important;
          flex-basis: 15% !important;
      max-width: 15%;
      margin-left: 2%; }
    .no-flexbox .g-span2--wide {
      width: 16.66667% !important; }
  .g-offset2--wide {
    margin-left: 16.66667% !important; }
  .g-span3--wide {
    -ms-flex-preferred-size: 25% !important;
        flex-basis: 25% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 25% !important; }
    .g-span3--wide.g-holdWidth--wide {
      min-width: 250px; }
      .g--gutter--scaled .g-span3--wide.g-holdWidth--wide {
        min-width: 230px; }
    .g--gutter--scaled .g-span3--wide {
      -ms-flex-preferred-size: 23.5% !important;
          flex-basis: 23.5% !important;
      max-width: 23.5%;
      margin-left: 2%; }
    .no-flexbox .g-span3--wide {
      width: 25% !important; }
  .g-offset3--wide {
    margin-left: 25% !important; }
  .g-span4--wide {
    -ms-flex-preferred-size: 33.33333% !important;
        flex-basis: 33.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 33.33333% !important; }
    .g-span4--wide.g-holdWidth--wide {
      min-width: 333.33333px; }
      .g--gutter--scaled .g-span4--wide.g-holdWidth--wide {
        min-width: 313.33333px; }
    .g--gutter--scaled .g-span4--wide {
      -ms-flex-preferred-size: 32% !important;
          flex-basis: 32% !important;
      max-width: 32%;
      margin-left: 2%; }
    .no-flexbox .g-span4--wide {
      width: 33.33333% !important; }
  .g-offset4--wide {
    margin-left: 33.33333% !important; }
  .g-span5--wide {
    -ms-flex-preferred-size: 41.66667% !important;
        flex-basis: 41.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 41.66667% !important; }
    .g-span5--wide.g-holdWidth--wide {
      min-width: 416.66667px; }
      .g--gutter--scaled .g-span5--wide.g-holdWidth--wide {
        min-width: 396.66667px; }
    .g--gutter--scaled .g-span5--wide {
      -ms-flex-preferred-size: 40.5% !important;
          flex-basis: 40.5% !important;
      max-width: 40.5%;
      margin-left: 2%; }
    .no-flexbox .g-span5--wide {
      width: 41.66667% !important; }
  .g-offset5--wide {
    margin-left: 41.66667% !important; }
  .g-span6--wide {
    -ms-flex-preferred-size: 50% !important;
        flex-basis: 50% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 50% !important; }
    .g-span6--wide.g-holdWidth--wide {
      min-width: 500px; }
      .g--gutter--scaled .g-span6--wide.g-holdWidth--wide {
        min-width: 480px; }
    .g--gutter--scaled .g-span6--wide {
      -ms-flex-preferred-size: 49% !important;
          flex-basis: 49% !important;
      max-width: 49%;
      margin-left: 2%; }
    .no-flexbox .g-span6--wide {
      width: 50% !important; }
  .g-offset6--wide {
    margin-left: 50% !important; }
  .g-span7--wide {
    -ms-flex-preferred-size: 58.33333% !important;
        flex-basis: 58.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 58.33333% !important; }
    .g-span7--wide.g-holdWidth--wide {
      min-width: 583.33333px; }
      .g--gutter--scaled .g-span7--wide.g-holdWidth--wide {
        min-width: 563.33333px; }
    .g--gutter--scaled .g-span7--wide {
      -ms-flex-preferred-size: 57.5% !important;
          flex-basis: 57.5% !important;
      max-width: 57.5%;
      margin-left: 2%; }
    .no-flexbox .g-span7--wide {
      width: 58.33333% !important; }
  .g-offset7--wide {
    margin-left: 58.33333% !important; }
  .g-span8--wide {
    -ms-flex-preferred-size: 66.66667% !important;
        flex-basis: 66.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 66.66667% !important; }
    .g-span8--wide.g-holdWidth--wide {
      min-width: 666.66667px; }
      .g--gutter--scaled .g-span8--wide.g-holdWidth--wide {
        min-width: 646.66667px; }
    .g--gutter--scaled .g-span8--wide {
      -ms-flex-preferred-size: 66% !important;
          flex-basis: 66% !important;
      max-width: 66%;
      margin-left: 2%; }
    .no-flexbox .g-span8--wide {
      width: 66.66667% !important; }
  .g-offset8--wide {
    margin-left: 66.66667% !important; }
  .g-span9--wide {
    -ms-flex-preferred-size: 75% !important;
        flex-basis: 75% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 75% !important; }
    .g-span9--wide.g-holdWidth--wide {
      min-width: 750px; }
      .g--gutter--scaled .g-span9--wide.g-holdWidth--wide {
        min-width: 730px; }
    .g--gutter--scaled .g-span9--wide {
      -ms-flex-preferred-size: 74.5% !important;
          flex-basis: 74.5% !important;
      max-width: 74.5%;
      margin-left: 2%; }
    .no-flexbox .g-span9--wide {
      width: 75% !important; }
  .g-offset9--wide {
    margin-left: 75% !important; }
  .g-span10--wide {
    -ms-flex-preferred-size: 83.33333% !important;
        flex-basis: 83.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 83.33333% !important; }
    .g-span10--wide.g-holdWidth--wide {
      min-width: 833.33333px; }
      .g--gutter--scaled .g-span10--wide.g-holdWidth--wide {
        min-width: 813.33333px; }
    .g--gutter--scaled .g-span10--wide {
      -ms-flex-preferred-size: 83% !important;
          flex-basis: 83% !important;
      max-width: 83%;
      margin-left: 2%; }
    .no-flexbox .g-span10--wide {
      width: 83.33333% !important; }
  .g-offset10--wide {
    margin-left: 83.33333% !important; }
  .g-span11--wide {
    -ms-flex-preferred-size: 91.66667% !important;
        flex-basis: 91.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 91.66667% !important; }
    .g-span11--wide.g-holdWidth--wide {
      min-width: 916.66667px; }
      .g--gutter--scaled .g-span11--wide.g-holdWidth--wide {
        min-width: 896.66667px; }
    .g--gutter--scaled .g-span11--wide {
      -ms-flex-preferred-size: 91.5% !important;
          flex-basis: 91.5% !important;
      max-width: 91.5%;
      margin-left: 2%; }
    .no-flexbox .g-span11--wide {
      width: 91.66667% !important; }
  .g-offset11--wide {
    margin-left: 91.66667% !important; }
  .g-span12--wide {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 100% !important; }
    .g-span12--wide.g-holdWidth--wide {
      min-width: 1000px; }
      .g--gutter--scaled .g-span12--wide.g-holdWidth--wide {
        min-width: 980px; }
    .g--gutter--scaled .g-span12--wide {
      -ms-flex-preferred-size: 100% !important;
          flex-basis: 100% !important;
      max-width: 100%;
      margin-left: 0; }
    .no-flexbox .g-span12--wide {
      width: 100% !important; } }

@media (min-width: 1250px) {
  .g-span1--huge {
    -ms-flex-preferred-size: 8.33333% !important;
        flex-basis: 8.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 8.33333% !important; }
    .g-span1--huge.g-holdWidth--huge {
      min-width: 83.33333px; }
      .g--gutter--scaled .g-span1--huge.g-holdWidth--huge {
        min-width: 63.33333px; }
    .g--gutter--scaled .g-span1--huge {
      -ms-flex-preferred-size: 6.5% !important;
          flex-basis: 6.5% !important;
      max-width: 6.5%;
      margin-left: 2%; }
    .no-flexbox .g-span1--huge {
      width: 8.33333% !important; }
  .g-offset1--huge {
    margin-left: 8.33333% !important; }
  .g-span2--huge {
    -ms-flex-preferred-size: 16.66667% !important;
        flex-basis: 16.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 16.66667% !important; }
    .g-span2--huge.g-holdWidth--huge {
      min-width: 166.66667px; }
      .g--gutter--scaled .g-span2--huge.g-holdWidth--huge {
        min-width: 146.66667px; }
    .g--gutter--scaled .g-span2--huge {
      -ms-flex-preferred-size: 15% !important;
          flex-basis: 15% !important;
      max-width: 15%;
      margin-left: 2%; }
    .no-flexbox .g-span2--huge {
      width: 16.66667% !important; }
  .g-offset2--huge {
    margin-left: 16.66667% !important; }
  .g-span3--huge {
    -ms-flex-preferred-size: 25% !important;
        flex-basis: 25% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 25% !important; }
    .g-span3--huge.g-holdWidth--huge {
      min-width: 250px; }
      .g--gutter--scaled .g-span3--huge.g-holdWidth--huge {
        min-width: 230px; }
    .g--gutter--scaled .g-span3--huge {
      -ms-flex-preferred-size: 23.5% !important;
          flex-basis: 23.5% !important;
      max-width: 23.5%;
      margin-left: 2%; }
    .no-flexbox .g-span3--huge {
      width: 25% !important; }
  .g-offset3--huge {
    margin-left: 25% !important; }
  .g-span4--huge {
    -ms-flex-preferred-size: 33.33333% !important;
        flex-basis: 33.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 33.33333% !important; }
    .g-span4--huge.g-holdWidth--huge {
      min-width: 333.33333px; }
      .g--gutter--scaled .g-span4--huge.g-holdWidth--huge {
        min-width: 313.33333px; }
    .g--gutter--scaled .g-span4--huge {
      -ms-flex-preferred-size: 32% !important;
          flex-basis: 32% !important;
      max-width: 32%;
      margin-left: 2%; }
    .no-flexbox .g-span4--huge {
      width: 33.33333% !important; }
  .g-offset4--huge {
    margin-left: 33.33333% !important; }
  .g-span5--huge {
    -ms-flex-preferred-size: 41.66667% !important;
        flex-basis: 41.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 41.66667% !important; }
    .g-span5--huge.g-holdWidth--huge {
      min-width: 416.66667px; }
      .g--gutter--scaled .g-span5--huge.g-holdWidth--huge {
        min-width: 396.66667px; }
    .g--gutter--scaled .g-span5--huge {
      -ms-flex-preferred-size: 40.5% !important;
          flex-basis: 40.5% !important;
      max-width: 40.5%;
      margin-left: 2%; }
    .no-flexbox .g-span5--huge {
      width: 41.66667% !important; }
  .g-offset5--huge {
    margin-left: 41.66667% !important; }
  .g-span6--huge {
    -ms-flex-preferred-size: 50% !important;
        flex-basis: 50% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 50% !important; }
    .g-span6--huge.g-holdWidth--huge {
      min-width: 500px; }
      .g--gutter--scaled .g-span6--huge.g-holdWidth--huge {
        min-width: 480px; }
    .g--gutter--scaled .g-span6--huge {
      -ms-flex-preferred-size: 49% !important;
          flex-basis: 49% !important;
      max-width: 49%;
      margin-left: 2%; }
    .no-flexbox .g-span6--huge {
      width: 50% !important; }
  .g-offset6--huge {
    margin-left: 50% !important; }
  .g-span7--huge {
    -ms-flex-preferred-size: 58.33333% !important;
        flex-basis: 58.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 58.33333% !important; }
    .g-span7--huge.g-holdWidth--huge {
      min-width: 583.33333px; }
      .g--gutter--scaled .g-span7--huge.g-holdWidth--huge {
        min-width: 563.33333px; }
    .g--gutter--scaled .g-span7--huge {
      -ms-flex-preferred-size: 57.5% !important;
          flex-basis: 57.5% !important;
      max-width: 57.5%;
      margin-left: 2%; }
    .no-flexbox .g-span7--huge {
      width: 58.33333% !important; }
  .g-offset7--huge {
    margin-left: 58.33333% !important; }
  .g-span8--huge {
    -ms-flex-preferred-size: 66.66667% !important;
        flex-basis: 66.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 66.66667% !important; }
    .g-span8--huge.g-holdWidth--huge {
      min-width: 666.66667px; }
      .g--gutter--scaled .g-span8--huge.g-holdWidth--huge {
        min-width: 646.66667px; }
    .g--gutter--scaled .g-span8--huge {
      -ms-flex-preferred-size: 66% !important;
          flex-basis: 66% !important;
      max-width: 66%;
      margin-left: 2%; }
    .no-flexbox .g-span8--huge {
      width: 66.66667% !important; }
  .g-offset8--huge {
    margin-left: 66.66667% !important; }
  .g-span9--huge {
    -ms-flex-preferred-size: 75% !important;
        flex-basis: 75% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 75% !important; }
    .g-span9--huge.g-holdWidth--huge {
      min-width: 750px; }
      .g--gutter--scaled .g-span9--huge.g-holdWidth--huge {
        min-width: 730px; }
    .g--gutter--scaled .g-span9--huge {
      -ms-flex-preferred-size: 74.5% !important;
          flex-basis: 74.5% !important;
      max-width: 74.5%;
      margin-left: 2%; }
    .no-flexbox .g-span9--huge {
      width: 75% !important; }
  .g-offset9--huge {
    margin-left: 75% !important; }
  .g-span10--huge {
    -ms-flex-preferred-size: 83.33333% !important;
        flex-basis: 83.33333% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 83.33333% !important; }
    .g-span10--huge.g-holdWidth--huge {
      min-width: 833.33333px; }
      .g--gutter--scaled .g-span10--huge.g-holdWidth--huge {
        min-width: 813.33333px; }
    .g--gutter--scaled .g-span10--huge {
      -ms-flex-preferred-size: 83% !important;
          flex-basis: 83% !important;
      max-width: 83%;
      margin-left: 2%; }
    .no-flexbox .g-span10--huge {
      width: 83.33333% !important; }
  .g-offset10--huge {
    margin-left: 83.33333% !important; }
  .g-span11--huge {
    -ms-flex-preferred-size: 91.66667% !important;
        flex-basis: 91.66667% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 91.66667% !important; }
    .g-span11--huge.g-holdWidth--huge {
      min-width: 916.66667px; }
      .g--gutter--scaled .g-span11--huge.g-holdWidth--huge {
        min-width: 896.66667px; }
    .g--gutter--scaled .g-span11--huge {
      -ms-flex-preferred-size: 91.5% !important;
          flex-basis: 91.5% !important;
      max-width: 91.5%;
      margin-left: 2%; }
    .no-flexbox .g-span11--huge {
      width: 91.66667% !important; }
  .g-offset11--huge {
    margin-left: 91.66667% !important; }
  .g-span12--huge {
    -ms-flex-preferred-size: 100% !important;
        flex-basis: 100% !important;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    max-width: 100% !important; }
    .g-span12--huge.g-holdWidth--huge {
      min-width: 1000px; }
      .g--gutter--scaled .g-span12--huge.g-holdWidth--huge {
        min-width: 980px; }
    .g--gutter--scaled .g-span12--huge {
      -ms-flex-preferred-size: 100% !important;
          flex-basis: 100% !important;
      max-width: 100%;
      margin-left: 0; }
    .no-flexbox .g-span12--huge {
      width: 100% !important; } }

@media (max-width: 399px) {
  .g--stack--narrow {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-flow: column nowrap;
            flex-flow: column nowrap; }
    .g--stack--narrow > .g-col {
      -ms-flex-preferred-size: auto !important;
          flex-basis: auto !important;
      max-width: 100% !important;
      margin-left: 0; }
      .no-flexbox .g--stack--narrow > .g-col {
        width: 100% !important; } }

@media (max-width: 749px) {
  .g--stack--mid {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-flow: column nowrap;
            flex-flow: column nowrap; }
    .g--stack--mid > .g-col {
      -ms-flex-preferred-size: auto !important;
          flex-basis: auto !important;
      max-width: 100% !important;
      margin-left: 0; }
      .no-flexbox .g--stack--mid > .g-col {
        width: 100% !important; } }

@media (max-width: 999px) {
  .g--stack--wide {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-flow: column nowrap;
            flex-flow: column nowrap; }
    .g--stack--wide > .g-col {
      -ms-flex-preferred-size: auto !important;
          flex-basis: auto !important;
      max-width: 100% !important;
      margin-left: 0; }
      .no-flexbox .g--stack--wide > .g-col {
        width: 100% !important; } }

@media (max-width: 1249px) {
  .g--stack--huge {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-flow: column nowrap;
            flex-flow: column nowrap; }
    .g--stack--huge > .g-col {
      -ms-flex-preferred-size: auto !important;
          flex-basis: auto !important;
      max-width: 100% !important;
      margin-left: 0; }
      .no-flexbox .g--stack--huge > .g-col {
        width: 100% !important; } }

/**
 * Forms
 * =================================
 * Kickoff's forms has support for themes. See below for info about them.
 *
 * The styles here are base styles that apply to both themes,
 * they are more of a reset before you make stylistic amends to form fields
 *
 */
/**
 * Form themes
 * This file contains the base form styles and each theme file contains
 * overrides and additions.
 *
 * Choose from:
 * - `standard`: the original Kickoff form theme
 * - `material`: basic version of Google's Material design forms
 *
 * Usage: (choose from)
 * @import "form-theme-standard";
 * @import "form-theme-material";
 */
/**
 * Kickoff forms: Standard theme
 * ================================= *
 * Demo: http://trykickoff.com/demos/forms.html#layout-example-labels-above
 * Code: https://gist.github.com/mrmartineau/6712577#file-labels-above-inputs-html
 * Usage:
  	<div class="form-controlGroup">
  		<label for="name" class="form-label">Name</label>
  		<div class="form-controlGroup-inputWrapper">
  			<input type="text" id="name" placeholder="Zander Martineau" class="form-input"/>
  		</div>
  	</div>
 *
 * Contents:
 * - Theme variables
 * - Theme styles
 */
/**
 * Generic form styles
 * =================================
 * Demo: http://trykickoff.com/demos/forms.html#layout-example-labels-above
 * Code: https://gist.github.com/mrmartineau/6712577#file-labels-above-inputs-html
 * Usage:
  	<div class="form-controlGroup">
  		<label for="name" class="form-label">Name</label>
  		<div class="form-controlGroup-inputWrapper">
  			<input type="text" id="name" placeholder="Zander Martineau" class="form-input"/>
  		</div>
  	</div>
 */
.form {
  margin: 0 0 28px; }

.form-fieldset {
  padding: 0;
  margin: 0;
  border: 0; }

.form-legend {
  padding: 0;
  margin-bottom: 28px;
  font-size: 1.25rem;
  line-height: 1.4;
  color: #444;
  border: 0;
  border-bottom: 1px solid #eee;
  white-space: normal; }
  .form-legend small {
    font-size: 0.8rem;
    color: #b3b3b3; }

/**
 * Form inputs and groups
 */
.form-controlGroup {
  margin-top: 42px;
  margin-bottom: 42px; }

.form-legend + .form-controlGroup {
  margin-top: 28px; }

.form-label {
  color: #444; }
  .form-label small {
    font-weight: normal;
    color: #919191; }

.form-input {
  height: 2.5em;
  padding: .5em;
  font-size: 1rem;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  line-height: 1.4;
  color: #444;
  font-weight: normal;
  background-color: #fff;
  border: 2px solid #ccc;
  border-radius: 5px;
  background-clip: padding-box;
  transition: border 200ms ease-in-out; }
  .form-input:focus {
    border-color: #181830; }
  .form-input[type="image"], .form-input[type="checkbox"], .form-input[type="radio"], .form-input[type="range"] {
    margin: 3px 0; }
  .form-input[type="file"] {
    background-color: #fff; }
  .form-input[type="color"] {
    width: 40px;
    height: 40px;
    overflow: hidden;
    padding: 2px; }
  .form-input[disabled], .form-input[readonly] {
    cursor: not-allowed; }

.form-input--select {
  background-color: #fff; }

.form-input-file {
  font-size: 1rem; }

/**
 * Form actions
 */
.form-actions {
  padding: 28px 20px;
  margin-top: 28px;
  margin-bottom: 28px;
  background-color: #f5f5f5;
  border-top: 1px solid #ddd; }
  .form-actions .btn {
    margin-right: 10px; }
    .form-actions .btn:last-child {
      margin-right: 0; }

/**
 * Form validation messages
 */
.form-controlGroup .form-message {
  padding-top: 0.5em;
  padding-left: 0.5em; }

.form-actions .form-message {
  padding: 0.5em; }

/**
 * Form field feedback states
 */
.has-warning {
  color: #f4aa47; }

.form-controlGroup.has-warning .form-label {
  color: #f4aa47; }

.form-controlGroup.has-warning .form-input {
  color: #f4aa47;
  border-color: #f4aa47; }
  .form-controlGroup.has-warning .form-input:focus {
    border-color: #f19417; }

.form-controlGroup.has-warning .form-message {
  display: block;
  color: #f4aa47; }

.has-error {
  color: #B94A4D; }

.form-controlGroup.has-error .form-label {
  color: #B94A4D; }

.form-controlGroup.has-error .form-input {
  color: #B94A4D;
  border-color: #B94A4D; }
  .form-controlGroup.has-error .form-input:focus {
    border-color: #963a3c; }

.form-controlGroup.has-error .form-message {
  display: block;
  color: #B94A4D; }

.has-success {
  color: #16c98d; }

.form-controlGroup.has-success .form-label {
  color: #16c98d; }

.form-controlGroup.has-success .form-input {
  color: #16c98d;
  border-color: #16c98d; }
  .form-controlGroup.has-success .form-input:focus {
    border-color: #119b6d; }

.form-controlGroup.has-success .form-message {
  display: block;
  color: #16c98d; }

.has-info {
  color: #288ad6; }

.form-controlGroup.has-info .form-label {
  color: #288ad6; }

.form-controlGroup.has-info .form-input {
  color: #288ad6;
  border-color: #288ad6; }
  .form-controlGroup.has-info .form-input:focus {
    border-color: #206eab; }

.form-controlGroup.has-info .form-message {
  display: block;
  color: #288ad6; }

/**
 * Placeholder text
 * =================================
 * Gets special styles; can't be bundled together though for some reason
 */
:-ms-input-placeholder {
  color: #b3b3b3; }

:-moz-placeholder {
  color: #b3b3b3; }

::-webkit-input-placeholder {
  color: #b3b3b3; }

@media (min-width: 751px) {
  /**
	 * Horizontal-specific styles
	 * =================================
	 * add .form--horizontal to the <form> element
	 * Demo: http://trykickoff.com/demos/forms.html#layout-example-labels-inline
	 * Code: https://gist.github.com/mrmartineau/6712577#file-labels-inline-html
	 */
  .form--horizontal .form-controlGroup {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
    .form--horizontal .form-controlGroup > .form-controlGroup-inputWrapper {
      width: 100%; }
  .form--horizontal .form-label {
    width: 140px;
    margin-right: 28px;
    padding-top: 0.6em; }
  .form--horizontal .form-actions {
    padding-left: 168px; } }

/**
 * Custom controls
 * - Radios/checkboxes
 * - Select element
 * - File upload
 */
/**
 * Custom Checkboxes and radios
 * =================================
 * IE9+
 *
 * --------------------------------
 *
 * Checkbox button example HTML
 *
 *	<label class="control control--custom" for="checkbox1">
		<input class="control--custom-input" type="checkbox" id="checkbox1" name="myCheckbox" value="A value"/>
			<span class="control-indicator control-indicator--checkbox"></span>
			My Checkbox Label Text
		</label>
 *
 * -------------------------------
 *
 * Radio button example HTML
 *
 *	<label class="control control--custom" for="radio1">
 *		<input class="control--custom-input" type="radio" id="radio1" name="myRadioBtn" value="A value"/>
 *		<span class="control-indicator control-indicator--radio"></span>
 *		My Radio Button Label Text
 * 	</label>
 *
 * ================================= */
.control--custom {
  position: relative;
  display: block;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  padding-left: 2.3em;
  height: 1.3em;
  line-height: 1.3em !important; }

.control--custom--inline {
  display: inline-block;
  padding-right: 2em; }

.control--custom-input {
  position: absolute;
  opacity: 0;
  z-index: -1; }

.control-indicator {
  position: absolute;
  left: 0;
  display: inline-block;
  width: 1.3em;
  height: 1.3em;
  transition: all 300ms cubic-bezier(0.77, 0, 0.175, 1);
  border: 1px solid #ccc;
  background-color: #ccc;
  vertical-align: middle;
  margin-top: 0;
  box-shadow: 0 0 0 2px transparent, 0 0 0 0 transparent; }

.control--custom-input:focus ~ .control-indicator {
  box-shadow: 0 0 0 2px #f1f1f1, 0 0 0 3px #181830; }

.control-indicator--checkbox,
.control-indicator--tickbox {
  border-radius: .2em; }
  .control-indicator--checkbox:before, .control-indicator--checkbox:after,
  .control-indicator--tickbox:before,
  .control-indicator--tickbox:after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 90%;
    display: block;
    opacity: 0;
    transition: all 250ms ease-in-out; }

.control-indicator--checkbox:before, .control-indicator--checkbox:after {
  top: 50%;
  width: 90%;
  height: 0.1em;
  background-color: #f1f1f1; }

.control-indicator--checkbox:before {
  -webkit-transform: translate(-50%, -50%) rotate(45deg) scale(0);
      -ms-transform: translate(-50%, -50%) rotate(45deg) scale(0);
          transform: translate(-50%, -50%) rotate(45deg) scale(0); }

.control-indicator--checkbox:after {
  -webkit-transform: translate(-50%, -50%) rotate(-45deg) scale(0);
      -ms-transform: translate(-50%, -50%) rotate(-45deg) scale(0);
          transform: translate(-50%, -50%) rotate(-45deg) scale(0); }

.control-indicator--tickbox:before {
  top: 0;
  -webkit-transform: translateX(-50%) rotate(45deg) scale(0);
      -ms-transform: translateX(-50%) rotate(45deg) scale(0);
          transform: translateX(-50%) rotate(45deg) scale(0);
  border: 0.1em solid #f1f1f1;
  background-color: transparent;
  width: 40%;
  height: 80%;
  border-top: 0;
  border-left: 0; }

.control-indicator--tickbox:after {
  display: none; }

.control--custom-input:checked ~ .control-indicator--checkbox,
.control--custom-input:checked ~ .control-indicator--tickbox {
  background-color: #181830;
  border: 0.1em solid #181830; }
  .control--custom-input:checked ~ .control-indicator--checkbox:before, .control--custom-input:checked ~ .control-indicator--checkbox:after,
  .control--custom-input:checked ~ .control-indicator--tickbox:before,
  .control--custom-input:checked ~ .control-indicator--tickbox:after {
    opacity: 1; }

.control--custom-input:checked ~ .control-indicator--tickbox:before, .control--custom-input:checked ~ .control-indicator--tickbox:after {
  -webkit-transform: translateX(-50%) rotate(45deg) scale(1);
      -ms-transform: translateX(-50%) rotate(45deg) scale(1);
          transform: translateX(-50%) rotate(45deg) scale(1); }

.control--custom-input:checked ~ .control-indicator--checkbox:before {
  -webkit-transform: translate(-50%, -50%) rotate(45deg) scale(1);
      -ms-transform: translate(-50%, -50%) rotate(45deg) scale(1);
          transform: translate(-50%, -50%) rotate(45deg) scale(1); }

.control--custom-input:checked ~ .control-indicator--checkbox:after {
  -webkit-transform: translate(-50%, -50%) rotate(-45deg) scale(1);
      -ms-transform: translate(-50%, -50%) rotate(-45deg) scale(1);
          transform: translate(-50%, -50%) rotate(-45deg) scale(1); }

.control-indicator--radio {
  border-radius: 50%; }

.control--custom-input:checked ~ .control-indicator--radio {
  background-color: #f1f1f1;
  border: 0.3em solid #181830; }

/**
 * Custom select element
 * =================================
 * Firefox 39+, IE10+
 *
 *	<div class="form-controlGroup">
			<label for="cs-choice" class="form-label">Custom select</label>
			<div class="form-controlGroup-inputWrapper form-controlGroup-inputWrapper--select">
				<select id="cs-choice" name="cs-choice" class="form-input form-input--select">
					<option value="--">Select title</option>
					<option value="Mr">Mr</option>
					<option value="Mrs">Mrs</option>
				</select>
			</div>
	</div>
 */
.form-controlGroup-inputWrapper--select {
  position: relative;
  display: block;
  padding: 0;
  /* Custom arrow sits on top of the select - could be an image, SVG, icon font, etc. or the arrow could just baked into the bg image on the select */ }
  .form-controlGroup-inputWrapper--select:after {
    color: #181830;
    content: "\25BC";
    font-size: .7em;
    padding: 0;
    position: absolute;
    right: 1.2em;
    top: 1.2em;
    z-index: 2;
    /* These hacks make the select behind the arrow clickable in some browsers */
    -ms-pointer-events: none;
    pointer-events: none;
    background: url(#); }
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    .form-controlGroup-inputWrapper--select:after {
      display: none; } }
  .form-controlGroup-inputWrapper--select .form-input--select {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none; }
    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
      .form-controlGroup-inputWrapper--select .form-input--select:focus::-ms-value {
        background: transparent;
        color: #222; } }

option {
  font-weight: normal; }

/**
 * Custom file input
 * =================================
 * <div class="form-controlGroup">
		<label class="form-label" for="file">File upload</label>

		<div class="form-controlGroup-inputWrapper">
			<label class="form-input form-input--file">
				<span class="form-input--file-text">Choose file..</span>
				<span class="form-input--file-button">Browse</span>
				<input class="form-input--file-input" type="file" id="file" accept="image/*" size="14" />
			</label>
		</div>
	</div>
 */
/**
 * Custom file input
 */
.form-input--file {
  position: relative;
  overflow: hidden;
  padding-right: 120px;
  text-overflow: ellipsis;
  white-space: nowrap; }

.form-input--file-input {
  opacity: 0;
  visibility: hidden;
  position: absolute;
  top: 0;
  left: 0; }

.form-input--file-button {
  cursor: pointer;
  display: inline-block;
  position: absolute;
  top: 0;
  right: -1px;
  bottom: 0;
  padding: .44em 1em 0;
  background-color: #d9d9d9; }
  .form-input--file-button:hover {
    background-color: #ccc; }

/**
 * Base form styles
 * =================================
 * Demo: http://trykickoff.com/demos/forms.html#layout-example-labels-above
 * Code: https://gist.github.com/mrmartineau/6712577#file-labels-above-inputs-html
 * Usage:
  	<div class="form-controlGroup">
  		<label for="name" class="form-label">Name</label>
  		<div class="form-controlGroup-inputWrapper">
  			<input type="text" id="name" placeholder="Zander Martineau" class="form-input"/>
  		</div>
  	</div>
 */
.form-legend {
  display: block;
  width: 100%; }

/**
 * Form inputs and groups
 */
.form-legend + .form-controlGroup {
  -webkit-margin-top-collapse: separate; }

.form-label {
  display: block; }

.form-input {
  display: block;
  width: 100%;
  vertical-align: baseline; }
  .form-input:focus {
    outline: 0;
    outline: thin dotted \9; }
  .form-input[type="image"], .form-input[type="checkbox"], .form-input[type="radio"], .form-input[type="range"] {
    width: auto;
    height: auto;
    padding: 0;
    line-height: normal;
    cursor: pointer;
    border-radius: 0;
    box-sizing: border-box; }
  .form-input[type="image"] {
    border: 0; }
  .form-input[type="file"] {
    width: auto;
    height: 28px;
    padding: initial;
    line-height: initial;
    border: initial;
    background-color: initial; }
  .form-input[type="hidden"] {
    display: none; }
  .form-input[type="password"] {
    font-family: sans-serif; }
  .form-input[type="range"] {
    width: 100%; }
  .form-input > .radio:first-child,
  .form-input > .checkbox:first-child {
    padding-top: 5px; }
  .form-input[disabled], .form-input[readonly] {
    cursor: not-allowed; }

.form-input--textarea {
  height: auto;
  min-height: 5em;
  resize: vertical; }

.form-input--textarea--uneditable {
  width: auto;
  height: auto; }

.form-input-file {
  display: inline-block;
  width: 100%;
  margin: 0;
  vertical-align: middle;
  line-height: 1em; }
  .form-input-file:focus {
    outline: none; }

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  width: auto;
  cursor: pointer;
  -webkit-appearance: button; }

/**
 * Checkboxes:
 * =================================
	<label class="control">
		<input type="checkbox" value="check1">
		This is a checkbox
	</label>
	<label class="control control--inline">
		<input type="checkbox" value="check1">
		This is a checkbox
	</label>

 * Radios:
 * =================================
	<label class="control">
		<input type="radio" name="optionsRadios" id="optionsRadios1" value="option1" checked>
		This is a radio
	</label>
	<label class="control control--inline">
		<input type="radio" name="optionsRadios" id="optionsRadios1" value="option2" checked>
		This is a radio
	</label>
 */
.control {
  display: block;
  line-height: 1; }
  .control + .control {
    margin-top: 14px; }
  .control input {
    vertical-align: top;
    display: inline;
    line-height: 1;
    margin-right: 0.5em; }

.control--inline {
  display: inline-block;
  vertical-align: middle; }
  .control--inline + .control--inline {
    margin-top: 0;
    margin-left: 1.5em; }

/**
 * Form validation messages
 */
.form-controlGroup .form-message {
  display: none; }

/**
 * Links
 * =================================
 */
a {
  transition: all 300ms cubic-bezier(0.77, 0, 0.175, 1); }
  a, a:link {
    color: #288ad6;
    text-decoration: none; }
  a:visited {
    color: #288ad6;
    text-decoration: none; }
  a:hover, a:focus {
    color: #185380; }
  a:active {
    color: #185380; }

/**
 * Buttons
 * =================================
 * - Associated Button Variables
 * - Base button styling
 * – Button Modifiers
 * 	 – btn--primary
 *   – btn--block
 */
/**
 * Define associated Button variables
 */
/**
 * Base button styles – Based on csswizardry.com/beautons
 *
 * 1. Allow us to better style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Stop buttons wrapping and looking broken.
 * 4. Make buttons inherit font styles.
 * 5. Force all elements using beautons to appear clickable.
 * 6. Normalise box model styles.
 * 7. If the button’s text is 1em, and the button is (3 * font-size) tall, then
 *    there is 1em of space above and below that text. We therefore apply 1em
 *    of space to the left and right, as padding, to keep consistent spacing.
 * 8. Fixes odd inner spacing in IE7.
 * 9. Don’t allow buttons to have underlines; it kinda ruins the illusion.
 *10. Prevents from inheriting default anchor styles.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  white-space: nowrap;
  /* [3] */
  font-family: inherit;
  /* [4] */
  font-size: 100%;
  /* [4] */
  cursor: pointer;
  /* [5] */
  border: none;
  /* [6] */
  margin: 0;
  /* [6] */
  padding-top: 0;
  /* [6] */
  padding-bottom: 0;
  /* [6] */
  line-height: 2.5;
  /* [7] */
  height: 2.5em;
  /* [7] */
  padding-right: 1.5em;
  /* [7] */
  padding-left: 1.5em;
  /* [7] */
  overflow: visible;
  /* [8] */
  text-align: center;
  border-radius: 5px;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  background-color: #95a5a6; }
  .btn, .btn:link, .btn:visited {
    color: #fff; }
  .btn:hover, .btn:active, .btn:focus {
    background-color: #798d8f; }
  .btn, .btn:hover, .btn:active, .btn:focus, .btn:visited {
    text-decoration: none; }
  .btn:active, .btn:focus {
    outline: none; }
  .btn.disabled, .btn[disabled] {
    cursor: default;
    background-image: none;
    opacity: .5; }

.btn--primary {
  background-color: #288ad6; }
  .btn--primary, .btn--primary:link, .btn--primary:visited {
    color: #fff; }
  .btn--primary:hover, .btn--primary:active, .btn--primary:focus {
    background-color: #206eab; }

.btn--block {
  display: block;
  width: 100%;
  padding-left: 0;
  padding-right: 0; }
  .btn--block + .btn--block {
    margin-top: 10px; }

input[type="submit"].btn--block,
input[type="reset"].btn--block,
input[type="button"].btn--block {
  width: 100%; }

/**
 * Lists
 * =================================
 * - (Un)ordered lists
 * - Unstyled lists
 * - Definition lists
 * - Centred lists
 * - Floated lists
 */
ul {
  list-style-type: disc; }

ol {
  list-style-type: decimal; }

ul, ol {
  padding: 0;
  margin: 0 0 28px 28px; }
  ul ul,
  ul ol, ol ul,
  ol ol {
    margin-left: 56px; }
  ul ul, ol ul {
    list-style-type: circle; }
    ul ul ul, ol ul ul {
      list-style-type: square; }
  ul ol, ol ol {
    list-style-type: upper-roman; }
    ul ol ol, ol ol ol {
      list-style-type: lower-roman; }
  ul ul, ul ol, ol ul, ol ol {
    margin-bottom: 0; }

/**
 * Unstyled lists
 */
.unstyled {
  margin: 0;
  padding: 0;
  list-style: none;
  list-style-image: none; }

/**
 * Definition lists
 */
dl {
  margin-bottom: 28px; }

dt {
  font-weight: bold; }

dd {
  margin-left: 28px; }

/**
 * Centred lists
 *
 * Usage:
	<ul class="l-list--centred">
		<li></li>
	</ul>
 */
.l-list--centred, .l-list--centered {
  text-align: center; }
  .l-list--centred li, .l-list--centered li {
    display: inline; }

/**
 * Floated lists
 * Usage:
	<ul class="l-list--floated">
		<li></li>
	</ul>
 */
.l-list--floated:after {
  content: "";
  display: table;
  clear: both; }

.l-list--floated li {
  float: left;
  display: inline-block; }

/**
 * Embedded content
 * =================================
 */
img {
  font-style: italic;
  color: #c00;
  border: 0;
  -ms-interpolation-mode: bicubic; }

img,
object,
embed,
video {
  max-width: 100%; }

/**
 * Icons
 * =================================
 * For an example of how to use these, see
 * https://gist.github.com/mrmartineau/314b01b300fa20a5a820a4d6889ffd42
 * http://codepen.io/mrmartineau/pen/amkZBb?editors=1100
 *
 * SVG icon usage:
   <svg title="Whatsapp" class="icon icon--whatsapp">
     <use xlink:href="/assets/dist/img/icons.svg#logo-whatsapp"/>
   </svg>
 */
[class*="icon"] {
  speak: none; }

.icon--large {
  display: block;
  width: 120px;
  height: 120px; }

.icon--small {
  display: inline-block;
  width: 25px;
  height: 25px; }

/**
 * Included Social Media and other icons
 */
.icon--twitter {
  color: #55acee; }

.icon--facebook {
  color: #3b5998; }

.icon--instagram {
  color: #e4405f; }

.icon--pinterest {
  color: #bd081c; }

.icon--youtube {
  color: #cd201f; }

.icon--whatsapp {
  color: #25d366; }

.icon--email {
  color: #288ad6; }

.icon--kickoff {
  fill: #181830;
  color: #fe7c08; }

.icon--tmw {
  color: #ef7521;
  fill: #8a8b8c; }

/**
 * Skip to main content link
 * =================================
 * <div class="skipToContent">
	 	<a href="#mainContent" class="btn btn--primary">Skip to main content</a>
	 </div>
 */
.skipToContent {
  position: relative;
  text-align: center;
  height: 0; }
  .skipToContent a {
    position: relative;
    top: -100px;
    z-index: 100;
    background-color: #fff;
    transition: all 300ms cubic-bezier(0.77, 0, 0.175, 1); }
    .skipToContent a:focus {
      top: 5px; }

/**
 * Preformatted code
 * =================================
 * Code typography styles for the <code> and <pre> elements
 */
/**
 * Define associated Code variables
 */
code,
pre {
  padding: 0 3px 2px;
  font-family: Menlo, Monaco, "Courier New", monospace;
  font-size: 0.8rem;
  color: #444;
  border-radius: 3px;
  -moz-tab-size: 3;
       tab-size: 3; }

code {
  padding: 2px 4px;
  color: #444;
  background-color: #ddd; }

pre {
  display: block;
  padding: 14px;
  margin: 0 0 28px;
  color: #444;
  background-color: #ddd;
  border-radius: 4px;
  white-space: pre; }
  pre code {
    padding: 0;
    color: #444;
    background-color: #ddd;
    border: 0; }

.pre--scrollable {
  max-height: 340px;
  overflow-y: scroll; }

/**
 * Tables
 * =================================
 * - Associated Table Variables
 * - Default table Styles
 * – Table modifiers:
 *   - .table--striped
 * – .responsiveTable
 */
/**
 * Define associated Table variables
 */
/**
 * Customizes the `.table` component with basic values, each used across all table variations.
 */
table {
  width: 100%;
  max-width: 100%;
  margin-bottom: 28px;
  border-spacing: 0;
  border: 2px solid #ccc;
  background-color: #f1f1f1;
  table-layout: fixed; }
  table th,
  table td {
    padding: 8px;
    line-height: 28px;
    vertical-align: top;
    border: 1px solid #ccc; }
    table th:first-child,
    table td:first-child {
      border-left: 0; }
    table th:last-child,
    table td:last-child {
      border-right: 0; }
  table > thead th,
  table > thead td {
    vertical-align: bottom;
    border-bottom: 2px solid #ccc; }
  table > tfoot td {
    border-top: 2px solid #ccc;
    border-bottom: 0; }
  table > thead:first-child > tr:first-child > th,
  table > thead:first-child > tr:first-child > td {
    border-top: 0; }
  table tr:hover td, table tr:hover th {
    background-color: inherit; }
  table > tbody + tbody {
    border-top: 2px solid #ccc; }
  table table,
  table .table {
    background-color: #f1f1f1; }

th {
  text-align: left; }

/**
 * Zebra-striping
 * Default zebra-stripe styles (alternating gray and transparent backgrounds)
 */
.table--striped tbody :nth-child(odd) th,
.table--striped tbody :nth-child(odd) td {
  background-color: #f9f9f9 !important; }

/**
 * Responsive tables
 * Wrap your tables in `.responsiveTable` and we'll make them mobile friendly by enabling horizontal scrolling. Only applies <768px. Everything above that will display normally.
 *
 * If you need more responsive tables, consider Tablesaw by the Filament Group:
 * https://github.com/filamentgroup/tablesaw
 */
@media (max-width: 749px) {
  .responsiveTable {
    width: 100%;
    margin-bottom: 21px;
    overflow-y: hidden;
    overflow-x: auto;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    border: 1px solid #ccc;
    -webkit-overflow-scrolling: touch; }
    .responsiveTable > table {
      margin-bottom: 0;
      border: 0; }
      .responsiveTable > table > thead th,
      .responsiveTable > table > thead td,
      .responsiveTable > table > tbody th,
      .responsiveTable > table > tbody td,
      .responsiveTable > table > tfoot th,
      .responsiveTable > table > tfoot td {
        white-space: nowrap; }
        .responsiveTable > table > thead th:first-child,
        .responsiveTable > table > thead td:first-child,
        .responsiveTable > table > tbody th:first-child,
        .responsiveTable > table > tbody td:first-child,
        .responsiveTable > table > tfoot th:first-child,
        .responsiveTable > table > tfoot td:first-child {
          border-left: 0; }
        .responsiveTable > table > thead th:last-child,
        .responsiveTable > table > thead td:last-child,
        .responsiveTable > table > tbody th:last-child,
        .responsiveTable > table > tbody td:last-child,
        .responsiveTable > table > tfoot th:last-child,
        .responsiveTable > table > tfoot td:last-child {
          border-right: 0; }
      .responsiveTable > table > tbody > th,
      .responsiveTable > table > tbody > td,
      .responsiveTable > table > tfoot tr:last-child > th,
      .responsiveTable > table > tfoot tr:last-child > td {
        border-bottom: 0; } }

/**
 * Partials
 */
/**
 * Masthead
 * =================================
 */
/**
 * Footer
 * =================================
 */
/**
 * Browser upgrade message
 * =================================
 */
.browserupgrade {
  margin: .2em 0;
  background: #ccc;
  color: #000;
  padding: .2em 0; }

/**
 * Views
 */
/**
 * Global styles
 */
/**
 * Global app/site styles
 * =================================
 */
body {
  background-color: #f1f1f1; }

/**
 * Default layout container
 */
.l-container {
  width: 90%;
  max-width: 1000px;
  margin: 0 auto; }

/**
 * Helper/utility classes
 */
/**
 * Helper classes
 * =================================
 * Non-semantic helper classes
 */
/**
 * Clearfix
 * http://www.cssmojo.com/latest_new_clearfix_so_far/
 * See mixins/_utility.scss for a mixin version of this
 */
.clearfix::after {
  content: "";
  display: table;
  clear: both; }

.ir {
  background-color: transparent;
  background-repeat: no-repeat;
  border: 0;
  direction: ltr;
  display: block;
  overflow: hidden;
  text-align: left;
  text-indent: -999em; }
  .ir br {
    display: none; }

.is-hidden {
  display: none !important;
  visibility: hidden !important; }

.is-shown {
  display: block; }

.is-visuallyHidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }
  .is-visuallyHidden.focusable:active, .is-visuallyHidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto; }

.is-invisible {
  visibility: hidden; }

.l-floatLeft {
  float: left; }

.l-floatRight {
  float: right; }

.l-clear {
  clear: both;
  float: none; }

.l-mb0 {
  margin-bottom: 0 !important; }

.l-mt0 {
  margin-top: 0 !important; }

* {
  -webkit-tap-highlight-color: transparent !important; }

/* A hack for HTML5 contenteditable attribute on mobile */
textarea[contenteditable] {
  -webkit-appearance: none; }

.promote-layer {
  /*
	This may promote the layer to a composited
	layer.

	Replace with will-change when available

	#perfmatters
	*/
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }

.transition {
  transition: all 300ms cubic-bezier(0.77, 0, 0.175, 1); }

a,
area,
button,
input,
label,
select,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
      touch-action: manipulation; }

/**
 * Print styles
 */
/**
 * Print styles
 * =================================
 */
@media print {
  *,
  *:before,
  *:after,
  *:first-letter {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important; }
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
	 * Don't show links for images, or javascript/internal links
	 */
  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: ""; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  thead {
    display: table-header-group;
    /* h5bp.com/t */ }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  @page {
    margin: .5cm; }
  p, h2, h3 {
    orphans: 3;
    widows: 3; }
  h2, h3 {
    page-break-after: avoid; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtpY2tvZmYuY3NzIiwia2lja29mZi5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2tpY2tvZmYtdXRpbHMuc2Nzcy9zY3NzL2Z1bmN0aW9ucy9fZ2V0LXZhbHVlLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMva2lja29mZi11dGlscy5zY3NzL3Njc3MvZnVuY3Rpb25zL19tYXAtZGVlcC1nZXQuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9raWNrb2ZmLXV0aWxzLnNjc3Mvc2Nzcy9mdW5jdGlvbnMvX21vZHVsYXItc2NhbGUuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9raWNrb2ZmLXV0aWxzLnNjc3Mvc2Nzcy9mdW5jdGlvbnMvX211bHRpcGx5LnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMva2lja29mZi11dGlscy5zY3NzL3Njc3MvbWl4aW5zL19taXhpbnMuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9raWNrb2ZmLXV0aWxzLnNjc3Mvc2Nzcy9taXhpbnMvX3Jlc3BvbnNpdmUuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9raWNrb2ZmLXV0aWxzLnNjc3Mvc2Nzcy9taXhpbnMvX2hpZHBpLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMva2lja29mZi11dGlscy5zY3NzL3Njc3MvbWl4aW5zL191bml0cy5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2tpY2tvZmYtdXRpbHMuc2Nzcy9zY3NzL21peGlucy9fcG9zaXRpb24uc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9raWNrb2ZmLXV0aWxzLnNjc3Mvc2Nzcy9taXhpbnMvX3ZlcnRpY2FsLWNlbnRlci5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2tpY2tvZmYtdXRpbHMuc2Nzcy9zY3NzL21peGlucy9fdXRpbGl0eS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2tpY2tvZmYtdXRpbHMuc2Nzcy9zY3NzL21peGlucy9fbW9kdWxlLW5hbWluZy1oZWxwZXJzLnNjc3MiLCJfY29sb3ItcGFsZXR0ZS5zY3NzIiwiX3ZhcmlhYmxlcy5zY3NzIiwiX3Jlc2V0LnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLXNjc3Mvc2Fzcy9ub3JtYWxpemUvX25vcm1hbGl6ZS1taXhpbi5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS1zY3NzL3Nhc3Mvbm9ybWFsaXplL192YXJpYWJsZXMuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUtc2Nzcy9zYXNzL25vcm1hbGl6ZS9fdmVydGljYWwtcmh5dGhtLnNjc3MiLCJfdHlwb2dyYXBoeS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2luY2x1ZGUtbWVkaWEvZGlzdC9faW5jbHVkZS1tZWRpYS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2tpY2tvZmYtZmx1aWRWaWRlby5jc3Mvc2Nzcy9pbmRleC5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2tpY2tvZmYtZ3JpZC5jc3Mvc2Nzcy9pbmRleC5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2tpY2tvZmYtZ3JpZC5jc3Mvc2Nzcy9fZ3JpZC12YXJpYWJsZXMuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9raWNrb2ZmLWdyaWQuY3NzL3Njc3MvX2dyaWQtaGVscGVycy5zY3NzIiwiY29tcG9uZW50cy9mb3Jtcy9fZm9ybXMuc2NzcyIsImNvbXBvbmVudHMvZm9ybXMvX2Zvcm0tdGhlbWUtc3RhbmRhcmQuc2NzcyIsImNvbXBvbmVudHMvZm9ybXMvX2Zvcm0taGVscGVycy5zY3NzIiwiY29tcG9uZW50cy9mb3Jtcy9fZm9ybXMtY3VzdG9tLXJhZGlvc2NoZWNrYm94ZXMuc2NzcyIsImNvbXBvbmVudHMvZm9ybXMvX2Zvcm1zLWN1c3RvbS1zZWxlY3Quc2NzcyIsImNvbXBvbmVudHMvZm9ybXMvX2Zvcm1zLWN1c3RvbS1maWxlLnNjc3MiLCJjb21wb25lbnRzL19saW5rcy5zY3NzIiwiY29tcG9uZW50cy9fYnV0dG9ucy5zY3NzIiwiY29tcG9uZW50cy9fbGlzdHMuc2NzcyIsImNvbXBvbmVudHMvX2VtYmVkZGVkLWNvbnRlbnQuc2NzcyIsImNvbXBvbmVudHMvX2ljb25zLnNjc3MiLCJjb21wb25lbnRzL19za2lwLW5hdmlnYXRpb24uc2NzcyIsImNvbXBvbmVudHMvX2NvZGUuc2NzcyIsImNvbXBvbmVudHMvX3RhYmxlcy5zY3NzIiwicGFydGlhbHMvX21hc3RoZWFkLnNjc3MiLCJwYXJ0aWFscy9fZm9vdGVyLnNjc3MiLCJwYXJ0aWFscy9fYnJvd3Nlci11cGdyYWRlLnNjc3MiLCJfZ2xvYmFsLnNjc3MiLCJfaGVscGVyLWNsYXNzZXMuc2NzcyIsInZpZXdzL19wcmludC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjtBQ0FqQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQ0c7QUFHSDs7R0FFRztBQ3JDSDs7Ozs7O0dBTUc7QUFhSDs7Ozs7Ozs7O0dBU0c7QUFNSDs7Ozs7Ozs7O0dBU0c7QUMzQ0g7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUNoQkg7Ozs7O0dBS0c7QUFzRUg7Ozs7OztHQU1HO0FDakZIOzs7Ozs7OztHQVFHO0FDUkg7Ozs7Ozs7O0dBUUc7QUNSSDs7Ozs7OztHQU9HO0FBY0g7Ozs7R0FJRztBQVVIOzs7O0dBSUc7QUFVSDs7OztHQUlHO0FDckRIOzs7O0dBSUc7QUFXSDs7O0dBR0c7QUFhSDs7O0dBR0c7QUNqQ0g7Ozs7Ozs7R0FPRztBQVdIOztHQUVHO0FDckJIOzs7O0dBSUc7QUNKSDs7Ozs7R0FLRztBQ0xIOzs7Ozs7Ozs7R0FTRztBQTRGSDs7R0FFRztBQ3ZHSDs7Ozs7O0dBTUc7QVpvQ0g7OztHQUdHO0FhN0NIOzs7Ozs7Ozs7O0dBVUc7QUNWSDs7Ozs7Ozs7R0FRRztBQUVILG1DQUFtQztBQUVuQzs7Ozs7OztHQU9HO0FBc0NIOzs7Ozs7O0dBT0c7QUFpQkg7Ozs7OztHQU1H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O0VBQ0MsYUFBWSxFQUNaOztBQUVEO0VBQ0MsWUFBVztFQUNYLFlBQVcsRUFDWDs7QUFFRDtFQUFTLDRCQUEyQixFQUFLOztBQUN6QztFQUFTLHlCQUF3QixFQUFLOztBQUd0QztFQUNDLG9EQUFtRCxFQUNuRDs7QUFFRCwwREFBMEQ7QUFDMUQ7RUFDQyx5QkFBd0IsRUFDeEI7O0FBRUQ7RUFDQzs7Ozs7OztHQU9FO0VBQ0Ysb0NBQTJCO1VBQTNCLDRCQUEyQixFQUMzQjs7QUFHRDtFQUNDLHNEN0JRNkQsRTZCUDdEOztBQUlEOzs7Ozs7OztFQVFDLCtCQUEwQjtNQUExQiwyQkFBMEIsRUFDMUI7O0EzQ1JEOztHQUVHO0E0Q3JISDs7O0dBR0c7QUFFSDtFQUNDOzs7O0lBSUMsbUNBQWtDO0lBQ2xDLHVCQUFzQjtJQUFHLCtEQUErRDtJQUN4Riw0QkFBMkI7SUFDM0IsNkJBQTRCLEVBQzVCO0VBRUQ7SUFFRSwyQkFBMEIsRUFDMUI7RUFIRjtJQU1FLDZCQUE0QixFQUM1QjtFQUdGO0lBQ0MsOEJBQTZCLEVBQzdCO0VBRUQ7O0lBRUc7RUFDSDs7O0lBR0MsWUFBVyxFQUNYO0VBRUQ7O0lBRUMsdUJBQXNCO0lBQ3RCLHlCQUF3QixFQUN4QjtFQUVEO0lBQ0MsNEJBQTJCO0lBQUcsZ0JBQWdCLEVBQzlDO0VBRUQ7O0lBRUMseUJBQXdCLEVBQ3hCO0VBRUQ7SUFDQywyQkFBMEIsRUFDMUI7RUFFRDtJQUNDLGFBQVksRUFBQTtFQUdiO0lBQ0MsV0FBVTtJQUNWLFVBQVMsRUFDVDtFQUVEO0lBQ0Msd0JBQXVCLEVBQ3ZCLEVBQUEiLCJmaWxlIjoia2lja29mZi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4vKipcbiAqIOKWiOKWiOKVlyAg4paI4paI4pWX4paI4paI4pWXIOKWiOKWiOKWiOKWiOKWiOKWiOKVl+KWiOKWiOKVlyAg4paI4paI4pWXIOKWiOKWiOKWiOKWiOKWiOKWiOKVlyDilojilojilojilojilojilojilojilZfilojilojilojilojilojilojilojilZdcbiAqIOKWiOKWiOKVkSDilojilojilZTilZ3ilojilojilZHilojilojilZTilZDilZDilZDilZDilZ3ilojilojilZEg4paI4paI4pWU4pWd4paI4paI4pWU4pWQ4pWQ4pWQ4paI4paI4pWX4paI4paI4pWU4pWQ4pWQ4pWQ4pWQ4pWd4paI4paI4pWU4pWQ4pWQ4pWQ4pWQ4pWdXG4gKiDilojilojilojilojilojilZTilZ0g4paI4paI4pWR4paI4paI4pWRICAgICDilojilojilojilojilojilZTilZ0g4paI4paI4pWRICAg4paI4paI4pWR4paI4paI4paI4paI4paI4pWXICDilojilojilojilojilojilZdcbiAqIOKWiOKWiOKVlOKVkOKWiOKWiOKVlyDilojilojilZHilojilojilZEgICAgIOKWiOKWiOKVlOKVkOKWiOKWiOKVlyDilojilojilZEgICDilojilojilZHilojilojilZTilZDilZDilZ0gIOKWiOKWiOKVlOKVkOKVkOKVnVxuICog4paI4paI4pWRICDilojilojilZfilojilojilZHilZrilojilojilojilojilojilojilZfilojilojilZEgIOKWiOKWiOKVl+KVmuKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKVkSAgICAg4paI4paI4pWRXG4gKiDilZrilZDilZ0gIOKVmuKVkOKVneKVmuKVkOKVnSDilZrilZDilZDilZDilZDilZDilZ3ilZrilZDilZ0gIOKVmuKVkOKVnSDilZrilZDilZDilZDilZDilZDilZ0g4pWa4pWQ4pWdICAgICDilZrilZDilZ1cbiAqIEJ5IFphbmRlciBNYXJ0aW5lYXUgJiBBc2hsZXkgTm9sYW5cbiAqIGh0dHA6Ly90cnlraWNrb2ZmLmNvbVxuICpcbiAqIFByb2plY3QgZGVwZW5kZW5jaWVzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIC0gTWl4aW5zLCBoZWxwZXJzIGFuZCBmdW5jdGlvbnNcbiAqIC0gQ29yZSB2YXJpYWJsZXNcbiAqIC0gQ1NTIHJlc2V0c1xuICogLSBUeXBvZ3JhcGh5IHN0eWxlc1xuICogLSBDb21wb25lbnRzXG4gKiAtIFBhcnRpYWxzXG4gKiAtIFZpZXdzXG4gKiAtIEdsb2JhbCBzdHlsZXNcbiAqIC0gSGVscGVyL3V0aWxpdHkgY2xhc3Nlc1xuICogLSBQcmludCBzdHlsZXNcbiAqXG4gKiBSZWFkIGFib3V0IG91ciBkaXN0aW5jdGlvbiBiZXR3ZWVuIHZpZXdzLCBwYXJ0aWFscyBhbmQgY29tcG9uZW50cyBhdFxuICogaHR0cHM6Ly90cnlraWNrb2ZmLmNvbS9sZWFybi9jc3MuaHRtbCN2aWV3cy1wYXJ0aWFscy0tY29tcG9uZW50c1xuICpcbiAqICMjIFllb21hblxuICogVGhlIFllb21hbiBnZW5lcmF0b3IgY2FuIGFsc28gYmUgdXNlZCB0byBhZGQgbmV3IHZpZXdzLCBwYXJ0aWFscyBhbmRcbiAqIGNvbXBvbmVudHMuIGUuZy4gYHlvIGtpY2tvZmY6c2Fzczpjb21wb25lbnQgZm9vYCB3aWxsIGNyZWF0ZSBhIG5ldyBmaWxlOlxuICogYHNjc3MvY29tcG9uZW50cy9fY29tcG9uZW50LnNjc3NgIGFuZCBhZGQgdGhlIGBAaW1wb3J0YCBzdGF0ZW1lbnQgaW4gdGhpc1xuICogZmlsZS4gSW5zdGFsbCB0aGUgZ2VuZXJhdG9yIGJ5IHJ1bm5pbmcgYG5wbSBpIC1nIHlvIGdlbmVyYXRvci1raWNrb2ZmYFxuICpcbiAqL1xuLypcbiAqIE1peGlucywgaGVscGVycyBhbmQgZnVuY3Rpb25zXG4gKi9cbi8qKlxuICogVXNhZ2U6XG4gKlxuICoga28tZ2V0VmFsKDEwMCwgJG1hcCkgLSB1c2VzIGFuIGludGVnZXJcbiAqIGtvLWdldFZhbChtaWQsICRtYXApIC0gdXNlcyBhIFNhc3MgbWFwXG4gKiBrby1nZXRWYWwoJGZvbywgJG1hcCkgLSB1c2VzIGEgU2FzcyB2YXJpYWJsZVxuICovXG4vKipcbiAqIEdldCBicmVha3BvaW50c1xuICpcbiAqIGtvLWJwKClcbiAqXG4gKiBVc2FnZTpcbiAqIGtvLWJwKDEwMCkgLSB1c2VzIGFuIGludGVnZXJcbiAqIGtvLWJwKG1pZCkgLSB1c2VzIHRoZSAkYnJlYWtwb2ludHMgU2FzcyBtYXBcbiAqIGtvLWJwKCRmb28pIC0gdXNlcyBhIFNhc3MgdmFyaWFibGVcbiAqL1xuLyoqXG4gKiBHZXQgdHlwZSBzaXplXG4gKlxuICoga28tdHlwZSgpXG4gKlxuICogVXNhZ2U6XG4gKiBrby10eXBlKDEwMCkgLSB1c2VzIGFuIGludGVnZXJcbiAqIGtvLXR5cGUobWlkKSAtIHVzZXMgdGhlICR0eXBlIFNhc3MgbWFwXG4gKiBrby10eXBlKCRmb28pIC0gdXNlcyBhIFNhc3MgdmFyaWFibGVcbiAqL1xuLyoqXG4gKiBVc2FnZTpcbiAqXG4gJGdyaWQtY29uZmlndXJhdGlvbjogKFxuICAgJ2NvbHVtbnMnOiAxMixcbiAgICdsYXlvdXRzJzogKFxuICAgICAnc21hbGwnOiA4MDBweCxcbiAgICAgJ21lZGl1bSc6IDEwMDBweCxcbiAgICAgJ2xhcmdlJzogMTIwMHB4LFxuICAgKSxcbiApO1xuXG4gZGl2IHtcbiAgIGZvbnQtc2l6ZToga28tbWFwLWRlZXAtZ2V0KCRncmlkLWNvbmZpZ3VyYXRpb24sICdjb2x1bW5zJyk7XG4gICB3aWR0aDoga28tbWFwLWRlZXAtZ2V0KCRncmlkLWNvbmZpZ3VyYXRpb24sICdsYXlvdXRzJywgJ21lZGl1bScpO1xuIH1cbiAqL1xuLyoqXG4gKiBNb2R1bGFyIHNjYWxlXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIFVzYWdlOiBrby1tb2R1bGFyLXNjYWxlKCRmb250LXNpemUtYmFzZSwgMywgJHR5cGUtc2NhbGUpXG4gKiBvciB3aXRoIHRoZSBzaG9ydGhhbmQgdmVyc2lvbjoga28tbXMoMylcbiAqL1xuLyoqXG4gKiBTaG9ydGhhbmQgbW9kdWxhciBzY2FsZVxuICogVXNlcyB0aGUgJGZvbnQtc2l6ZS1iYXNlIGFuZCAkdHlwZS1zY2FsZSBmcmFtZXdvcmsgdmFyaWFibGVzIHNvIHRoYXQgeW91XG4gKiBvbmx5IG5lZWQgdG8gcHJvdmlkZSB0aGUgc2NhbGUgaW5jcmVtZW50XG4gKlxuICogZS5nLiBrby1tcyg1KVxuICovXG4vKipcbiAqIE11bHRpcGx5XG4gKiA9PT09PT09PT09PT09PT09PVxuICogTXVsdGlwbHkgYW55IHZhbHVlXG4gKlxuICogVXNhZ2U6XG4gKiBrby1tdWx0aXBseSgxNSwgMilcbiAqIGtvLW11bHRpcGx5KCRiYXNlbGluZSwgMS41KVxuICovXG4vKipcbiAqIFNhc3MgTWl4aW5zXG4gKiAtIFJlc3BvbnNpdmVcbiAqIC0gRGltZW5zaW9uc1xuICogLSBQb3NpdGlvbmluZ1xuICogLSBVdGlsaXR5XG4gKiAtIEZvcm1zXG4gKiAtIE1vZHVsZSBOYW1pbmcgSGVscGVyc1xuICovXG4vKipcbiAqIFJlc3BvbnNpdmUgbWVkaWEgcXVlcnkgbWl4aW5zXG4gKiAtIFRoZXNlIGFyZSB1c2VkIHNvIHRoYXQgd2UgY2FuIGRlZmluZSBzZXBhcmF0ZSBtZWRpYS1xdWVyeSBjb250ZW50XG4gKiAtIEFyZ3VtZW50cyBjYW4gdXNlOlxuICogICAtIGEgbmFtZWQgYnJlYWtwb2ludCBpbiB0aGUgJGJyZWFrcG9pbnRzIG1hcCwgZS5nLiBtaWRcbiAqICAgLSBhIHBpeGVsIHZhbHVlIGUuZy4gNTAwcHhcbiAqICAgLSBhIHVuaXRsZXNzIHZhbHVlIHRoYXQgaXMgZXFpdmFsZW50IHRvIGEgcGl4ZWwgZS5nLiA1MDBcbiAqL1xuLyoqXG4gKiBNaW4td2lkdGggbWVkaWEgcXVlcnk6XG4gKiAtIEVxdWl2YWxlbnQgdG86IEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDIwZW0pIHsgLi4uIH1cbiAqIC0gVXNhZ2U6IEBpbmNsdWRlIGtvLXJlc3BvbmQtbWluKG1pZCkgeyAuLi4gfTtcbiAqL1xuLyoqXG4gKiBNYXgtd2lkdGggbWVkaWEgcXVlcnk6XG4gKiAtIEVxdWl2YWxlbnQgdG86IEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDIwZW0pIHsgLi4uIH1cbiAqIC0gVXNhZ2U6IEBpbmNsdWRlIGtvLXJlc3BvbmQtbWF4KG1pZCkgeyAuLi4gfTtcbiAqL1xuLyoqXG4gKiBNaW4tbWF4LXdpZHRoIG1lZGlhIHF1ZXJ5OlxuICogLSBFcXVpdmFsZW50IHRvOiBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMGVtKSBhbmQgKG1heC13aWR0aDogMjBlbSkgeyAuLi4gfVxuICogLSBVc2FnZTogQGluY2x1ZGUga28tcmVzcG9uZC1taW4tbWF4KG5hcnJvdywgNjAwKSB7IC4uLiB9O1xuICovXG4vKipcbiAqICBIaURQSSBtaXhpbi5cbiAqICBAaW5jbHVkZSBrby1oaWRwaSB7IC4uLiB9O1xuICogIERlZmF1bHQgdmFsdWUgc2V0IHRvIDEuMyB0byB0YXJnZXQgR29vZ2xlIE5leHVzIDcgKGh0dHA6Ly9iamFuZ28uY29tL2FydGljbGVzL21pbi1kZXZpY2UtcGl4ZWwtcmF0aW8vKVxuICovXG4vKipcbiAqIEhpZHBpIHdpdGggYSBtaW5pbXVtIHdpZHRoIG1lZGlhIHF1ZXJ5XG4gKiBAaW5jbHVkZSBrby1oaWRwaS1taW4oYnAobWlkKSwgMS41KSB7IC4uLiB9O1xuICovXG4vKipcbiAqIEhpZHBpIHdpdGggYSBtYXggd2lkdGggbWVkaWEgcXVlcnlcbiAqIEBpbmNsdWRlIGtvLWhpZHBpLW1heChicChtaWQpLCAxLjMpIHsgLi4uIH07XG4gKi9cbi8qKlxuICogRGltZW5zaW9ucy1iYXNlZCBtaXhpbnNcbiAqIC0gUkVNIGNhbGN1bGF0aW9uXG4gKiAtIFR5cG9ncmFwaHkgbWl4aW5zIGJhc2VkIG9uIHRoZSBSRU0gbWl4aW5cbiAqICAgLSBmb250LXNpemVcbiAqICAgLSBsaW5lLWhlaWdodFxuICogICAtIGZvbnQtc2l6ZS1lbXNcbiAqL1xuLyoqXG4gKiBUeXBvZ3JhcGh5IG1peGluc1xuICovXG4vKipcbiAqIGtvLXBvc2l0aW9uXG4gKiBVc2FnZTpcbiAqIEBpbmNsdWRlIGtvLXBvc2l0aW9uKGFic29sdXRlLCAxMHB4IDIwcHggMzBweCAxMHB4KTtcbiAqL1xuLyoqXG4gKiB2ZXJ0aWNhbC1jZW50ZXJcbiAqIFZlcnRpY2FsbHkgY2VudGVyIGFueSBlbGVtZW50LiBOZWVkcyBzdXBwb3J0IGZvciBDU1MgdHJhbmZvcm1zLlxuICogVXNhZ2U6XG4gKiBAaW5jbHVkZSBrby12ZXJ0aWNhbC1jZW50ZXI7XG4gKi9cbi8qKlxuICogVXRpbGl0eSBNaXhpbnNcbiAqIC0gY2xlYXJmaXhcbiAqIC0gZm9udC1mYWNlXG4gKiAtXG4gKiAtIHNpemluZyBzaG9ydGN1dHNcbiAqICAgLSBzaXplXG4gKiAgIC0gc3F1YXJlXG4gKiAtIHJlc2l6YWJsZVxuICovXG4vKipcbiAqIFNpemluZyBzaG9ydGN1dHNcbiAqL1xuLyoqXG4gKiBiZW1pZnkgW21vZGlmaWVkIGZvciBLaWNrb2ZmXVxuICogaHR0cHM6Ly9ndGlodWIuY29tL2ZyYW56aGVpZGwvYmVtaWZ5XG4gKiBGcmFueiBIZWlkbCAyMDE1XG4gKlxuICogVXNhZ2U6IGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL21ybWFydGluZWF1LzBjZDIwMTBiZjI2NWQ3MTJiYWZiXG4gKi9cbi8qKlxuICogQ29yZSB2YXJpYWJsZXNcbiAqIEVkaXQgeW91ciBjb2xvciBwYWxldHRlIGFuZCBhcHAgdmFycyBiZWZvcmUgeW91ciBiZWdpblxuICovXG4vKipcbiAqIEdsb2JhbCBjb2xvciBwYWxldHRlXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIC0gR2VuZXJpYyBjb2xvcnNcbiAqIC0gQ29sb3Igc2NoZW1lXG4gKiAtIENvbW1vbiBjb2xvcnNcbiAqIC0gTGlua3NcbiAqIC0gVGV4dCBzZWxlY3Rpb25cbiAqIC0gPGhyPlxuICogLSBBbnkgb3RoZXJzLi5cbiAqL1xuLyoqXG4gKiBWYXJpYWJsZXNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogLSBUeXBvZ3JhcGh5XG4gKiAtIEJyZWFrcG9pbnRzXG4gKiAtIFBhdGhzXG4gKiAtIExheW91dCAmIEdyaWRcbiAqIC0gQXBwLXNwZWNpZmljXG4gKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlIGluZGVudGF0aW9uICovXG4vKipcbiAqIFR5cG9ncmFwaHlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICpcbiAqIEJhc2Ugc2l6ZXM6XG4gKiBTZXQgdGhpcyBpbiBwaXhlbHMgKGJ1dCBkbyBub3QgYWRkIHB4KSxcbiAqIHRoZSBmb250LXNpemUgbWl4aW4gd2lsbCBjb252ZXJ0IHRvIFJFTVNcbiAqL1xuLyoqXG4gKiBCcmVha3BvaW50c1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBUaGVyZSBhcmUgbm8gY29tbW9uIGJyZWFrcG9pbnRzIHNvIHRoZXNlIGFyZSBqdXN0IGEgc3VnZ2VzdGlvbnNcbiAqIFlvdSdsbCBuZWVkIHRvIGRlZmluZSB5b3VyIG93biBicmVha3BvaW50cyB0byBzdWl0IHlvdXIgZGVzaWduXG4gKiBBZGQgeW91ciBicmVha3BvaW50cyB0byB0aGlzIFNhc3MgbWFwXG4gKiBVc2VkIGluIHRoZSBLaWNrb2ZmIGdyaWRcbiAqL1xuLyoqXG4gKiBHcmlkXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIFRoZXNlIHZhcmlhYmxlcyB3aWxsIGNvbnRyb2wgdGhlIGdyaWQgbW9kdWxlLlxuICpcbiAqIGlmIHlvdXIgcHJvamVjdCBkb2VzbnQgdXNlIEtpY2tvZmbigJlzIGRlZmF1bHQgZ3JpZCwgeW91IGNhbiBkZWxldGUgdGhlc2VcbiAqL1xuLyoqXG4gKiBQYXRoIHZhcmlhYmxlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbi8qKlxuICogWi1pbmRleCB2YXJpYWJsZXNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG4vKipcbiAqIEFwcC1zcGVjaWZpYyB2YXJpYWJsZXNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG4vKipcbiAqIENTUyByZXNldHNcbiAqL1xuLyoqXG4gKiBLaWNrb2ZmIHJlc2V0XG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIFdlIHVzZSBub3JtYWxpemUuY3NzIGZvciB0aGUgYnVsayBvZiBvdXIgJ3Jlc2V0J1xuICovXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0OyB9XG5cbi8qISBub3JtYWxpemUtc2NzcyB8IE1JVC9HUEx2MiBMaWNlbnNlIHwgYml0Lmx5L25vcm1hbGl6ZS1zY3NzICovXG4vKiBEb2N1bWVudFxuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICAgKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqIDMuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW5cbiAgICAgKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gICAgICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDIgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDMgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAzICovIH1cblxuLyogU2VjdGlvbnNcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICAgICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gICAgICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZm9vdGVyLFxuaGVhZGVyLFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICAgICAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAgICAgKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICAgICAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAgICAgKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gICAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAgICAgKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAgICAgKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gICAgICovXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBMaW5rc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAgICAgKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gICAgICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICAgICAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAgICAgKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAgICAgKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICAgKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICAgICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICAgICAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gICAgICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gICAgICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gICAgICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAgICAgKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICAgICAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gICAgICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICAgICAqL1xubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAgICAgKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAgICAgKiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuYXVkaW8sXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICAgICAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICAgICAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICAgICAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qKlxuICAgICAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICAgICAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEZvcm1zXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAgICAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gICAgICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICAgICAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICAgICAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICAgICAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gICAgICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gICAgICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICAgICAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAgICAgKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAgICAgKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAgICAgKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLyoqXG4gICAgICAgKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICAgICAgICovXG4gIC8qKlxuICAgICAgICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICAgICAgICovIH1cbiAgYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuICBbdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcbiAgW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcbiAgW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIGJ1dHRvbjotbW96LWZvY3VzcmluZyxcbiAgW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG4gIFt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG4gIFt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXG4gICAgICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAgICAgKi9cbmlucHV0IHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gICAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICAgICAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gICAgICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICAgICAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAgICAgKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gICAgICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovXG4gIC8qKlxuICAgICAgICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAgICAgICAqLyB9XG4gIFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLCBbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICAgICAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gICAgICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICAgICAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAgICAgKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICAgKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICAgICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICAgICAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAgICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICAgICAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gICAgICovXG5wcm9ncmVzcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAgICAgKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICAgICAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAgICAgKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLypcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAgICAgKi9cbm1lbnUge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKiBTY3JpcHRpbmdcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAgICovXG5jYW52YXMge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gICAgICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogSGlkZGVuXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAgICAgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiAqIFR5cG9ncmFwaHkgc3R5bGVzXG4gKiBTZWUgaHR0cHM6Ly90cnlraWNrb2ZmLmNvbS9kZW1vcy90eXBvZ3JhcGh5Lmh0bWwgZm9yIG1vcmUgaW5mb1xuICovXG4vKipcbiAqIFR5cG9ncmFwaHlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogLSBCYXNlXG4gKiAtIFBhcmFncmFwaHNcbiAqIC0gSGVhZGluZ3NcbiAqIC0gVHlwZSBzaXplc1xuICogLSBNaXNjXG4gKiAtIFV0aWxpdGllc1xuICpcbiAqIEJvZHkgZm9udCBzaXplLCBsZWFkaW5ncyBldGMgaGF2ZSBiZWVuIHNldCBpbiBfdmFyaWFibGVzLnNjc3NcbiAqXG4gKiBTZWUgaHR0cDovL21vZHVsYXJzY2FsZS5jb20gZm9yXG4gKlxuICovXG5odG1sIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICB0ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NTFweCkge1xuICAgIGh0bWwge1xuICAgICAgZm9udC1zaXplOiAyMHB4OyB9IH1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU2Vnb2UgVUlcIiwgUm9ib3RvLCBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLCBcIkZpcmEgU2Fuc1wiLCBcIkRyb2lkIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGNvbG9yOiAjNDQ0O1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwibGlnYVwiLCBcImRsaWdcIiwgXCJoaXN0XCI7XG4gIGZvbnQtdmFyaWFudC1saWdhdHVyZXM6IGNvbW1vbi1saWdhdHVyZXMgZGlzY3JldGlvbmFyeS1saWdhdHVyZXMgaGlzdG9yaWNhbC1saWdhdHVyZXM7IH1cblxuLyoqXG4gKiBQYXJhZ3JhcGhzXG4gKi9cbnAge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNlZ29lIFVJXCIsIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgXCJGaXJhIFNhbnNcIiwgXCJEcm9pZCBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAyOHB4OyB9XG5cbi8qKlxuICogSGVhZGluZ3NcbiAqL1xuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNlZ29lIFVJXCIsIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgXCJGaXJhIFNhbnNcIiwgXCJEcm9pZCBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZWxlZ2liaWxpdHk7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDI4cHg7IH1cbiAgaDEgc21hbGwsXG4gIGgyIHNtYWxsLFxuICBoMyBzbWFsbCxcbiAgaDQgc21hbGwsXG4gIGg1IHNtYWxsLFxuICBoNiBzbWFsbCB7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5oMSxcbi5oMSxcbi5hbHBoYSB7XG4gIGZvbnQtc2l6ZTogMS45NTMxMnJlbTtcbiAgbWFyZ2luLWJvdHRvbTogNTZweDsgfVxuXG5oMixcbi5oMixcbi5iZXRhIHtcbiAgZm9udC1zaXplOiAxLjU2MjVyZW07IH1cblxuaDMsXG4uaDMsXG4uZ2FtbWEge1xuICBmb250LXNpemU6IDEuMjVyZW07IH1cblxuaDQsXG4uaDQsXG4uZGVsdGEge1xuICBmb250LXNpemU6IDFyZW07IH1cblxuaDUsXG4uaDUsXG4uZXBzaWxvbixcbmg2LFxuLmg2LFxuLnpldGEge1xuICBmb250LXNpemU6IDFyZW07XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cblxuKiArIGgxLFxuKiArIC5oMSxcbiogKyAuYWxwaGEsXG4qICsgaDIsXG4qICsgLmgyLFxuKiArIC5iZXRhLFxuKiArIGgzLFxuKiArIC5oMyxcbiogKyAuZ2FtbWEsXG4qICsgaDQsXG4qICsgLmg0LFxuKiArIC5kZWx0YSB7XG4gIG1hcmdpbi10b3A6IDI4cHg7IH1cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIE1pc2NlbGxhbmVvdXNcbiAqL1xuc3Ryb25nLFxuYiB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbmVtLFxuaSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgI2RkZDtcbiAgY3Vyc29yOiBoZWxwOyB9XG5cbi8qKlxuICogQmxvY2txdW90ZXNcbiAqL1xuYmxvY2txdW90ZSB7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgbWFyZ2luOiAyOHB4O1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICNjY2NjY2M7IH1cbiAgYmxvY2txdW90ZSBwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBmb250LXdlaWdodDogMzAwOyB9XG4gIGJsb2NrcXVvdGUgc21hbGwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbG9yOiAjYjNiM2IzOyB9XG4gICAgYmxvY2txdW90ZSBzbWFsbDo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICdcXDIwMTQgXFwwMEEwJzsgfVxuXG5xOjpiZWZvcmUsIHE6OmFmdGVyLFxuYmxvY2txdW90ZTo6YmVmb3JlLFxuYmxvY2txdW90ZTo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiOyB9XG5cbmNpdGUge1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmVlZjZkO1xuICBwYWRkaW5nOiAycHggNHB4O1xuICBib3JkZXItcmFkaXVzOiAzcHg7IH1cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBNZW5sbywgTW9uYWNvLCBcIkNvdXJpZXIgTmV3XCIsIG1vbm9zcGFjZTsgfVxuXG4vKipcbiAqIFV0aWxpdGllc1xuICovXG4udGV4dC1jZW50cmUsXG4udGV4dC1jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLnRleHQtbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuLnRleHQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDsgfVxuXG46Oi1tb3otc2VsZWN0aW9uIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMxODE4MzA7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMxODE4MzA7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbmhyIHtcbiAgbWFyZ2luOiAyOHB4IDA7XG4gIGJvcmRlcjogMDtcbiAgaGVpZ2h0OiAxcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiM2IzYjM7IH1cblxuLmh5cGhlbmF0ZSB7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgaHlwaGVuczogYXV0bzsgfVxuXG4vKipcbiAqIENvbXBvbmVudHNcbiAqIFNlZSBodHRwczovL3RyeWtpY2tvZmYuY29tL2RlbW9zL2NvbXBvbmVudHMuaHRtbCBmb3IgbW9yZSBpbmZvXG4gKlxuICogTm90ZTogcGxhY2UgYWxsIDNyZCBwYXJ0eSBjb21wb25lbnRzIGF0IHRoZSB0b3Agb2YgdGhlIGxpc3RcbiAqL1xuLmZsdWlkVmlkZW8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMDtcbiAgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgfVxuICAuZmx1aWRWaWRlby0tNC0zIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNzUlOyB9XG5cbi5mbHVpZFZpZGVvLWl0ZW0sXG4uZmx1aWRWaWRlbyBpZnJhbWUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4vKipcbiAqIFRoZSBLaWNrb2ZmIEZsZXhib3ggR3JpZFxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBEZWZhdWx0IGdyaWQgY2xhc3Nlc1xuICogR3JpZCBndXR0ZXIgb3B0aW9uc1xuICogTW9kaWZpZXIgQ2xhc3NlcyAoY29sdW1uIGhlaWdodCBhbmQgY2VsbCBhbGlnbm1lbnQpXG4gKiBMZWdhY3kgZmFsbGJhY2tzIGZvciBmbGV4Ym94XG4gKiBHcmlkIHNwYW4gY2xhc3Nlc1xuICogQnJlYWtwb2ludCBzdGFja2luZ1xuICovXG4vKiBJbXBvcnQgR3JpZCBoZWxwZXJzIGFuZCBtaXhpbnMgKi9cbi8qKlxuICogR3JpZCBWYXJpYWJsZXNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogVGhlc2UgYXJlIGRlZmluZWQgaGVyZSBzbyB0aGF0IHRoZSBncmlkIGNhbiBydW4gYXMgYSBzdGFuZGFsb25lIG1vZHVsZSAob3V0c2lkZSBvZiBLaWNrb2ZmKSxcbiAqIGFzIHdlbGwgYXMgYWxsb3dpbmcgdGhlc2UgZmlsZXMgdG8gYmUgZ2VuZXJhdGVkIGludG8gc3RhbmRhcmQgQ1NTLlxuICpcbiAqIFdoZW4gaW1wb3J0aW5nIHRoZSBncmlkIGludG8geW91ciBvd24gcHJvamVjdCwgY29weSB0aGUgdmFyaWFibGVzIGZyb20gdGhpcyBmaWxlIGludG8geW91ciBvd24gdmFyaWFibGVzLnNjc3NcbiAqIFRoZXkgd2lsbCB0aGVuIG92ZXJyaWRlIHRoZSB2YWx1ZXMgc3BlY2lmaWVkIGhlcmUgKGFzIGxvbmcgYXMgdGhlIGdyaWQgaXMgaW1wb3J0ZWQgYmVsb3cgd2hlcmUgeW91ciBvd24gdmFyaWFibGVzIGFyZSBkZWZpbmVkKS5cbiAqL1xuLyoqXG4gKiBLaWNrb2ZmIGdyaWQgaGVscGVyc1xuICovXG4vKipcbiAqIEdyaWQgc3RhY2tpbmdcbiAqIFN0YWNrIGdyaWRzIGJhc2VkIG9uIGEgZ2l2ZW4gYnJlYWtwb2ludFxuICpcbiAqIFVzYWdlOlxuICogLmctLXN0YWNrLS1uYXJyb3dcbiAqIC5nLS1zdGFjay0td2lkZVxuICovXG4vKipcbiAqIEd1dHRlciBDYWxjdWxhdGlvbnNcbiAqIERlZmF1bHQ6IHBlcmNlbnRcbiAqIFVzYWdlOiBrby1ndXR0ZXJDYWxjKCkgb3Iga28tZ3V0dGVyQ2FsYyhmYWxzZSlcbiAqIFdoZW4gc2hvdy11bml0IGlzIHRydWUsIHJldHVybnMgdGhlIHBlcmNlbnRhZ2UsIG90aGVyd2lzZSByZXR1cm4gYSBkZWNpbWFsXG4gKi9cbi8qKlxuICogR3JpZCBjb2x1bW5zIHdpZHRoIGNhbGN1bGF0aW9uc1xuICogVGhpcyBpcyB3aGVyZSB0aGUgbWFnaWMgb2Ygd29ya2luZyBvdXQgdGhlIGNvbHVtbiB3aWR0aHMgaGFwcGVuc1xuICpcbiAqICRjb2x1bW4tc3BhbjogZGVmaW5lIHRoZSB3aWR0aCBmb3IgdGhlIG51bWJlciBvZiBjb2x1bW5zIHJlcXVpcmVkXG4gKiAkc2hvdy11bml0OiBTd2l0Y2ggcmV0dXJuIHZhbHVlIGJldHdlZW4gcGVyY2VudGFnZSAoZGVmYXVsdCkgYW5kIGRlY2ltYWxcbiAqICRpbmNsdWRlLWd1dHRlcnM6IGlmIGd1dHRlcnMgc2hvdWxkIGJlIGluY2x1ZGVkIGluIHRoZSBjYWxjdWxhdGlvbnMuIERlZmF1bHQgPSBmYWxzZVxuICogJGxlZ2FjeS1jYWxjOiBpZiB3ZSBhcmUgd29ya2luZyBvdXQgYSBsZWdhY3kgY29sdW1uIHdpZHRoIGNhbGN1bGF0aW9uLCBvciBub3QuIERlZmF1bHQgPSBmYWxzZVxuICovXG4vKipcbiAqIENvbHVtbiB3aWR0aCBtaXhpblxuICogVXNhZ2U6XG4gKiBAaW5jbHVkZSBjb2x1bW4oMik7XG4gKi9cbi8qKlxuICogQmFzaWMgVXNhZ2U6XG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblx0PGRpdiBjbGFzcz1cImdcIj5cblx0XHQ8ZGl2IGNsYXNzPVwiZy1jb2wgZy1zcGFuNCBnLXNwYW42LS1taWRcIj48L2Rpdj5cblx0XHQ8ZGl2IGNsYXNzPVwiZy1jb2wgZy1zcGFuOCBnLXNwYW42LS1taWRcIj48L2Rpdj5cblx0PC9kaXY+XG4gKi9cbi5nIHtcbiAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7IH1cbiAgLmcgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuLmctY29sIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZsZXg6IDEgMCAwO1xuICBtaW4td2lkdGg6IDA7IH1cblxuLyoqXG4gKiBHdXR0ZXIgY2FsY3Mg4oCTIGFwcGxpZWQgdG8gZ3JpZCBjb2x1bW5zIGluIG91ciBncmlkIChkaXJlY3QgZGVzY2VuZGFudHMgb25seSlcbiAqIERlZmF1bHQ6IHBpeGVscyAoY2FuIGxvb2sgYXQgY2hhbmdpbmcgdG8gcGVyY2VudGFnZSlcbiAqIFVzYWdlOiBndXR0ZXJDYWxjKCkgb3IgZ3V0dGVyQ2FsYyhmYWxzZSlcbiAqL1xuLmctLWd1dHRlciB7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAtMTBweDsgfVxuICAuZy0tZ3V0dGVyID4gLmctY29sIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDsgfVxuXG4uZy0tZ3V0dGVyLS1zY2FsZWQgPiAuZy1jb2wge1xuICBtYXJnaW4tbGVmdDogMiU7XG4gIG1hcmdpbi1yaWdodDogMDsgfVxuICAuZy0tZ3V0dGVyLS1zY2FsZWQgPiAuZy1jb2w6Zmlyc3QtY2hpbGQge1xuICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG5cbi5nLS1zdGFjayA+IC5nLWNvbCB7XG4gIGZsZXgtYmFzaXM6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG4uZy0tc3RhY2suZy0tZ3V0dGVyLS1zY2FsZWQgPiAuZy1jb2wge1xuICBtYXJnaW4tbGVmdDogMDsgfVxuXG4vKipcbiAqIC5nLS1lcXVhbEhlaWdodCDigJMgRXF1YWwgSGVpZ2h0IENoaWxkIEVsZW1lbnRzXG4gKi9cbi5nLS1lcXVhbEhlaWdodCA+IC5nLWNvbCB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cbiAgLmctLWVxdWFsSGVpZ2h0ID4gLmctY29sID4gKiB7XG4gICAgZmxleC1iYXNpczogMTAwJTsgfVxuXG4vKipcbiAqIEFsaWdubWVudFxuICogTW9kaWZpZXIgY2xhc3NlcyB0byBtb3ZlIG91ciBncmlkIGVsZW1lbnRzIGFyb3VuZFxuICovXG4uZy0tYWxpZ25Ub3Age1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuXG4uZy0tYWxpZ25Cb3R0b20ge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cblxuLmctLWFsaWduU2VsZkJvdHRvbSB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kOyB9XG5cbi5nLS1hbGlnblJpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuXG4uZy0tYWxpZ25DZW50ZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4uZy0tYWxpZ25DZW50ZXItLXYge1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi8qKlxuICogQ2VudGVyaW5nXG4gKiBDZW50ZXJzIGFuIGluZGl2aWR1YWwgY29sdW1uLCByYXRoZXIgdGhhbiB0aGUgZW50aXJlIGdyaWRcbiAqL1xuLmctY29sLS1jZW50ZXJlZCB7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi8qKlxuICogU2hyaW5raW5nIENvbnRlbnRcbiAqIFNocmluayBhIC5nLWNvbCBkb3duIHRvIG9ubHkgdGhlIHNwYWNlIGl0IG5lZWRzIChmbGV4Ym94IG9ubHkpXG4gKlxuICogRWZmZWN0aXZlbHkganVzdCBjaGFuZ2VzIGl04oCZcyB2YWx1ZXMgYmFjayB0byB0aGUgZGVmYXVsdCBmbGV4IHByb3BlcnRpZXNcbiAqL1xuLmctY29sLS1zaHJpbmsge1xuICBmbGV4OiAwIDEgYXV0bzsgfVxuXG4vKipcbiAqIEFkZCBmYWxsYmFja3MgZm9yIG5vbi1mbGV4Ym94IHN1cHBvcnRpbmcgYnJvd3NlcnMgKGZvciBleGFtcGxlLCBJRTgvOSlcbiAqL1xuLm5vLWZsZXhib3ggLmcge1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9XG4gIC5uby1mbGV4Ym94IC5nOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoOyB9XG5cbi5uby1mbGV4Ym94IC5nLWNvbCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtaW4taGVpZ2h0OiAxcHg7XG4gIGNsZWFyOiBub25lO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbi5uby1mbGV4Ym94IC5nLS1zdGFjayAuZy1jb2wge1xuICB3aWR0aDogMTAwJTsgfVxuXG4ubm8tZmxleGJveCAuZy0tZXF1YWxIZWlnaHQgPiAuZy1jb2wge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEdyaWQgU3BhbiBjbGFzc2VzIChmb3IgZGlmZmVyZW50IGJyZWFrcG9pbnRzKVxuICpcbiAqIEFwcGxpZWQgYnkgdXNpbmcgLmctc3BhbnggdG8gLmctY29sIGVsZW1lbnRzLCB3aGVyZSB4IGlzIHRoZSBudW1iZXIgb2YgY29sdW1uc1xuICovXG4uZy1zcGFuMSB7XG4gIGZsZXgtYmFzaXM6IDguMzMzMzMlICFpbXBvcnRhbnQ7XG4gIGZsZXgtZ3JvdzogMDtcbiAgbWF4LXdpZHRoOiA4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW4xLmctaG9sZFdpZHRoIHtcbiAgICBtaW4td2lkdGg6IDgzLjMzMzMzcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEuZy1ob2xkV2lkdGgge1xuICAgICAgbWluLXdpZHRoOiA2My4zMzMzM3B4OyB9XG4gIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMSB7XG4gICAgZmxleC1iYXNpczogNi41JSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogNi41JTtcbiAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgLm5vLWZsZXhib3ggLmctc3BhbjEge1xuICAgIHdpZHRoOiA4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG5cbi5nLW9mZnNldDEge1xuICBtYXJnaW4tbGVmdDogOC4zMzMzMyUgIWltcG9ydGFudDsgfVxuXG4uZy1zcGFuMiB7XG4gIGZsZXgtYmFzaXM6IDE2LjY2NjY3JSAhaW1wb3J0YW50O1xuICBmbGV4LWdyb3c6IDA7XG4gIG1heC13aWR0aDogMTYuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjIuZy1ob2xkV2lkdGgge1xuICAgIG1pbi13aWR0aDogMTY2LjY2NjY3cHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjIuZy1ob2xkV2lkdGgge1xuICAgICAgbWluLXdpZHRoOiAxNDYuNjY2NjdweDsgfVxuICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjIge1xuICAgIGZsZXgtYmFzaXM6IDE1JSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogMTUlO1xuICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAubm8tZmxleGJveCAuZy1zcGFuMiB7XG4gICAgd2lkdGg6IDE2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG5cbi5nLW9mZnNldDIge1xuICBtYXJnaW4tbGVmdDogMTYuNjY2NjclICFpbXBvcnRhbnQ7IH1cblxuLmctc3BhbjMge1xuICBmbGV4LWJhc2lzOiAyNSUgIWltcG9ydGFudDtcbiAgZmxleC1ncm93OiAwO1xuICBtYXgtd2lkdGg6IDI1JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW4zLmctaG9sZFdpZHRoIHtcbiAgICBtaW4td2lkdGg6IDI1MHB4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4zLmctaG9sZFdpZHRoIHtcbiAgICAgIG1pbi13aWR0aDogMjMwcHg7IH1cbiAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4zIHtcbiAgICBmbGV4LWJhc2lzOiAyMy41JSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogMjMuNSU7XG4gICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gIC5uby1mbGV4Ym94IC5nLXNwYW4zIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cblxuLmctb2Zmc2V0MyB7XG4gIG1hcmdpbi1sZWZ0OiAyNSUgIWltcG9ydGFudDsgfVxuXG4uZy1zcGFuNCB7XG4gIGZsZXgtYmFzaXM6IDMzLjMzMzMzJSAhaW1wb3J0YW50O1xuICBmbGV4LWdyb3c6IDA7XG4gIG1heC13aWR0aDogMzMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjQuZy1ob2xkV2lkdGgge1xuICAgIG1pbi13aWR0aDogMzMzLjMzMzMzcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjQuZy1ob2xkV2lkdGgge1xuICAgICAgbWluLXdpZHRoOiAzMTMuMzMzMzNweDsgfVxuICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjQge1xuICAgIGZsZXgtYmFzaXM6IDMyJSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogMzIlO1xuICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAubm8tZmxleGJveCAuZy1zcGFuNCB7XG4gICAgd2lkdGg6IDMzLjMzMzMzJSAhaW1wb3J0YW50OyB9XG5cbi5nLW9mZnNldDQge1xuICBtYXJnaW4tbGVmdDogMzMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cblxuLmctc3BhbjUge1xuICBmbGV4LWJhc2lzOiA0MS42NjY2NyUgIWltcG9ydGFudDtcbiAgZmxleC1ncm93OiAwO1xuICBtYXgtd2lkdGg6IDQxLjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW41LmctaG9sZFdpZHRoIHtcbiAgICBtaW4td2lkdGg6IDQxNi42NjY2N3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW41LmctaG9sZFdpZHRoIHtcbiAgICAgIG1pbi13aWR0aDogMzk2LjY2NjY3cHg7IH1cbiAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW41IHtcbiAgICBmbGV4LWJhc2lzOiA0MC41JSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogNDAuNSU7XG4gICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gIC5uby1mbGV4Ym94IC5nLXNwYW41IHtcbiAgICB3aWR0aDogNDEuNjY2NjclICFpbXBvcnRhbnQ7IH1cblxuLmctb2Zmc2V0NSB7XG4gIG1hcmdpbi1sZWZ0OiA0MS42NjY2NyUgIWltcG9ydGFudDsgfVxuXG4uZy1zcGFuNiB7XG4gIGZsZXgtYmFzaXM6IDUwJSAhaW1wb3J0YW50O1xuICBmbGV4LWdyb3c6IDA7XG4gIG1heC13aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjYuZy1ob2xkV2lkdGgge1xuICAgIG1pbi13aWR0aDogNTAwcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjYuZy1ob2xkV2lkdGgge1xuICAgICAgbWluLXdpZHRoOiA0ODBweDsgfVxuICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjYge1xuICAgIGZsZXgtYmFzaXM6IDQ5JSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogNDklO1xuICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAubm8tZmxleGJveCAuZy1zcGFuNiB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG5cbi5nLW9mZnNldDYge1xuICBtYXJnaW4tbGVmdDogNTAlICFpbXBvcnRhbnQ7IH1cblxuLmctc3Bhbjcge1xuICBmbGV4LWJhc2lzOiA1OC4zMzMzMyUgIWltcG9ydGFudDtcbiAgZmxleC1ncm93OiAwO1xuICBtYXgtd2lkdGg6IDU4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW43LmctaG9sZFdpZHRoIHtcbiAgICBtaW4td2lkdGg6IDU4My4zMzMzM3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW43LmctaG9sZFdpZHRoIHtcbiAgICAgIG1pbi13aWR0aDogNTYzLjMzMzMzcHg7IH1cbiAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW43IHtcbiAgICBmbGV4LWJhc2lzOiA1Ny41JSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogNTcuNSU7XG4gICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gIC5uby1mbGV4Ym94IC5nLXNwYW43IHtcbiAgICB3aWR0aDogNTguMzMzMzMlICFpbXBvcnRhbnQ7IH1cblxuLmctb2Zmc2V0NyB7XG4gIG1hcmdpbi1sZWZ0OiA1OC4zMzMzMyUgIWltcG9ydGFudDsgfVxuXG4uZy1zcGFuOCB7XG4gIGZsZXgtYmFzaXM6IDY2LjY2NjY3JSAhaW1wb3J0YW50O1xuICBmbGV4LWdyb3c6IDA7XG4gIG1heC13aWR0aDogNjYuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjguZy1ob2xkV2lkdGgge1xuICAgIG1pbi13aWR0aDogNjY2LjY2NjY3cHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjguZy1ob2xkV2lkdGgge1xuICAgICAgbWluLXdpZHRoOiA2NDYuNjY2NjdweDsgfVxuICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3Bhbjgge1xuICAgIGZsZXgtYmFzaXM6IDY2JSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogNjYlO1xuICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAubm8tZmxleGJveCAuZy1zcGFuOCB7XG4gICAgd2lkdGg6IDY2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG5cbi5nLW9mZnNldDgge1xuICBtYXJnaW4tbGVmdDogNjYuNjY2NjclICFpbXBvcnRhbnQ7IH1cblxuLmctc3Bhbjkge1xuICBmbGV4LWJhc2lzOiA3NSUgIWltcG9ydGFudDtcbiAgZmxleC1ncm93OiAwO1xuICBtYXgtd2lkdGg6IDc1JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW45LmctaG9sZFdpZHRoIHtcbiAgICBtaW4td2lkdGg6IDc1MHB4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW45LmctaG9sZFdpZHRoIHtcbiAgICAgIG1pbi13aWR0aDogNzMwcHg7IH1cbiAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW45IHtcbiAgICBmbGV4LWJhc2lzOiA3NC41JSAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogNzQuNSU7XG4gICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gIC5uby1mbGV4Ym94IC5nLXNwYW45IHtcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7IH1cblxuLmctb2Zmc2V0OSB7XG4gIG1hcmdpbi1sZWZ0OiA3NSUgIWltcG9ydGFudDsgfVxuXG4uZy1zcGFuMTAge1xuICBmbGV4LWJhc2lzOiA4My4zMzMzMyUgIWltcG9ydGFudDtcbiAgZmxleC1ncm93OiAwO1xuICBtYXgtd2lkdGg6IDgzLjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW4xMC5nLWhvbGRXaWR0aCB7XG4gICAgbWluLXdpZHRoOiA4MzMuMzMzMzNweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMTAuZy1ob2xkV2lkdGgge1xuICAgICAgbWluLXdpZHRoOiA4MTMuMzMzMzNweDsgfVxuICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEwIHtcbiAgICBmbGV4LWJhc2lzOiA4MyUgIWltcG9ydGFudDtcbiAgICBtYXgtd2lkdGg6IDgzJTtcbiAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgLm5vLWZsZXhib3ggLmctc3BhbjEwIHtcbiAgICB3aWR0aDogODMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cblxuLmctb2Zmc2V0MTAge1xuICBtYXJnaW4tbGVmdDogODMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cblxuLmctc3BhbjExIHtcbiAgZmxleC1iYXNpczogOTEuNjY2NjclICFpbXBvcnRhbnQ7XG4gIGZsZXgtZ3JvdzogMDtcbiAgbWF4LXdpZHRoOiA5MS42NjY2NyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuMTEuZy1ob2xkV2lkdGgge1xuICAgIG1pbi13aWR0aDogOTE2LjY2NjY3cHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjExLmctaG9sZFdpZHRoIHtcbiAgICAgIG1pbi13aWR0aDogODk2LjY2NjY3cHg7IH1cbiAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4xMSB7XG4gICAgZmxleC1iYXNpczogOTEuNSUgIWltcG9ydGFudDtcbiAgICBtYXgtd2lkdGg6IDkxLjUlO1xuICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAubm8tZmxleGJveCAuZy1zcGFuMTEge1xuICAgIHdpZHRoOiA5MS42NjY2NyUgIWltcG9ydGFudDsgfVxuXG4uZy1vZmZzZXQxMSB7XG4gIG1hcmdpbi1sZWZ0OiA5MS42NjY2NyUgIWltcG9ydGFudDsgfVxuXG4uZy1zcGFuMTIge1xuICBmbGV4LWJhc2lzOiAxMDAlICFpbXBvcnRhbnQ7XG4gIGZsZXgtZ3JvdzogMDtcbiAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjEyLmctaG9sZFdpZHRoIHtcbiAgICBtaW4td2lkdGg6IDEwMDBweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMTIuZy1ob2xkV2lkdGgge1xuICAgICAgbWluLXdpZHRoOiA5ODBweDsgfVxuICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEyIHtcbiAgICBmbGV4LWJhc2lzOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gIC5uby1mbGV4Ym94IC5nLXNwYW4xMiB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDAwcHgpIHtcbiAgLmctc3BhbjEtLW5hcnJvdyB7XG4gICAgZmxleC1iYXNpczogOC4zMzMzMyUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiA4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjEtLW5hcnJvdy5nLWhvbGRXaWR0aC0tbmFycm93IHtcbiAgICAgIG1pbi13aWR0aDogODMuMzMzMzNweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4xLS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICAgIG1pbi13aWR0aDogNjMuMzMzMzNweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMS0tbmFycm93IHtcbiAgICAgIGZsZXgtYmFzaXM6IDYuNSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogNi41JTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW4xLS1uYXJyb3cge1xuICAgICAgd2lkdGg6IDguMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0MS0tbmFycm93IHtcbiAgICBtYXJnaW4tbGVmdDogOC4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuMi0tbmFycm93IHtcbiAgICBmbGV4LWJhc2lzOiAxNi42NjY2NyUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiAxNi42NjY2NyUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW4yLS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICBtaW4td2lkdGg6IDE2Ni42NjY2N3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjItLW5hcnJvdy5nLWhvbGRXaWR0aC0tbmFycm93IHtcbiAgICAgICAgbWluLXdpZHRoOiAxNDYuNjY2NjdweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMi0tbmFycm93IHtcbiAgICAgIGZsZXgtYmFzaXM6IDE1JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiAxNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuMi0tbmFycm93IHtcbiAgICAgIHdpZHRoOiAxNi42NjY2NyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQyLS1uYXJyb3cge1xuICAgIG1hcmdpbi1sZWZ0OiAxNi42NjY2NyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuMy0tbmFycm93IHtcbiAgICBmbGV4LWJhc2lzOiAyNSUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiAyNSUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW4zLS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICBtaW4td2lkdGg6IDI1MHB4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjMtLW5hcnJvdy5nLWhvbGRXaWR0aC0tbmFycm93IHtcbiAgICAgICAgbWluLXdpZHRoOiAyMzBweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMy0tbmFycm93IHtcbiAgICAgIGZsZXgtYmFzaXM6IDIzLjUlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDIzLjUlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjMtLW5hcnJvdyB7XG4gICAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0My0tbmFycm93IHtcbiAgICBtYXJnaW4tbGVmdDogMjUlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjQtLW5hcnJvdyB7XG4gICAgZmxleC1iYXNpczogMzMuMzMzMzMlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogMzMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuNC0tbmFycm93LmctaG9sZFdpZHRoLS1uYXJyb3cge1xuICAgICAgbWluLXdpZHRoOiAzMzMuMzMzMzNweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW40LS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICAgIG1pbi13aWR0aDogMzEzLjMzMzMzcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjQtLW5hcnJvdyB7XG4gICAgICBmbGV4LWJhc2lzOiAzMiUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogMzIlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjQtLW5hcnJvdyB7XG4gICAgICB3aWR0aDogMzMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0NC0tbmFycm93IHtcbiAgICBtYXJnaW4tbGVmdDogMzMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjUtLW5hcnJvdyB7XG4gICAgZmxleC1iYXNpczogNDEuNjY2NjclICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogNDEuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuNS0tbmFycm93LmctaG9sZFdpZHRoLS1uYXJyb3cge1xuICAgICAgbWluLXdpZHRoOiA0MTYuNjY2NjdweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW41LS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICAgIG1pbi13aWR0aDogMzk2LjY2NjY3cHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjUtLW5hcnJvdyB7XG4gICAgICBmbGV4LWJhc2lzOiA0MC41JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiA0MC41JTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW41LS1uYXJyb3cge1xuICAgICAgd2lkdGg6IDQxLjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDUtLW5hcnJvdyB7XG4gICAgbWFyZ2luLWxlZnQ6IDQxLjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW42LS1uYXJyb3cge1xuICAgIGZsZXgtYmFzaXM6IDUwJSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjYtLW5hcnJvdy5nLWhvbGRXaWR0aC0tbmFycm93IHtcbiAgICAgIG1pbi13aWR0aDogNTAwcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuNi0tbmFycm93LmctaG9sZFdpZHRoLS1uYXJyb3cge1xuICAgICAgICBtaW4td2lkdGg6IDQ4MHB4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW42LS1uYXJyb3cge1xuICAgICAgZmxleC1iYXNpczogNDklICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDQ5JTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW42LS1uYXJyb3cge1xuICAgICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDYtLW5hcnJvdyB7XG4gICAgbWFyZ2luLWxlZnQ6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW43LS1uYXJyb3cge1xuICAgIGZsZXgtYmFzaXM6IDU4LjMzMzMzJSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDU4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjctLW5hcnJvdy5nLWhvbGRXaWR0aC0tbmFycm93IHtcbiAgICAgIG1pbi13aWR0aDogNTgzLjMzMzMzcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuNy0tbmFycm93LmctaG9sZFdpZHRoLS1uYXJyb3cge1xuICAgICAgICBtaW4td2lkdGg6IDU2My4zMzMzM3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW43LS1uYXJyb3cge1xuICAgICAgZmxleC1iYXNpczogNTcuNSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogNTcuNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuNy0tbmFycm93IHtcbiAgICAgIHdpZHRoOiA1OC4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQ3LS1uYXJyb3cge1xuICAgIG1hcmdpbi1sZWZ0OiA1OC4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuOC0tbmFycm93IHtcbiAgICBmbGV4LWJhc2lzOiA2Ni42NjY2NyUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiA2Ni42NjY2NyUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW44LS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICBtaW4td2lkdGg6IDY2Ni42NjY2N3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjgtLW5hcnJvdy5nLWhvbGRXaWR0aC0tbmFycm93IHtcbiAgICAgICAgbWluLXdpZHRoOiA2NDYuNjY2NjdweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuOC0tbmFycm93IHtcbiAgICAgIGZsZXgtYmFzaXM6IDY2JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiA2NiU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuOC0tbmFycm93IHtcbiAgICAgIHdpZHRoOiA2Ni42NjY2NyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQ4LS1uYXJyb3cge1xuICAgIG1hcmdpbi1sZWZ0OiA2Ni42NjY2NyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuOS0tbmFycm93IHtcbiAgICBmbGV4LWJhc2lzOiA3NSUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiA3NSUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW45LS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICBtaW4td2lkdGg6IDc1MHB4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjktLW5hcnJvdy5nLWhvbGRXaWR0aC0tbmFycm93IHtcbiAgICAgICAgbWluLXdpZHRoOiA3MzBweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuOS0tbmFycm93IHtcbiAgICAgIGZsZXgtYmFzaXM6IDc0LjUlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDc0LjUlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjktLW5hcnJvdyB7XG4gICAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0OS0tbmFycm93IHtcbiAgICBtYXJnaW4tbGVmdDogNzUlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjEwLS1uYXJyb3cge1xuICAgIGZsZXgtYmFzaXM6IDgzLjMzMzMzJSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjEwLS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICBtaW4td2lkdGg6IDgzMy4zMzMzM3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEwLS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICAgIG1pbi13aWR0aDogODEzLjMzMzMzcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEwLS1uYXJyb3cge1xuICAgICAgZmxleC1iYXNpczogODMlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDgzJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW4xMC0tbmFycm93IHtcbiAgICAgIHdpZHRoOiA4My4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQxMC0tbmFycm93IHtcbiAgICBtYXJnaW4tbGVmdDogODMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjExLS1uYXJyb3cge1xuICAgIGZsZXgtYmFzaXM6IDkxLjY2NjY3JSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDkxLjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjExLS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICBtaW4td2lkdGg6IDkxNi42NjY2N3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjExLS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICAgIG1pbi13aWR0aDogODk2LjY2NjY3cHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjExLS1uYXJyb3cge1xuICAgICAgZmxleC1iYXNpczogOTEuNSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogOTEuNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuMTEtLW5hcnJvdyB7XG4gICAgICB3aWR0aDogOTEuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0MTEtLW5hcnJvdyB7XG4gICAgbWFyZ2luLWxlZnQ6IDkxLjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW4xMi0tbmFycm93IHtcbiAgICBmbGV4LWJhc2lzOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjEyLS1uYXJyb3cuZy1ob2xkV2lkdGgtLW5hcnJvdyB7XG4gICAgICBtaW4td2lkdGg6IDEwMDBweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4xMi0tbmFycm93LmctaG9sZFdpZHRoLS1uYXJyb3cge1xuICAgICAgICBtaW4td2lkdGg6IDk4MHB4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4xMi0tbmFycm93IHtcbiAgICAgIGZsZXgtYmFzaXM6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjEyLS1uYXJyb3cge1xuICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NTBweCkge1xuICAuZy1zcGFuMS0tbWlkIHtcbiAgICBmbGV4LWJhc2lzOiA4LjMzMzMzJSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDguMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuMS0tbWlkLmctaG9sZFdpZHRoLS1taWQge1xuICAgICAgbWluLXdpZHRoOiA4My4zMzMzM3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEtLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgICAgbWluLXdpZHRoOiA2My4zMzMzM3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4xLS1taWQge1xuICAgICAgZmxleC1iYXNpczogNi41JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiA2LjUlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjEtLW1pZCB7XG4gICAgICB3aWR0aDogOC4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQxLS1taWQge1xuICAgIG1hcmdpbi1sZWZ0OiA4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW4yLS1taWQge1xuICAgIGZsZXgtYmFzaXM6IDE2LjY2NjY3JSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDE2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjItLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgIG1pbi13aWR0aDogMTY2LjY2NjY3cHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMi0tbWlkLmctaG9sZFdpZHRoLS1taWQge1xuICAgICAgICBtaW4td2lkdGg6IDE0Ni42NjY2N3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4yLS1taWQge1xuICAgICAgZmxleC1iYXNpczogMTUlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDE1JTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW4yLS1taWQge1xuICAgICAgd2lkdGg6IDE2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDItLW1pZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDE2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW4zLS1taWQge1xuICAgIGZsZXgtYmFzaXM6IDI1JSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDI1JSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjMtLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgIG1pbi13aWR0aDogMjUwcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMy0tbWlkLmctaG9sZFdpZHRoLS1taWQge1xuICAgICAgICBtaW4td2lkdGg6IDIzMHB4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4zLS1taWQge1xuICAgICAgZmxleC1iYXNpczogMjMuNSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogMjMuNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuMy0tbWlkIHtcbiAgICAgIHdpZHRoOiAyNSUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQzLS1taWQge1xuICAgIG1hcmdpbi1sZWZ0OiAyNSUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuNC0tbWlkIHtcbiAgICBmbGV4LWJhc2lzOiAzMy4zMzMzMyUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiAzMy4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW40LS1taWQuZy1ob2xkV2lkdGgtLW1pZCB7XG4gICAgICBtaW4td2lkdGg6IDMzMy4zMzMzM3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjQtLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgICAgbWluLXdpZHRoOiAzMTMuMzMzMzNweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuNC0tbWlkIHtcbiAgICAgIGZsZXgtYmFzaXM6IDMyJSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiAzMiU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuNC0tbWlkIHtcbiAgICAgIHdpZHRoOiAzMy4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQ0LS1taWQge1xuICAgIG1hcmdpbi1sZWZ0OiAzMy4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuNS0tbWlkIHtcbiAgICBmbGV4LWJhc2lzOiA0MS42NjY2NyUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiA0MS42NjY2NyUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW41LS1taWQuZy1ob2xkV2lkdGgtLW1pZCB7XG4gICAgICBtaW4td2lkdGg6IDQxNi42NjY2N3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjUtLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgICAgbWluLXdpZHRoOiAzOTYuNjY2NjdweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuNS0tbWlkIHtcbiAgICAgIGZsZXgtYmFzaXM6IDQwLjUlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDQwLjUlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjUtLW1pZCB7XG4gICAgICB3aWR0aDogNDEuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0NS0tbWlkIHtcbiAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjYtLW1pZCB7XG4gICAgZmxleC1iYXNpczogNTAlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuNi0tbWlkLmctaG9sZFdpZHRoLS1taWQge1xuICAgICAgbWluLXdpZHRoOiA1MDBweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW42LS1taWQuZy1ob2xkV2lkdGgtLW1pZCB7XG4gICAgICAgIG1pbi13aWR0aDogNDgwcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjYtLW1pZCB7XG4gICAgICBmbGV4LWJhc2lzOiA0OSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogNDklO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjYtLW1pZCB7XG4gICAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0Ni0tbWlkIHtcbiAgICBtYXJnaW4tbGVmdDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjctLW1pZCB7XG4gICAgZmxleC1iYXNpczogNTguMzMzMzMlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogNTguMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuNy0tbWlkLmctaG9sZFdpZHRoLS1taWQge1xuICAgICAgbWluLXdpZHRoOiA1ODMuMzMzMzNweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW43LS1taWQuZy1ob2xkV2lkdGgtLW1pZCB7XG4gICAgICAgIG1pbi13aWR0aDogNTYzLjMzMzMzcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjctLW1pZCB7XG4gICAgICBmbGV4LWJhc2lzOiA1Ny41JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiA1Ny41JTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW43LS1taWQge1xuICAgICAgd2lkdGg6IDU4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDctLW1pZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDU4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW44LS1taWQge1xuICAgIGZsZXgtYmFzaXM6IDY2LjY2NjY3JSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDY2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjgtLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgIG1pbi13aWR0aDogNjY2LjY2NjY3cHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuOC0tbWlkLmctaG9sZFdpZHRoLS1taWQge1xuICAgICAgICBtaW4td2lkdGg6IDY0Ni42NjY2N3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW44LS1taWQge1xuICAgICAgZmxleC1iYXNpczogNjYlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDY2JTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW44LS1taWQge1xuICAgICAgd2lkdGg6IDY2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDgtLW1pZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDY2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW45LS1taWQge1xuICAgIGZsZXgtYmFzaXM6IDc1JSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDc1JSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjktLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgIG1pbi13aWR0aDogNzUwcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuOS0tbWlkLmctaG9sZFdpZHRoLS1taWQge1xuICAgICAgICBtaW4td2lkdGg6IDczMHB4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW45LS1taWQge1xuICAgICAgZmxleC1iYXNpczogNzQuNSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogNzQuNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuOS0tbWlkIHtcbiAgICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQ5LS1taWQge1xuICAgIG1hcmdpbi1sZWZ0OiA3NSUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuMTAtLW1pZCB7XG4gICAgZmxleC1iYXNpczogODMuMzMzMzMlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogODMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuMTAtLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgIG1pbi13aWR0aDogODMzLjMzMzMzcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMTAtLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgICAgbWluLXdpZHRoOiA4MTMuMzMzMzNweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMTAtLW1pZCB7XG4gICAgICBmbGV4LWJhc2lzOiA4MyUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogODMlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjEwLS1taWQge1xuICAgICAgd2lkdGg6IDgzLjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDEwLS1taWQge1xuICAgIG1hcmdpbi1sZWZ0OiA4My4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuMTEtLW1pZCB7XG4gICAgZmxleC1iYXNpczogOTEuNjY2NjclICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogOTEuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuMTEtLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgIG1pbi13aWR0aDogOTE2LjY2NjY3cHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMTEtLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgICAgbWluLXdpZHRoOiA4OTYuNjY2NjdweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMTEtLW1pZCB7XG4gICAgICBmbGV4LWJhc2lzOiA5MS41JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiA5MS41JTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW4xMS0tbWlkIHtcbiAgICAgIHdpZHRoOiA5MS42NjY2NyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQxMS0tbWlkIHtcbiAgICBtYXJnaW4tbGVmdDogOTEuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjEyLS1taWQge1xuICAgIGZsZXgtYmFzaXM6IDEwMCUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuMTItLW1pZC5nLWhvbGRXaWR0aC0tbWlkIHtcbiAgICAgIG1pbi13aWR0aDogMTAwMHB4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEyLS1taWQuZy1ob2xkV2lkdGgtLW1pZCB7XG4gICAgICAgIG1pbi13aWR0aDogOTgwcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEyLS1taWQge1xuICAgICAgZmxleC1iYXNpczogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuMTItLW1pZCB7XG4gICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAuZy1zcGFuMS0td2lkZSB7XG4gICAgZmxleC1iYXNpczogOC4zMzMzMyUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiA4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjEtLXdpZGUuZy1ob2xkV2lkdGgtLXdpZGUge1xuICAgICAgbWluLXdpZHRoOiA4My4zMzMzM3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEtLXdpZGUuZy1ob2xkV2lkdGgtLXdpZGUge1xuICAgICAgICBtaW4td2lkdGg6IDYzLjMzMzMzcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEtLXdpZGUge1xuICAgICAgZmxleC1iYXNpczogNi41JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiA2LjUlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjEtLXdpZGUge1xuICAgICAgd2lkdGg6IDguMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0MS0td2lkZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDguMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjItLXdpZGUge1xuICAgIGZsZXgtYmFzaXM6IDE2LjY2NjY3JSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDE2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjItLXdpZGUuZy1ob2xkV2lkdGgtLXdpZGUge1xuICAgICAgbWluLXdpZHRoOiAxNjYuNjY2NjdweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4yLS13aWRlLmctaG9sZFdpZHRoLS13aWRlIHtcbiAgICAgICAgbWluLXdpZHRoOiAxNDYuNjY2NjdweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMi0td2lkZSB7XG4gICAgICBmbGV4LWJhc2lzOiAxNSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogMTUlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjItLXdpZGUge1xuICAgICAgd2lkdGg6IDE2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDItLXdpZGUge1xuICAgIG1hcmdpbi1sZWZ0OiAxNi42NjY2NyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuMy0td2lkZSB7XG4gICAgZmxleC1iYXNpczogMjUlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuMy0td2lkZS5nLWhvbGRXaWR0aC0td2lkZSB7XG4gICAgICBtaW4td2lkdGg6IDI1MHB4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjMtLXdpZGUuZy1ob2xkV2lkdGgtLXdpZGUge1xuICAgICAgICBtaW4td2lkdGg6IDIzMHB4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4zLS13aWRlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDIzLjUlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDIzLjUlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjMtLXdpZGUge1xuICAgICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDMtLXdpZGUge1xuICAgIG1hcmdpbi1sZWZ0OiAyNSUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuNC0td2lkZSB7XG4gICAgZmxleC1iYXNpczogMzMuMzMzMzMlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogMzMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuNC0td2lkZS5nLWhvbGRXaWR0aC0td2lkZSB7XG4gICAgICBtaW4td2lkdGg6IDMzMy4zMzMzM3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjQtLXdpZGUuZy1ob2xkV2lkdGgtLXdpZGUge1xuICAgICAgICBtaW4td2lkdGg6IDMxMy4zMzMzM3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW40LS13aWRlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDMyJSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiAzMiU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuNC0td2lkZSB7XG4gICAgICB3aWR0aDogMzMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0NC0td2lkZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDMzLjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW41LS13aWRlIHtcbiAgICBmbGV4LWJhc2lzOiA0MS42NjY2NyUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiA0MS42NjY2NyUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW41LS13aWRlLmctaG9sZFdpZHRoLS13aWRlIHtcbiAgICAgIG1pbi13aWR0aDogNDE2LjY2NjY3cHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuNS0td2lkZS5nLWhvbGRXaWR0aC0td2lkZSB7XG4gICAgICAgIG1pbi13aWR0aDogMzk2LjY2NjY3cHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjUtLXdpZGUge1xuICAgICAgZmxleC1iYXNpczogNDAuNSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogNDAuNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuNS0td2lkZSB7XG4gICAgICB3aWR0aDogNDEuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0NS0td2lkZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDQxLjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW42LS13aWRlIHtcbiAgICBmbGV4LWJhc2lzOiA1MCUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiA1MCUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW42LS13aWRlLmctaG9sZFdpZHRoLS13aWRlIHtcbiAgICAgIG1pbi13aWR0aDogNTAwcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuNi0td2lkZS5nLWhvbGRXaWR0aC0td2lkZSB7XG4gICAgICAgIG1pbi13aWR0aDogNDgwcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjYtLXdpZGUge1xuICAgICAgZmxleC1iYXNpczogNDklICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDQ5JTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW42LS13aWRlIHtcbiAgICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQ2LS13aWRlIHtcbiAgICBtYXJnaW4tbGVmdDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjctLXdpZGUge1xuICAgIGZsZXgtYmFzaXM6IDU4LjMzMzMzJSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDU4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjctLXdpZGUuZy1ob2xkV2lkdGgtLXdpZGUge1xuICAgICAgbWluLXdpZHRoOiA1ODMuMzMzMzNweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW43LS13aWRlLmctaG9sZFdpZHRoLS13aWRlIHtcbiAgICAgICAgbWluLXdpZHRoOiA1NjMuMzMzMzNweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuNy0td2lkZSB7XG4gICAgICBmbGV4LWJhc2lzOiA1Ny41JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiA1Ny41JTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW43LS13aWRlIHtcbiAgICAgIHdpZHRoOiA1OC4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQ3LS13aWRlIHtcbiAgICBtYXJnaW4tbGVmdDogNTguMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjgtLXdpZGUge1xuICAgIGZsZXgtYmFzaXM6IDY2LjY2NjY3JSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDY2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjgtLXdpZGUuZy1ob2xkV2lkdGgtLXdpZGUge1xuICAgICAgbWluLXdpZHRoOiA2NjYuNjY2NjdweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW44LS13aWRlLmctaG9sZFdpZHRoLS13aWRlIHtcbiAgICAgICAgbWluLXdpZHRoOiA2NDYuNjY2NjdweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuOC0td2lkZSB7XG4gICAgICBmbGV4LWJhc2lzOiA2NiUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogNjYlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjgtLXdpZGUge1xuICAgICAgd2lkdGg6IDY2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDgtLXdpZGUge1xuICAgIG1hcmdpbi1sZWZ0OiA2Ni42NjY2NyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuOS0td2lkZSB7XG4gICAgZmxleC1iYXNpczogNzUlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogNzUlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuOS0td2lkZS5nLWhvbGRXaWR0aC0td2lkZSB7XG4gICAgICBtaW4td2lkdGg6IDc1MHB4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjktLXdpZGUuZy1ob2xkV2lkdGgtLXdpZGUge1xuICAgICAgICBtaW4td2lkdGg6IDczMHB4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW45LS13aWRlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDc0LjUlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDc0LjUlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjktLXdpZGUge1xuICAgICAgd2lkdGg6IDc1JSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDktLXdpZGUge1xuICAgIG1hcmdpbi1sZWZ0OiA3NSUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuMTAtLXdpZGUge1xuICAgIGZsZXgtYmFzaXM6IDgzLjMzMzMzJSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjEwLS13aWRlLmctaG9sZFdpZHRoLS13aWRlIHtcbiAgICAgIG1pbi13aWR0aDogODMzLjMzMzMzcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMTAtLXdpZGUuZy1ob2xkV2lkdGgtLXdpZGUge1xuICAgICAgICBtaW4td2lkdGg6IDgxMy4zMzMzM3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4xMC0td2lkZSB7XG4gICAgICBmbGV4LWJhc2lzOiA4MyUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogODMlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjEwLS13aWRlIHtcbiAgICAgIHdpZHRoOiA4My4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQxMC0td2lkZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDgzLjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW4xMS0td2lkZSB7XG4gICAgZmxleC1iYXNpczogOTEuNjY2NjclICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogOTEuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuMTEtLXdpZGUuZy1ob2xkV2lkdGgtLXdpZGUge1xuICAgICAgbWluLXdpZHRoOiA5MTYuNjY2NjdweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4xMS0td2lkZS5nLWhvbGRXaWR0aC0td2lkZSB7XG4gICAgICAgIG1pbi13aWR0aDogODk2LjY2NjY3cHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjExLS13aWRlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDkxLjUlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDkxLjUlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjExLS13aWRlIHtcbiAgICAgIHdpZHRoOiA5MS42NjY2NyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQxMS0td2lkZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDkxLjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW4xMi0td2lkZSB7XG4gICAgZmxleC1iYXNpczogMTAwJSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW4xMi0td2lkZS5nLWhvbGRXaWR0aC0td2lkZSB7XG4gICAgICBtaW4td2lkdGg6IDEwMDBweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4xMi0td2lkZS5nLWhvbGRXaWR0aC0td2lkZSB7XG4gICAgICAgIG1pbi13aWR0aDogOTgwcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEyLS13aWRlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjEyLS13aWRlIHtcbiAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTI1MHB4KSB7XG4gIC5nLXNwYW4xLS1odWdlIHtcbiAgICBmbGV4LWJhc2lzOiA4LjMzMzMzJSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDguMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuMS0taHVnZS5nLWhvbGRXaWR0aC0taHVnZSB7XG4gICAgICBtaW4td2lkdGg6IDgzLjMzMzMzcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMS0taHVnZS5nLWhvbGRXaWR0aC0taHVnZSB7XG4gICAgICAgIG1pbi13aWR0aDogNjMuMzMzMzNweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMS0taHVnZSB7XG4gICAgICBmbGV4LWJhc2lzOiA2LjUlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDYuNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuMS0taHVnZSB7XG4gICAgICB3aWR0aDogOC4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQxLS1odWdlIHtcbiAgICBtYXJnaW4tbGVmdDogOC4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuMi0taHVnZSB7XG4gICAgZmxleC1iYXNpczogMTYuNjY2NjclICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogMTYuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuMi0taHVnZS5nLWhvbGRXaWR0aC0taHVnZSB7XG4gICAgICBtaW4td2lkdGg6IDE2Ni42NjY2N3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjItLWh1Z2UuZy1ob2xkV2lkdGgtLWh1Z2Uge1xuICAgICAgICBtaW4td2lkdGg6IDE0Ni42NjY2N3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4yLS1odWdlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDE1JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiAxNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuMi0taHVnZSB7XG4gICAgICB3aWR0aDogMTYuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0Mi0taHVnZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDE2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW4zLS1odWdlIHtcbiAgICBmbGV4LWJhc2lzOiAyNSUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiAyNSUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW4zLS1odWdlLmctaG9sZFdpZHRoLS1odWdlIHtcbiAgICAgIG1pbi13aWR0aDogMjUwcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMy0taHVnZS5nLWhvbGRXaWR0aC0taHVnZSB7XG4gICAgICAgIG1pbi13aWR0aDogMjMwcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjMtLWh1Z2Uge1xuICAgICAgZmxleC1iYXNpczogMjMuNSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogMjMuNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuMy0taHVnZSB7XG4gICAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0My0taHVnZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDI1JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW40LS1odWdlIHtcbiAgICBmbGV4LWJhc2lzOiAzMy4zMzMzMyUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiAzMy4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW40LS1odWdlLmctaG9sZFdpZHRoLS1odWdlIHtcbiAgICAgIG1pbi13aWR0aDogMzMzLjMzMzMzcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuNC0taHVnZS5nLWhvbGRXaWR0aC0taHVnZSB7XG4gICAgICAgIG1pbi13aWR0aDogMzEzLjMzMzMzcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjQtLWh1Z2Uge1xuICAgICAgZmxleC1iYXNpczogMzIlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDMyJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW40LS1odWdlIHtcbiAgICAgIHdpZHRoOiAzMy4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQ0LS1odWdlIHtcbiAgICBtYXJnaW4tbGVmdDogMzMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjUtLWh1Z2Uge1xuICAgIGZsZXgtYmFzaXM6IDQxLjY2NjY3JSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDQxLjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjUtLWh1Z2UuZy1ob2xkV2lkdGgtLWh1Z2Uge1xuICAgICAgbWluLXdpZHRoOiA0MTYuNjY2NjdweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW41LS1odWdlLmctaG9sZFdpZHRoLS1odWdlIHtcbiAgICAgICAgbWluLXdpZHRoOiAzOTYuNjY2NjdweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuNS0taHVnZSB7XG4gICAgICBmbGV4LWJhc2lzOiA0MC41JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiA0MC41JTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTsgfVxuICAgIC5uby1mbGV4Ym94IC5nLXNwYW41LS1odWdlIHtcbiAgICAgIHdpZHRoOiA0MS42NjY2NyUgIWltcG9ydGFudDsgfVxuICAuZy1vZmZzZXQ1LS1odWdlIHtcbiAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjYtLWh1Z2Uge1xuICAgIGZsZXgtYmFzaXM6IDUwJSAhaW1wb3J0YW50O1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBtYXgtd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjYtLWh1Z2UuZy1ob2xkV2lkdGgtLWh1Z2Uge1xuICAgICAgbWluLXdpZHRoOiA1MDBweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW42LS1odWdlLmctaG9sZFdpZHRoLS1odWdlIHtcbiAgICAgICAgbWluLXdpZHRoOiA0ODBweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuNi0taHVnZSB7XG4gICAgICBmbGV4LWJhc2lzOiA0OSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogNDklO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjYtLWh1Z2Uge1xuICAgICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDYtLWh1Z2Uge1xuICAgIG1hcmdpbi1sZWZ0OiA1MCUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuNy0taHVnZSB7XG4gICAgZmxleC1iYXNpczogNTguMzMzMzMlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogNTguMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuNy0taHVnZS5nLWhvbGRXaWR0aC0taHVnZSB7XG4gICAgICBtaW4td2lkdGg6IDU4My4zMzMzM3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjctLWh1Z2UuZy1ob2xkV2lkdGgtLWh1Z2Uge1xuICAgICAgICBtaW4td2lkdGg6IDU2My4zMzMzM3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW43LS1odWdlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDU3LjUlICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDU3LjUlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIlOyB9XG4gICAgLm5vLWZsZXhib3ggLmctc3BhbjctLWh1Z2Uge1xuICAgICAgd2lkdGg6IDU4LjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDctLWh1Z2Uge1xuICAgIG1hcmdpbi1sZWZ0OiA1OC4zMzMzMyUgIWltcG9ydGFudDsgfVxuICAuZy1zcGFuOC0taHVnZSB7XG4gICAgZmxleC1iYXNpczogNjYuNjY2NjclICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogNjYuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuOC0taHVnZS5nLWhvbGRXaWR0aC0taHVnZSB7XG4gICAgICBtaW4td2lkdGg6IDY2Ni42NjY2N3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjgtLWh1Z2UuZy1ob2xkV2lkdGgtLWh1Z2Uge1xuICAgICAgICBtaW4td2lkdGg6IDY0Ni42NjY2N3B4OyB9XG4gICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW44LS1odWdlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDY2JSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiA2NiU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuOC0taHVnZSB7XG4gICAgICB3aWR0aDogNjYuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0OC0taHVnZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDY2LjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW45LS1odWdlIHtcbiAgICBmbGV4LWJhc2lzOiA3NSUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiA3NSUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW45LS1odWdlLmctaG9sZFdpZHRoLS1odWdlIHtcbiAgICAgIG1pbi13aWR0aDogNzUwcHg7IH1cbiAgICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuOS0taHVnZS5nLWhvbGRXaWR0aC0taHVnZSB7XG4gICAgICAgIG1pbi13aWR0aDogNzMwcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjktLWh1Z2Uge1xuICAgICAgZmxleC1iYXNpczogNzQuNSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogNzQuNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuOS0taHVnZSB7XG4gICAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7IH1cbiAgLmctb2Zmc2V0OS0taHVnZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDc1JSAhaW1wb3J0YW50OyB9XG4gIC5nLXNwYW4xMC0taHVnZSB7XG4gICAgZmxleC1iYXNpczogODMuMzMzMzMlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogODMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgICAuZy1zcGFuMTAtLWh1Z2UuZy1ob2xkV2lkdGgtLWh1Z2Uge1xuICAgICAgbWluLXdpZHRoOiA4MzMuMzMzMzNweDsgfVxuICAgICAgLmctLWd1dHRlci0tc2NhbGVkIC5nLXNwYW4xMC0taHVnZS5nLWhvbGRXaWR0aC0taHVnZSB7XG4gICAgICAgIG1pbi13aWR0aDogODEzLjMzMzMzcHg7IH1cbiAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEwLS1odWdlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDgzJSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiA4MyU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuMTAtLWh1Z2Uge1xuICAgICAgd2lkdGg6IDgzLjMzMzMzJSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDEwLS1odWdlIHtcbiAgICBtYXJnaW4tbGVmdDogODMuMzMzMzMlICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjExLS1odWdlIHtcbiAgICBmbGV4LWJhc2lzOiA5MS42NjY2NyUgIWltcG9ydGFudDtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NyUgIWltcG9ydGFudDsgfVxuICAgIC5nLXNwYW4xMS0taHVnZS5nLWhvbGRXaWR0aC0taHVnZSB7XG4gICAgICBtaW4td2lkdGg6IDkxNi42NjY2N3B4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjExLS1odWdlLmctaG9sZFdpZHRoLS1odWdlIHtcbiAgICAgICAgbWluLXdpZHRoOiA4OTYuNjY2NjdweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMTEtLWh1Z2Uge1xuICAgICAgZmxleC1iYXNpczogOTEuNSUgIWltcG9ydGFudDtcbiAgICAgIG1heC13aWR0aDogOTEuNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMiU7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuMTEtLWh1Z2Uge1xuICAgICAgd2lkdGg6IDkxLjY2NjY3JSAhaW1wb3J0YW50OyB9XG4gIC5nLW9mZnNldDExLS1odWdlIHtcbiAgICBtYXJnaW4tbGVmdDogOTEuNjY2NjclICFpbXBvcnRhbnQ7IH1cbiAgLmctc3BhbjEyLS1odWdlIHtcbiAgICBmbGV4LWJhc2lzOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG4gICAgLmctc3BhbjEyLS1odWdlLmctaG9sZFdpZHRoLS1odWdlIHtcbiAgICAgIG1pbi13aWR0aDogMTAwMHB4OyB9XG4gICAgICAuZy0tZ3V0dGVyLS1zY2FsZWQgLmctc3BhbjEyLS1odWdlLmctaG9sZFdpZHRoLS1odWdlIHtcbiAgICAgICAgbWluLXdpZHRoOiA5ODBweDsgfVxuICAgIC5nLS1ndXR0ZXItLXNjYWxlZCAuZy1zcGFuMTItLWh1Z2Uge1xuICAgICAgZmxleC1iYXNpczogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgICAubm8tZmxleGJveCAuZy1zcGFuMTItLWh1Z2Uge1xuICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzOTlweCkge1xuICAuZy0tc3RhY2stLW5hcnJvdyB7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwOyB9XG4gICAgLmctLXN0YWNrLS1uYXJyb3cgPiAuZy1jb2wge1xuICAgICAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgICAgLm5vLWZsZXhib3ggLmctLXN0YWNrLS1uYXJyb3cgPiAuZy1jb2wge1xuICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc0OXB4KSB7XG4gIC5nLS1zdGFjay0tbWlkIHtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7IH1cbiAgICAuZy0tc3RhY2stLW1pZCA+IC5nLWNvbCB7XG4gICAgICBmbGV4LWJhc2lzOiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgICAubm8tZmxleGJveCAuZy0tc3RhY2stLW1pZCA+IC5nLWNvbCB7XG4gICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTk5cHgpIHtcbiAgLmctLXN0YWNrLS13aWRlIHtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7IH1cbiAgICAuZy0tc3RhY2stLXdpZGUgPiAuZy1jb2wge1xuICAgICAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgICAgLm5vLWZsZXhib3ggLmctLXN0YWNrLS13aWRlID4gLmctY29sIHtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMjQ5cHgpIHtcbiAgLmctLXN0YWNrLS1odWdlIHtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7IH1cbiAgICAuZy0tc3RhY2stLWh1Z2UgPiAuZy1jb2wge1xuICAgICAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50O1xuICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgICAgLm5vLWZsZXhib3ggLmctLXN0YWNrLS1odWdlID4gLmctY29sIHtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfSB9XG5cbi8qKlxuICogRm9ybXNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogS2lja29mZidzIGZvcm1zIGhhcyBzdXBwb3J0IGZvciB0aGVtZXMuIFNlZSBiZWxvdyBmb3IgaW5mbyBhYm91dCB0aGVtLlxuICpcbiAqIFRoZSBzdHlsZXMgaGVyZSBhcmUgYmFzZSBzdHlsZXMgdGhhdCBhcHBseSB0byBib3RoIHRoZW1lcyxcbiAqIHRoZXkgYXJlIG1vcmUgb2YgYSByZXNldCBiZWZvcmUgeW91IG1ha2Ugc3R5bGlzdGljIGFtZW5kcyB0byBmb3JtIGZpZWxkc1xuICpcbiAqL1xuLyoqXG4gKiBGb3JtIHRoZW1lc1xuICogVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBiYXNlIGZvcm0gc3R5bGVzIGFuZCBlYWNoIHRoZW1lIGZpbGUgY29udGFpbnNcbiAqIG92ZXJyaWRlcyBhbmQgYWRkaXRpb25zLlxuICpcbiAqIENob29zZSBmcm9tOlxuICogLSBgc3RhbmRhcmRgOiB0aGUgb3JpZ2luYWwgS2lja29mZiBmb3JtIHRoZW1lXG4gKiAtIGBtYXRlcmlhbGA6IGJhc2ljIHZlcnNpb24gb2YgR29vZ2xlJ3MgTWF0ZXJpYWwgZGVzaWduIGZvcm1zXG4gKlxuICogVXNhZ2U6IChjaG9vc2UgZnJvbSlcbiAqIEBpbXBvcnQgXCJmb3JtLXRoZW1lLXN0YW5kYXJkXCI7XG4gKiBAaW1wb3J0IFwiZm9ybS10aGVtZS1tYXRlcmlhbFwiO1xuICovXG4vKipcbiAqIEtpY2tvZmYgZm9ybXM6IFN0YW5kYXJkIHRoZW1lXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKlxuICogRGVtbzogaHR0cDovL3RyeWtpY2tvZmYuY29tL2RlbW9zL2Zvcm1zLmh0bWwjbGF5b3V0LWV4YW1wbGUtbGFiZWxzLWFib3ZlXG4gKiBDb2RlOiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9tcm1hcnRpbmVhdS82NzEyNTc3I2ZpbGUtbGFiZWxzLWFib3ZlLWlucHV0cy1odG1sXG4gKiBVc2FnZTpcbiAgXHQ8ZGl2IGNsYXNzPVwiZm9ybS1jb250cm9sR3JvdXBcIj5cbiAgXHRcdDxsYWJlbCBmb3I9XCJuYW1lXCIgY2xhc3M9XCJmb3JtLWxhYmVsXCI+TmFtZTwvbGFiZWw+XG4gIFx0XHQ8ZGl2IGNsYXNzPVwiZm9ybS1jb250cm9sR3JvdXAtaW5wdXRXcmFwcGVyXCI+XG4gIFx0XHRcdDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwibmFtZVwiIHBsYWNlaG9sZGVyPVwiWmFuZGVyIE1hcnRpbmVhdVwiIGNsYXNzPVwiZm9ybS1pbnB1dFwiLz5cbiAgXHRcdDwvZGl2PlxuICBcdDwvZGl2PlxuICpcbiAqIENvbnRlbnRzOlxuICogLSBUaGVtZSB2YXJpYWJsZXNcbiAqIC0gVGhlbWUgc3R5bGVzXG4gKi9cbi8qKlxuICogR2VuZXJpYyBmb3JtIHN0eWxlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBEZW1vOiBodHRwOi8vdHJ5a2lja29mZi5jb20vZGVtb3MvZm9ybXMuaHRtbCNsYXlvdXQtZXhhbXBsZS1sYWJlbHMtYWJvdmVcbiAqIENvZGU6IGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL21ybWFydGluZWF1LzY3MTI1NzcjZmlsZS1sYWJlbHMtYWJvdmUtaW5wdXRzLWh0bWxcbiAqIFVzYWdlOlxuICBcdDxkaXYgY2xhc3M9XCJmb3JtLWNvbnRyb2xHcm91cFwiPlxuICBcdFx0PGxhYmVsIGZvcj1cIm5hbWVcIiBjbGFzcz1cImZvcm0tbGFiZWxcIj5OYW1lPC9sYWJlbD5cbiAgXHRcdDxkaXYgY2xhc3M9XCJmb3JtLWNvbnRyb2xHcm91cC1pbnB1dFdyYXBwZXJcIj5cbiAgXHRcdFx0PGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9XCJuYW1lXCIgcGxhY2Vob2xkZXI9XCJaYW5kZXIgTWFydGluZWF1XCIgY2xhc3M9XCJmb3JtLWlucHV0XCIvPlxuICBcdFx0PC9kaXY+XG4gIFx0PC9kaXY+XG4gKi9cbi5mb3JtIHtcbiAgbWFyZ2luOiAwIDAgMjhweDsgfVxuXG4uZm9ybS1maWVsZHNldCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiAwOyB9XG5cbi5mb3JtLWxlZ2VuZCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbi1ib3R0b206IDI4cHg7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgY29sb3I6ICM0NDQ7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IH1cbiAgLmZvcm0tbGVnZW5kIHNtYWxsIHtcbiAgICBmb250LXNpemU6IDAuOHJlbTtcbiAgICBjb2xvcjogI2IzYjNiMzsgfVxuXG4vKipcbiAqIEZvcm0gaW5wdXRzIGFuZCBncm91cHNcbiAqL1xuLmZvcm0tY29udHJvbEdyb3VwIHtcbiAgbWFyZ2luLXRvcDogNDJweDtcbiAgbWFyZ2luLWJvdHRvbTogNDJweDsgfVxuXG4uZm9ybS1sZWdlbmQgKyAuZm9ybS1jb250cm9sR3JvdXAge1xuICBtYXJnaW4tdG9wOiAyOHB4OyB9XG5cbi5mb3JtLWxhYmVsIHtcbiAgY29sb3I6ICM0NDQ7IH1cbiAgLmZvcm0tbGFiZWwgc21hbGwge1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgY29sb3I6ICM5MTkxOTE7IH1cblxuLmZvcm0taW5wdXQge1xuICBoZWlnaHQ6IDIuNWVtO1xuICBwYWRkaW5nOiAuNWVtO1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU2Vnb2UgVUlcIiwgUm9ib3RvLCBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLCBcIkZpcmEgU2Fuc1wiLCBcIkRyb2lkIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogMS40O1xuICBjb2xvcjogIzQ0NDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyOiAycHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICB0cmFuc2l0aW9uOiBib3JkZXIgMjAwbXMgZWFzZS1pbi1vdXQ7IH1cbiAgLmZvcm0taW5wdXQ6Zm9jdXMge1xuICAgIGJvcmRlci1jb2xvcjogIzE4MTgzMDsgfVxuICAuZm9ybS1pbnB1dFt0eXBlPVwiaW1hZ2VcIl0sIC5mb3JtLWlucHV0W3R5cGU9XCJjaGVja2JveFwiXSwgLmZvcm0taW5wdXRbdHlwZT1cInJhZGlvXCJdLCAuZm9ybS1pbnB1dFt0eXBlPVwicmFuZ2VcIl0ge1xuICAgIG1hcmdpbjogM3B4IDA7IH1cbiAgLmZvcm0taW5wdXRbdHlwZT1cImZpbGVcIl0ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cbiAgLmZvcm0taW5wdXRbdHlwZT1cImNvbG9yXCJdIHtcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwYWRkaW5nOiAycHg7IH1cbiAgLmZvcm0taW5wdXRbZGlzYWJsZWRdLCAuZm9ybS1pbnB1dFtyZWFkb25seV0ge1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7IH1cblxuLmZvcm0taW5wdXQtLXNlbGVjdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cblxuLmZvcm0taW5wdXQtZmlsZSB7XG4gIGZvbnQtc2l6ZTogMXJlbTsgfVxuXG4vKipcbiAqIEZvcm0gYWN0aW9uc1xuICovXG4uZm9ybS1hY3Rpb25zIHtcbiAgcGFkZGluZzogMjhweCAyMHB4O1xuICBtYXJnaW4tdG9wOiAyOHB4O1xuICBtYXJnaW4tYm90dG9tOiAyOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2RkZDsgfVxuICAuZm9ybS1hY3Rpb25zIC5idG4ge1xuICAgIG1hcmdpbi1yaWdodDogMTBweDsgfVxuICAgIC5mb3JtLWFjdGlvbnMgLmJ0bjpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuXG4vKipcbiAqIEZvcm0gdmFsaWRhdGlvbiBtZXNzYWdlc1xuICovXG4uZm9ybS1jb250cm9sR3JvdXAgLmZvcm0tbWVzc2FnZSB7XG4gIHBhZGRpbmctdG9wOiAwLjVlbTtcbiAgcGFkZGluZy1sZWZ0OiAwLjVlbTsgfVxuXG4uZm9ybS1hY3Rpb25zIC5mb3JtLW1lc3NhZ2Uge1xuICBwYWRkaW5nOiAwLjVlbTsgfVxuXG4vKipcbiAqIEZvcm0gZmllbGQgZmVlZGJhY2sgc3RhdGVzXG4gKi9cbi5oYXMtd2FybmluZyB7XG4gIGNvbG9yOiAjZjRhYTQ3OyB9XG5cbi5mb3JtLWNvbnRyb2xHcm91cC5oYXMtd2FybmluZyAuZm9ybS1sYWJlbCB7XG4gIGNvbG9yOiAjZjRhYTQ3OyB9XG5cbi5mb3JtLWNvbnRyb2xHcm91cC5oYXMtd2FybmluZyAuZm9ybS1pbnB1dCB7XG4gIGNvbG9yOiAjZjRhYTQ3O1xuICBib3JkZXItY29sb3I6ICNmNGFhNDc7IH1cbiAgLmZvcm0tY29udHJvbEdyb3VwLmhhcy13YXJuaW5nIC5mb3JtLWlucHV0OmZvY3VzIHtcbiAgICBib3JkZXItY29sb3I6ICNmMTk0MTc7IH1cblxuLmZvcm0tY29udHJvbEdyb3VwLmhhcy13YXJuaW5nIC5mb3JtLW1lc3NhZ2Uge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6ICNmNGFhNDc7IH1cblxuLmhhcy1lcnJvciB7XG4gIGNvbG9yOiAjQjk0QTREOyB9XG5cbi5mb3JtLWNvbnRyb2xHcm91cC5oYXMtZXJyb3IgLmZvcm0tbGFiZWwge1xuICBjb2xvcjogI0I5NEE0RDsgfVxuXG4uZm9ybS1jb250cm9sR3JvdXAuaGFzLWVycm9yIC5mb3JtLWlucHV0IHtcbiAgY29sb3I6ICNCOTRBNEQ7XG4gIGJvcmRlci1jb2xvcjogI0I5NEE0RDsgfVxuICAuZm9ybS1jb250cm9sR3JvdXAuaGFzLWVycm9yIC5mb3JtLWlucHV0OmZvY3VzIHtcbiAgICBib3JkZXItY29sb3I6ICM5NjNhM2M7IH1cblxuLmZvcm0tY29udHJvbEdyb3VwLmhhcy1lcnJvciAuZm9ybS1tZXNzYWdlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiAjQjk0QTREOyB9XG5cbi5oYXMtc3VjY2VzcyB7XG4gIGNvbG9yOiAjMTZjOThkOyB9XG5cbi5mb3JtLWNvbnRyb2xHcm91cC5oYXMtc3VjY2VzcyAuZm9ybS1sYWJlbCB7XG4gIGNvbG9yOiAjMTZjOThkOyB9XG5cbi5mb3JtLWNvbnRyb2xHcm91cC5oYXMtc3VjY2VzcyAuZm9ybS1pbnB1dCB7XG4gIGNvbG9yOiAjMTZjOThkO1xuICBib3JkZXItY29sb3I6ICMxNmM5OGQ7IH1cbiAgLmZvcm0tY29udHJvbEdyb3VwLmhhcy1zdWNjZXNzIC5mb3JtLWlucHV0OmZvY3VzIHtcbiAgICBib3JkZXItY29sb3I6ICMxMTliNmQ7IH1cblxuLmZvcm0tY29udHJvbEdyb3VwLmhhcy1zdWNjZXNzIC5mb3JtLW1lc3NhZ2Uge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6ICMxNmM5OGQ7IH1cblxuLmhhcy1pbmZvIHtcbiAgY29sb3I6ICMyODhhZDY7IH1cblxuLmZvcm0tY29udHJvbEdyb3VwLmhhcy1pbmZvIC5mb3JtLWxhYmVsIHtcbiAgY29sb3I6ICMyODhhZDY7IH1cblxuLmZvcm0tY29udHJvbEdyb3VwLmhhcy1pbmZvIC5mb3JtLWlucHV0IHtcbiAgY29sb3I6ICMyODhhZDY7XG4gIGJvcmRlci1jb2xvcjogIzI4OGFkNjsgfVxuICAuZm9ybS1jb250cm9sR3JvdXAuaGFzLWluZm8gLmZvcm0taW5wdXQ6Zm9jdXMge1xuICAgIGJvcmRlci1jb2xvcjogIzIwNmVhYjsgfVxuXG4uZm9ybS1jb250cm9sR3JvdXAuaGFzLWluZm8gLmZvcm0tbWVzc2FnZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogIzI4OGFkNjsgfVxuXG4vKipcbiAqIFBsYWNlaG9sZGVyIHRleHRcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogR2V0cyBzcGVjaWFsIHN0eWxlczsgY2FuJ3QgYmUgYnVuZGxlZCB0b2dldGhlciB0aG91Z2ggZm9yIHNvbWUgcmVhc29uXG4gKi9cbjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI2IzYjNiMzsgfVxuXG46LW1vei1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjYjNiM2IzOyB9XG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjYjNiM2IzOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NTFweCkge1xuICAvKipcblx0ICogSG9yaXpvbnRhbC1zcGVjaWZpYyBzdHlsZXNcblx0ICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdCAqIGFkZCAuZm9ybS0taG9yaXpvbnRhbCB0byB0aGUgPGZvcm0+IGVsZW1lbnRcblx0ICogRGVtbzogaHR0cDovL3RyeWtpY2tvZmYuY29tL2RlbW9zL2Zvcm1zLmh0bWwjbGF5b3V0LWV4YW1wbGUtbGFiZWxzLWlubGluZVxuXHQgKiBDb2RlOiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9tcm1hcnRpbmVhdS82NzEyNTc3I2ZpbGUtbGFiZWxzLWlubGluZS1odG1sXG5cdCAqL1xuICAuZm9ybS0taG9yaXpvbnRhbCAuZm9ybS1jb250cm9sR3JvdXAge1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgICAuZm9ybS0taG9yaXpvbnRhbCAuZm9ybS1jb250cm9sR3JvdXAgPiAuZm9ybS1jb250cm9sR3JvdXAtaW5wdXRXcmFwcGVyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5mb3JtLS1ob3Jpem9udGFsIC5mb3JtLWxhYmVsIHtcbiAgICB3aWR0aDogMTQwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAyOHB4O1xuICAgIHBhZGRpbmctdG9wOiAwLjZlbTsgfVxuICAuZm9ybS0taG9yaXpvbnRhbCAuZm9ybS1hY3Rpb25zIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDE2OHB4OyB9IH1cblxuLyoqXG4gKiBDdXN0b20gY29udHJvbHNcbiAqIC0gUmFkaW9zL2NoZWNrYm94ZXNcbiAqIC0gU2VsZWN0IGVsZW1lbnRcbiAqIC0gRmlsZSB1cGxvYWRcbiAqL1xuLyoqXG4gKiBDdXN0b20gQ2hlY2tib3hlcyBhbmQgcmFkaW9zXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIElFOStcbiAqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqIENoZWNrYm94IGJ1dHRvbiBleGFtcGxlIEhUTUxcbiAqXG4gKlx0PGxhYmVsIGNsYXNzPVwiY29udHJvbCBjb250cm9sLS1jdXN0b21cIiBmb3I9XCJjaGVja2JveDFcIj5cblx0XHQ8aW5wdXQgY2xhc3M9XCJjb250cm9sLS1jdXN0b20taW5wdXRcIiB0eXBlPVwiY2hlY2tib3hcIiBpZD1cImNoZWNrYm94MVwiIG5hbWU9XCJteUNoZWNrYm94XCIgdmFsdWU9XCJBIHZhbHVlXCIvPlxuXHRcdFx0PHNwYW4gY2xhc3M9XCJjb250cm9sLWluZGljYXRvciBjb250cm9sLWluZGljYXRvci0tY2hlY2tib3hcIj48L3NwYW4+XG5cdFx0XHRNeSBDaGVja2JveCBMYWJlbCBUZXh0XG5cdFx0PC9sYWJlbD5cbiAqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICogUmFkaW8gYnV0dG9uIGV4YW1wbGUgSFRNTFxuICpcbiAqXHQ8bGFiZWwgY2xhc3M9XCJjb250cm9sIGNvbnRyb2wtLWN1c3RvbVwiIGZvcj1cInJhZGlvMVwiPlxuICpcdFx0PGlucHV0IGNsYXNzPVwiY29udHJvbC0tY3VzdG9tLWlucHV0XCIgdHlwZT1cInJhZGlvXCIgaWQ9XCJyYWRpbzFcIiBuYW1lPVwibXlSYWRpb0J0blwiIHZhbHVlPVwiQSB2YWx1ZVwiLz5cbiAqXHRcdDxzcGFuIGNsYXNzPVwiY29udHJvbC1pbmRpY2F0b3IgY29udHJvbC1pbmRpY2F0b3ItLXJhZGlvXCI+PC9zcGFuPlxuICpcdFx0TXkgUmFkaW8gQnV0dG9uIExhYmVsIFRleHRcbiAqIFx0PC9sYWJlbD5cbiAqXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi5jb250cm9sLS1jdXN0b20ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICBwYWRkaW5nLWxlZnQ6IDIuM2VtO1xuICBoZWlnaHQ6IDEuM2VtO1xuICBsaW5lLWhlaWdodDogMS4zZW0gIWltcG9ydGFudDsgfVxuXG4uY29udHJvbC0tY3VzdG9tLS1pbmxpbmUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmctcmlnaHQ6IDJlbTsgfVxuXG4uY29udHJvbC0tY3VzdG9tLWlucHV0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvcGFjaXR5OiAwO1xuICB6LWluZGV4OiAtMTsgfVxuXG4uY29udHJvbC1pbmRpY2F0b3Ige1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEuM2VtO1xuICBoZWlnaHQ6IDEuM2VtO1xuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbWFyZ2luLXRvcDogMDtcbiAgYm94LXNoYWRvdzogMCAwIDAgMnB4IHRyYW5zcGFyZW50LCAwIDAgMCAwIHRyYW5zcGFyZW50OyB9XG5cbi5jb250cm9sLS1jdXN0b20taW5wdXQ6Zm9jdXMgfiAuY29udHJvbC1pbmRpY2F0b3Ige1xuICBib3gtc2hhZG93OiAwIDAgMCAycHggI2YxZjFmMSwgMCAwIDAgM3B4ICMxODE4MzA7IH1cblxuLmNvbnRyb2wtaW5kaWNhdG9yLS1jaGVja2JveCxcbi5jb250cm9sLWluZGljYXRvci0tdGlja2JveCB7XG4gIGJvcmRlci1yYWRpdXM6IC4yZW07IH1cbiAgLmNvbnRyb2wtaW5kaWNhdG9yLS1jaGVja2JveDpiZWZvcmUsIC5jb250cm9sLWluZGljYXRvci0tY2hlY2tib3g6YWZ0ZXIsXG4gIC5jb250cm9sLWluZGljYXRvci0tdGlja2JveDpiZWZvcmUsXG4gIC5jb250cm9sLWluZGljYXRvci0tdGlja2JveDphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB3aWR0aDogOTAlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogYWxsIDI1MG1zIGVhc2UtaW4tb3V0OyB9XG5cbi5jb250cm9sLWluZGljYXRvci0tY2hlY2tib3g6YmVmb3JlLCAuY29udHJvbC1pbmRpY2F0b3ItLWNoZWNrYm94OmFmdGVyIHtcbiAgdG9wOiA1MCU7XG4gIHdpZHRoOiA5MCU7XG4gIGhlaWdodDogMC4xZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7IH1cblxuLmNvbnRyb2wtaW5kaWNhdG9yLS1jaGVja2JveDpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoNDVkZWcpIHNjYWxlKDApOyB9XG5cbi5jb250cm9sLWluZGljYXRvci0tY2hlY2tib3g6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoLTQ1ZGVnKSBzY2FsZSgwKTsgfVxuXG4uY29udHJvbC1pbmRpY2F0b3ItLXRpY2tib3g6YmVmb3JlIHtcbiAgdG9wOiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgcm90YXRlKDQ1ZGVnKSBzY2FsZSgwKTtcbiAgYm9yZGVyOiAwLjFlbSBzb2xpZCAjZjFmMWYxO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgd2lkdGg6IDQwJTtcbiAgaGVpZ2h0OiA4MCU7XG4gIGJvcmRlci10b3A6IDA7XG4gIGJvcmRlci1sZWZ0OiAwOyB9XG5cbi5jb250cm9sLWluZGljYXRvci0tdGlja2JveDphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLmNvbnRyb2wtLWN1c3RvbS1pbnB1dDpjaGVja2VkIH4gLmNvbnRyb2wtaW5kaWNhdG9yLS1jaGVja2JveCxcbi5jb250cm9sLS1jdXN0b20taW5wdXQ6Y2hlY2tlZCB+IC5jb250cm9sLWluZGljYXRvci0tdGlja2JveCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxODE4MzA7XG4gIGJvcmRlcjogMC4xZW0gc29saWQgIzE4MTgzMDsgfVxuICAuY29udHJvbC0tY3VzdG9tLWlucHV0OmNoZWNrZWQgfiAuY29udHJvbC1pbmRpY2F0b3ItLWNoZWNrYm94OmJlZm9yZSwgLmNvbnRyb2wtLWN1c3RvbS1pbnB1dDpjaGVja2VkIH4gLmNvbnRyb2wtaW5kaWNhdG9yLS1jaGVja2JveDphZnRlcixcbiAgLmNvbnRyb2wtLWN1c3RvbS1pbnB1dDpjaGVja2VkIH4gLmNvbnRyb2wtaW5kaWNhdG9yLS10aWNrYm94OmJlZm9yZSxcbiAgLmNvbnRyb2wtLWN1c3RvbS1pbnB1dDpjaGVja2VkIH4gLmNvbnRyb2wtaW5kaWNhdG9yLS10aWNrYm94OmFmdGVyIHtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi5jb250cm9sLS1jdXN0b20taW5wdXQ6Y2hlY2tlZCB+IC5jb250cm9sLWluZGljYXRvci0tdGlja2JveDpiZWZvcmUsIC5jb250cm9sLS1jdXN0b20taW5wdXQ6Y2hlY2tlZCB+IC5jb250cm9sLWluZGljYXRvci0tdGlja2JveDphZnRlciB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoNDVkZWcpIHNjYWxlKDEpOyB9XG5cbi5jb250cm9sLS1jdXN0b20taW5wdXQ6Y2hlY2tlZCB+IC5jb250cm9sLWluZGljYXRvci0tY2hlY2tib3g6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDQ1ZGVnKSBzY2FsZSgxKTsgfVxuXG4uY29udHJvbC0tY3VzdG9tLWlucHV0OmNoZWNrZWQgfiAuY29udHJvbC1pbmRpY2F0b3ItLWNoZWNrYm94OmFmdGVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKC00NWRlZykgc2NhbGUoMSk7IH1cblxuLmNvbnRyb2wtaW5kaWNhdG9yLS1yYWRpbyB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuXG4uY29udHJvbC0tY3VzdG9tLWlucHV0OmNoZWNrZWQgfiAuY29udHJvbC1pbmRpY2F0b3ItLXJhZGlvIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcbiAgYm9yZGVyOiAwLjNlbSBzb2xpZCAjMTgxODMwOyB9XG5cbi8qKlxuICogQ3VzdG9tIHNlbGVjdCBlbGVtZW50XG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEZpcmVmb3ggMzkrLCBJRTEwK1xuICpcbiAqXHQ8ZGl2IGNsYXNzPVwiZm9ybS1jb250cm9sR3JvdXBcIj5cblx0XHRcdDxsYWJlbCBmb3I9XCJjcy1jaG9pY2VcIiBjbGFzcz1cImZvcm0tbGFiZWxcIj5DdXN0b20gc2VsZWN0PC9sYWJlbD5cblx0XHRcdDxkaXYgY2xhc3M9XCJmb3JtLWNvbnRyb2xHcm91cC1pbnB1dFdyYXBwZXIgZm9ybS1jb250cm9sR3JvdXAtaW5wdXRXcmFwcGVyLS1zZWxlY3RcIj5cblx0XHRcdFx0PHNlbGVjdCBpZD1cImNzLWNob2ljZVwiIG5hbWU9XCJjcy1jaG9pY2VcIiBjbGFzcz1cImZvcm0taW5wdXQgZm9ybS1pbnB1dC0tc2VsZWN0XCI+XG5cdFx0XHRcdFx0PG9wdGlvbiB2YWx1ZT1cIi0tXCI+U2VsZWN0IHRpdGxlPC9vcHRpb24+XG5cdFx0XHRcdFx0PG9wdGlvbiB2YWx1ZT1cIk1yXCI+TXI8L29wdGlvbj5cblx0XHRcdFx0XHQ8b3B0aW9uIHZhbHVlPVwiTXJzXCI+TXJzPC9vcHRpb24+XG5cdFx0XHRcdDwvc2VsZWN0PlxuXHRcdFx0PC9kaXY+XG5cdDwvZGl2PlxuICovXG4uZm9ybS1jb250cm9sR3JvdXAtaW5wdXRXcmFwcGVyLS1zZWxlY3Qge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwO1xuICAvKiBDdXN0b20gYXJyb3cgc2l0cyBvbiB0b3Agb2YgdGhlIHNlbGVjdCAtIGNvdWxkIGJlIGFuIGltYWdlLCBTVkcsIGljb24gZm9udCwgZXRjLiBvciB0aGUgYXJyb3cgY291bGQganVzdCBiYWtlZCBpbnRvIHRoZSBiZyBpbWFnZSBvbiB0aGUgc2VsZWN0ICovIH1cbiAgLmZvcm0tY29udHJvbEdyb3VwLWlucHV0V3JhcHBlci0tc2VsZWN0OmFmdGVyIHtcbiAgICBjb2xvcjogIzE4MTgzMDtcbiAgICBjb250ZW50OiBcIlxcMjVCQ1wiO1xuICAgIGZvbnQtc2l6ZTogLjdlbTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMS4yZW07XG4gICAgdG9wOiAxLjJlbTtcbiAgICB6LWluZGV4OiAyO1xuICAgIC8qIFRoZXNlIGhhY2tzIG1ha2UgdGhlIHNlbGVjdCBiZWhpbmQgdGhlIGFycm93IGNsaWNrYWJsZSBpbiBzb21lIGJyb3dzZXJzICovXG4gICAgLW1zLXBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIGJhY2tncm91bmQ6IHVybCgjKTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IGFjdGl2ZSksICgtbXMtaGlnaC1jb250cmFzdDogbm9uZSkge1xuICAgIC5mb3JtLWNvbnRyb2xHcm91cC1pbnB1dFdyYXBwZXItLXNlbGVjdDphZnRlciB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgLmZvcm0tY29udHJvbEdyb3VwLWlucHV0V3JhcHBlci0tc2VsZWN0IC5mb3JtLWlucHV0LS1zZWxlY3Qge1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IGFjdGl2ZSksICgtbXMtaGlnaC1jb250cmFzdDogbm9uZSkge1xuICAgICAgLmZvcm0tY29udHJvbEdyb3VwLWlucHV0V3JhcHBlci0tc2VsZWN0IC5mb3JtLWlucHV0LS1zZWxlY3Q6Zm9jdXM6Oi1tcy12YWx1ZSB7XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgICBjb2xvcjogIzIyMjsgfSB9XG5cbm9wdGlvbiB7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxuLyoqXG4gKiBDdXN0b20gZmlsZSBpbnB1dFxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiA8ZGl2IGNsYXNzPVwiZm9ybS1jb250cm9sR3JvdXBcIj5cblx0XHQ8bGFiZWwgY2xhc3M9XCJmb3JtLWxhYmVsXCIgZm9yPVwiZmlsZVwiPkZpbGUgdXBsb2FkPC9sYWJlbD5cblxuXHRcdDxkaXYgY2xhc3M9XCJmb3JtLWNvbnRyb2xHcm91cC1pbnB1dFdyYXBwZXJcIj5cblx0XHRcdDxsYWJlbCBjbGFzcz1cImZvcm0taW5wdXQgZm9ybS1pbnB1dC0tZmlsZVwiPlxuXHRcdFx0XHQ8c3BhbiBjbGFzcz1cImZvcm0taW5wdXQtLWZpbGUtdGV4dFwiPkNob29zZSBmaWxlLi48L3NwYW4+XG5cdFx0XHRcdDxzcGFuIGNsYXNzPVwiZm9ybS1pbnB1dC0tZmlsZS1idXR0b25cIj5Ccm93c2U8L3NwYW4+XG5cdFx0XHRcdDxpbnB1dCBjbGFzcz1cImZvcm0taW5wdXQtLWZpbGUtaW5wdXRcIiB0eXBlPVwiZmlsZVwiIGlkPVwiZmlsZVwiIGFjY2VwdD1cImltYWdlLypcIiBzaXplPVwiMTRcIiAvPlxuXHRcdFx0PC9sYWJlbD5cblx0XHQ8L2Rpdj5cblx0PC9kaXY+XG4gKi9cbi8qKlxuICogQ3VzdG9tIGZpbGUgaW5wdXRcbiAqL1xuLmZvcm0taW5wdXQtLWZpbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmctcmlnaHQ6IDEyMHB4O1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuXG4uZm9ybS1pbnB1dC0tZmlsZS1pbnB1dCB7XG4gIG9wYWNpdHk6IDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7IH1cblxuLmZvcm0taW5wdXQtLWZpbGUtYnV0dG9uIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogLTFweDtcbiAgYm90dG9tOiAwO1xuICBwYWRkaW5nOiAuNDRlbSAxZW0gMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZDlkOTsgfVxuICAuZm9ybS1pbnB1dC0tZmlsZS1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2M7IH1cblxuLyoqXG4gKiBCYXNlIGZvcm0gc3R5bGVzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIERlbW86IGh0dHA6Ly90cnlraWNrb2ZmLmNvbS9kZW1vcy9mb3Jtcy5odG1sI2xheW91dC1leGFtcGxlLWxhYmVscy1hYm92ZVxuICogQ29kZTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vbXJtYXJ0aW5lYXUvNjcxMjU3NyNmaWxlLWxhYmVscy1hYm92ZS1pbnB1dHMtaHRtbFxuICogVXNhZ2U6XG4gIFx0PGRpdiBjbGFzcz1cImZvcm0tY29udHJvbEdyb3VwXCI+XG4gIFx0XHQ8bGFiZWwgZm9yPVwibmFtZVwiIGNsYXNzPVwiZm9ybS1sYWJlbFwiPk5hbWU8L2xhYmVsPlxuICBcdFx0PGRpdiBjbGFzcz1cImZvcm0tY29udHJvbEdyb3VwLWlucHV0V3JhcHBlclwiPlxuICBcdFx0XHQ8aW5wdXQgdHlwZT1cInRleHRcIiBpZD1cIm5hbWVcIiBwbGFjZWhvbGRlcj1cIlphbmRlciBNYXJ0aW5lYXVcIiBjbGFzcz1cImZvcm0taW5wdXRcIi8+XG4gIFx0XHQ8L2Rpdj5cbiAgXHQ8L2Rpdj5cbiAqL1xuLmZvcm0tbGVnZW5kIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi8qKlxuICogRm9ybSBpbnB1dHMgYW5kIGdyb3Vwc1xuICovXG4uZm9ybS1sZWdlbmQgKyAuZm9ybS1jb250cm9sR3JvdXAge1xuICAtd2Via2l0LW1hcmdpbi10b3AtY29sbGFwc2U6IHNlcGFyYXRlOyB9XG5cbi5mb3JtLWxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLmZvcm0taW5wdXQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuICAuZm9ybS1pbnB1dDpmb2N1cyB7XG4gICAgb3V0bGluZTogMDtcbiAgICBvdXRsaW5lOiB0aGluIGRvdHRlZCBcXDk7IH1cbiAgLmZvcm0taW5wdXRbdHlwZT1cImltYWdlXCJdLCAuZm9ybS1pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sIC5mb3JtLWlucHV0W3R5cGU9XCJyYWRpb1wiXSwgLmZvcm0taW5wdXRbdHlwZT1cInJhbmdlXCJdIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgcGFkZGluZzogMDtcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgLmZvcm0taW5wdXRbdHlwZT1cImltYWdlXCJdIHtcbiAgICBib3JkZXI6IDA7IH1cbiAgLmZvcm0taW5wdXRbdHlwZT1cImZpbGVcIl0ge1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogMjhweDtcbiAgICBwYWRkaW5nOiBpbml0aWFsO1xuICAgIGxpbmUtaGVpZ2h0OiBpbml0aWFsO1xuICAgIGJvcmRlcjogaW5pdGlhbDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbml0aWFsOyB9XG4gIC5mb3JtLWlucHV0W3R5cGU9XCJoaWRkZW5cIl0ge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmZvcm0taW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdIHtcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgfVxuICAuZm9ybS1pbnB1dFt0eXBlPVwicmFuZ2VcIl0ge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5mb3JtLWlucHV0ID4gLnJhZGlvOmZpcnN0LWNoaWxkLFxuICAuZm9ybS1pbnB1dCA+IC5jaGVja2JveDpmaXJzdC1jaGlsZCB7XG4gICAgcGFkZGluZy10b3A6IDVweDsgfVxuICAuZm9ybS1pbnB1dFtkaXNhYmxlZF0sIC5mb3JtLWlucHV0W3JlYWRvbmx5XSB7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDsgfVxuXG4uZm9ybS1pbnB1dC0tdGV4dGFyZWEge1xuICBoZWlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IDVlbTtcbiAgcmVzaXplOiB2ZXJ0aWNhbDsgfVxuXG4uZm9ybS1pbnB1dC0tdGV4dGFyZWEtLXVuZWRpdGFibGUge1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi5mb3JtLWlucHV0LWZpbGUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGxpbmUtaGVpZ2h0OiAxZW07IH1cbiAgLmZvcm0taW5wdXQtZmlsZTpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuXG5idXR0b24sXG5pbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIHdpZHRoOiBhdXRvO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbi8qKlxuICogQ2hlY2tib3hlczpcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQ8bGFiZWwgY2xhc3M9XCJjb250cm9sXCI+XG5cdFx0PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIHZhbHVlPVwiY2hlY2sxXCI+XG5cdFx0VGhpcyBpcyBhIGNoZWNrYm94XG5cdDwvbGFiZWw+XG5cdDxsYWJlbCBjbGFzcz1cImNvbnRyb2wgY29udHJvbC0taW5saW5lXCI+XG5cdFx0PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIHZhbHVlPVwiY2hlY2sxXCI+XG5cdFx0VGhpcyBpcyBhIGNoZWNrYm94XG5cdDwvbGFiZWw+XG5cbiAqIFJhZGlvczpcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQ8bGFiZWwgY2xhc3M9XCJjb250cm9sXCI+XG5cdFx0PGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJvcHRpb25zUmFkaW9zXCIgaWQ9XCJvcHRpb25zUmFkaW9zMVwiIHZhbHVlPVwib3B0aW9uMVwiIGNoZWNrZWQ+XG5cdFx0VGhpcyBpcyBhIHJhZGlvXG5cdDwvbGFiZWw+XG5cdDxsYWJlbCBjbGFzcz1cImNvbnRyb2wgY29udHJvbC0taW5saW5lXCI+XG5cdFx0PGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJvcHRpb25zUmFkaW9zXCIgaWQ9XCJvcHRpb25zUmFkaW9zMVwiIHZhbHVlPVwib3B0aW9uMlwiIGNoZWNrZWQ+XG5cdFx0VGhpcyBpcyBhIHJhZGlvXG5cdDwvbGFiZWw+XG4gKi9cbi5jb250cm9sIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAxOyB9XG4gIC5jb250cm9sICsgLmNvbnRyb2wge1xuICAgIG1hcmdpbi10b3A6IDE0cHg7IH1cbiAgLmNvbnRyb2wgaW5wdXQge1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgZGlzcGxheTogaW5saW5lO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIG1hcmdpbi1yaWdodDogMC41ZW07IH1cblxuLmNvbnRyb2wtLWlubGluZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICAuY29udHJvbC0taW5saW5lICsgLmNvbnRyb2wtLWlubGluZSB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tbGVmdDogMS41ZW07IH1cblxuLyoqXG4gKiBGb3JtIHZhbGlkYXRpb24gbWVzc2FnZXNcbiAqL1xuLmZvcm0tY29udHJvbEdyb3VwIC5mb3JtLW1lc3NhZ2Uge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKlxuICogTGlua3NcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5hIHtcbiAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7IH1cbiAgYSwgYTpsaW5rIHtcbiAgICBjb2xvcjogIzI4OGFkNjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgYTp2aXNpdGVkIHtcbiAgICBjb2xvcjogIzI4OGFkNjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgYTpob3ZlciwgYTpmb2N1cyB7XG4gICAgY29sb3I6ICMxODUzODA7IH1cbiAgYTphY3RpdmUge1xuICAgIGNvbG9yOiAjMTg1MzgwOyB9XG5cbi8qKlxuICogQnV0dG9uc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiAtIEFzc29jaWF0ZWQgQnV0dG9uIFZhcmlhYmxlc1xuICogLSBCYXNlIGJ1dHRvbiBzdHlsaW5nXG4gKiDigJMgQnV0dG9uIE1vZGlmaWVyc1xuICogXHQg4oCTIGJ0bi0tcHJpbWFyeVxuICogICDigJMgYnRuLS1ibG9ja1xuICovXG4vKipcbiAqIERlZmluZSBhc3NvY2lhdGVkIEJ1dHRvbiB2YXJpYWJsZXNcbiAqL1xuLyoqXG4gKiBCYXNlIGJ1dHRvbiBzdHlsZXMg4oCTIEJhc2VkIG9uIGNzc3dpemFyZHJ5LmNvbS9iZWF1dG9uc1xuICpcbiAqIDEuIEFsbG93IHVzIHRvIGJldHRlciBzdHlsZSBib3ggbW9kZWwgcHJvcGVydGllcy5cbiAqIDIuIExpbmUgZGlmZmVyZW50IHNpemVkIGJ1dHRvbnMgdXAgYSBsaXR0bGUgbmljZXIuXG4gKiAzLiBTdG9wIGJ1dHRvbnMgd3JhcHBpbmcgYW5kIGxvb2tpbmcgYnJva2VuLlxuICogNC4gTWFrZSBidXR0b25zIGluaGVyaXQgZm9udCBzdHlsZXMuXG4gKiA1LiBGb3JjZSBhbGwgZWxlbWVudHMgdXNpbmcgYmVhdXRvbnMgdG8gYXBwZWFyIGNsaWNrYWJsZS5cbiAqIDYuIE5vcm1hbGlzZSBib3ggbW9kZWwgc3R5bGVzLlxuICogNy4gSWYgdGhlIGJ1dHRvbuKAmXMgdGV4dCBpcyAxZW0sIGFuZCB0aGUgYnV0dG9uIGlzICgzICogZm9udC1zaXplKSB0YWxsLCB0aGVuXG4gKiAgICB0aGVyZSBpcyAxZW0gb2Ygc3BhY2UgYWJvdmUgYW5kIGJlbG93IHRoYXQgdGV4dC4gV2UgdGhlcmVmb3JlIGFwcGx5IDFlbVxuICogICAgb2Ygc3BhY2UgdG8gdGhlIGxlZnQgYW5kIHJpZ2h0LCBhcyBwYWRkaW5nLCB0byBrZWVwIGNvbnNpc3RlbnQgc3BhY2luZy5cbiAqIDguIEZpeGVzIG9kZCBpbm5lciBzcGFjaW5nIGluIElFNy5cbiAqIDkuIERvbuKAmXQgYWxsb3cgYnV0dG9ucyB0byBoYXZlIHVuZGVybGluZXM7IGl0IGtpbmRhIHJ1aW5zIHRoZSBpbGx1c2lvbi5cbiAqMTAuIFByZXZlbnRzIGZyb20gaW5oZXJpdGluZyBkZWZhdWx0IGFuY2hvciBzdHlsZXMuXG4gKi9cbi5idG4ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIFsxXSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAvKiBbMl0gKi9cbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgLyogWzNdICovXG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiBbNF0gKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiBbNF0gKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiBbNV0gKi9cbiAgYm9yZGVyOiBub25lO1xuICAvKiBbNl0gKi9cbiAgbWFyZ2luOiAwO1xuICAvKiBbNl0gKi9cbiAgcGFkZGluZy10b3A6IDA7XG4gIC8qIFs2XSAqL1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgLyogWzZdICovXG4gIGxpbmUtaGVpZ2h0OiAyLjU7XG4gIC8qIFs3XSAqL1xuICBoZWlnaHQ6IDIuNWVtO1xuICAvKiBbN10gKi9cbiAgcGFkZGluZy1yaWdodDogMS41ZW07XG4gIC8qIFs3XSAqL1xuICBwYWRkaW5nLWxlZnQ6IDEuNWVtO1xuICAvKiBbN10gKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIFs4XSAqL1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5NWE1YTY7IH1cbiAgLmJ0biwgLmJ0bjpsaW5rLCAuYnRuOnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5idG46aG92ZXIsIC5idG46YWN0aXZlLCAuYnRuOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzk4ZDhmOyB9XG4gIC5idG4sIC5idG46aG92ZXIsIC5idG46YWN0aXZlLCAuYnRuOmZvY3VzLCAuYnRuOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuYnRuOmFjdGl2ZSwgLmJ0bjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuICAuYnRuLmRpc2FibGVkLCAuYnRuW2Rpc2FibGVkXSB7XG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgb3BhY2l0eTogLjU7IH1cblxuLmJ0bi0tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyODhhZDY7IH1cbiAgLmJ0bi0tcHJpbWFyeSwgLmJ0bi0tcHJpbWFyeTpsaW5rLCAuYnRuLS1wcmltYXJ5OnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5idG4tLXByaW1hcnk6aG92ZXIsIC5idG4tLXByaW1hcnk6YWN0aXZlLCAuYnRuLS1wcmltYXJ5OmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjA2ZWFiOyB9XG5cbi5idG4tLWJsb2NrIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgLmJ0bi0tYmxvY2sgKyAuYnRuLS1ibG9jayB7XG4gICAgbWFyZ2luLXRvcDogMTBweDsgfVxuXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdLmJ0bi0tYmxvY2ssXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0uYnRuLS1ibG9jayxcbmlucHV0W3R5cGU9XCJidXR0b25cIl0uYnRuLS1ibG9jayB7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi8qKlxuICogTGlzdHNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogLSAoVW4pb3JkZXJlZCBsaXN0c1xuICogLSBVbnN0eWxlZCBsaXN0c1xuICogLSBEZWZpbml0aW9uIGxpc3RzXG4gKiAtIENlbnRyZWQgbGlzdHNcbiAqIC0gRmxvYXRlZCBsaXN0c1xuICovXG51bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogZGlzYzsgfVxuXG5vbCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbDsgfVxuXG51bCwgb2wge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDAgMCAyOHB4IDI4cHg7IH1cbiAgdWwgdWwsXG4gIHVsIG9sLCBvbCB1bCxcbiAgb2wgb2wge1xuICAgIG1hcmdpbi1sZWZ0OiA1NnB4OyB9XG4gIHVsIHVsLCBvbCB1bCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBjaXJjbGU7IH1cbiAgICB1bCB1bCB1bCwgb2wgdWwgdWwge1xuICAgICAgbGlzdC1zdHlsZS10eXBlOiBzcXVhcmU7IH1cbiAgdWwgb2wsIG9sIG9sIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IHVwcGVyLXJvbWFuOyB9XG4gICAgdWwgb2wgb2wsIG9sIG9sIG9sIHtcbiAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbG93ZXItcm9tYW47IH1cbiAgdWwgdWwsIHVsIG9sLCBvbCB1bCwgb2wgb2wge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cblxuLyoqXG4gKiBVbnN0eWxlZCBsaXN0c1xuICovXG4udW5zdHlsZWQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIGxpc3Qtc3R5bGUtaW1hZ2U6IG5vbmU7IH1cblxuLyoqXG4gKiBEZWZpbml0aW9uIGxpc3RzXG4gKi9cbmRsIHtcbiAgbWFyZ2luLWJvdHRvbTogMjhweDsgfVxuXG5kdCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbmRkIHtcbiAgbWFyZ2luLWxlZnQ6IDI4cHg7IH1cblxuLyoqXG4gKiBDZW50cmVkIGxpc3RzXG4gKlxuICogVXNhZ2U6XG5cdDx1bCBjbGFzcz1cImwtbGlzdC0tY2VudHJlZFwiPlxuXHRcdDxsaT48L2xpPlxuXHQ8L3VsPlxuICovXG4ubC1saXN0LS1jZW50cmVkLCAubC1saXN0LS1jZW50ZXJlZCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAubC1saXN0LS1jZW50cmVkIGxpLCAubC1saXN0LS1jZW50ZXJlZCBsaSB7XG4gICAgZGlzcGxheTogaW5saW5lOyB9XG5cbi8qKlxuICogRmxvYXRlZCBsaXN0c1xuICogVXNhZ2U6XG5cdDx1bCBjbGFzcz1cImwtbGlzdC0tZmxvYXRlZFwiPlxuXHRcdDxsaT48L2xpPlxuXHQ8L3VsPlxuICovXG4ubC1saXN0LS1mbG9hdGVkOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNsZWFyOiBib3RoOyB9XG5cbi5sLWxpc3QtLWZsb2F0ZWQgbGkge1xuICBmbG9hdDogbGVmdDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogRW1iZWRkZWQgY29udGVudFxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbmltZyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgY29sb3I6ICNjMDA7XG4gIGJvcmRlcjogMDtcbiAgLW1zLWludGVycG9sYXRpb24tbW9kZTogYmljdWJpYzsgfVxuXG5pbWcsXG5vYmplY3QsXG5lbWJlZCxcbnZpZGVvIHtcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbi8qKlxuICogSWNvbnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogRm9yIGFuIGV4YW1wbGUgb2YgaG93IHRvIHVzZSB0aGVzZSwgc2VlXG4gKiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9tcm1hcnRpbmVhdS8zMTRiMDFiMzAwZmEyMGE1YTgyMGE0ZDY4ODlmZmQ0MlxuICogaHR0cDovL2NvZGVwZW4uaW8vbXJtYXJ0aW5lYXUvcGVuL2Fta1pCYj9lZGl0b3JzPTExMDBcbiAqXG4gKiBTVkcgaWNvbiB1c2FnZTpcbiAgIDxzdmcgdGl0bGU9XCJXaGF0c2FwcFwiIGNsYXNzPVwiaWNvbiBpY29uLS13aGF0c2FwcFwiPlxuICAgICA8dXNlIHhsaW5rOmhyZWY9XCIvYXNzZXRzL2Rpc3QvaW1nL2ljb25zLnN2ZyNsb2dvLXdoYXRzYXBwXCIvPlxuICAgPC9zdmc+XG4gKi9cbltjbGFzcyo9XCJpY29uXCJdIHtcbiAgc3BlYWs6IG5vbmU7IH1cblxuLmljb24tLWxhcmdlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMjBweDtcbiAgaGVpZ2h0OiAxMjBweDsgfVxuXG4uaWNvbi0tc21hbGwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAyNXB4O1xuICBoZWlnaHQ6IDI1cHg7IH1cblxuLyoqXG4gKiBJbmNsdWRlZCBTb2NpYWwgTWVkaWEgYW5kIG90aGVyIGljb25zXG4gKi9cbi5pY29uLS10d2l0dGVyIHtcbiAgY29sb3I6ICM1NWFjZWU7IH1cblxuLmljb24tLWZhY2Vib29rIHtcbiAgY29sb3I6ICMzYjU5OTg7IH1cblxuLmljb24tLWluc3RhZ3JhbSB7XG4gIGNvbG9yOiAjZTQ0MDVmOyB9XG5cbi5pY29uLS1waW50ZXJlc3Qge1xuICBjb2xvcjogI2JkMDgxYzsgfVxuXG4uaWNvbi0teW91dHViZSB7XG4gIGNvbG9yOiAjY2QyMDFmOyB9XG5cbi5pY29uLS13aGF0c2FwcCB7XG4gIGNvbG9yOiAjMjVkMzY2OyB9XG5cbi5pY29uLS1lbWFpbCB7XG4gIGNvbG9yOiAjMjg4YWQ2OyB9XG5cbi5pY29uLS1raWNrb2ZmIHtcbiAgZmlsbDogIzE4MTgzMDtcbiAgY29sb3I6ICNmZTdjMDg7IH1cblxuLmljb24tLXRtdyB7XG4gIGNvbG9yOiAjZWY3NTIxO1xuICBmaWxsOiAjOGE4YjhjOyB9XG5cbi8qKlxuICogU2tpcCB0byBtYWluIGNvbnRlbnQgbGlua1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiA8ZGl2IGNsYXNzPVwic2tpcFRvQ29udGVudFwiPlxuXHQgXHQ8YSBocmVmPVwiI21haW5Db250ZW50XCIgY2xhc3M9XCJidG4gYnRuLS1wcmltYXJ5XCI+U2tpcCB0byBtYWluIGNvbnRlbnQ8L2E+XG5cdCA8L2Rpdj5cbiAqL1xuLnNraXBUb0NvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiAwOyB9XG4gIC5za2lwVG9Db250ZW50IGEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IC0xMDBweDtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKTsgfVxuICAgIC5za2lwVG9Db250ZW50IGE6Zm9jdXMge1xuICAgICAgdG9wOiA1cHg7IH1cblxuLyoqXG4gKiBQcmVmb3JtYXR0ZWQgY29kZVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb2RlIHR5cG9ncmFwaHkgc3R5bGVzIGZvciB0aGUgPGNvZGU+IGFuZCA8cHJlPiBlbGVtZW50c1xuICovXG4vKipcbiAqIERlZmluZSBhc3NvY2lhdGVkIENvZGUgdmFyaWFibGVzXG4gKi9cbmNvZGUsXG5wcmUge1xuICBwYWRkaW5nOiAwIDNweCAycHg7XG4gIGZvbnQtZmFtaWx5OiBNZW5sbywgTW9uYWNvLCBcIkNvdXJpZXIgTmV3XCIsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAwLjhyZW07XG4gIGNvbG9yOiAjNDQ0O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIHRhYi1zaXplOiAzOyB9XG5cbmNvZGUge1xuICBwYWRkaW5nOiAycHggNHB4O1xuICBjb2xvcjogIzQ0NDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RkZDsgfVxuXG5wcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMTRweDtcbiAgbWFyZ2luOiAwIDAgMjhweDtcbiAgY29sb3I6ICM0NDQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgd2hpdGUtc3BhY2U6IHByZTsgfVxuICBwcmUgY29kZSB7XG4gICAgcGFkZGluZzogMDtcbiAgICBjb2xvcjogIzQ0NDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkO1xuICAgIGJvcmRlcjogMDsgfVxuXG4ucHJlLS1zY3JvbGxhYmxlIHtcbiAgbWF4LWhlaWdodDogMzQwcHg7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDsgfVxuXG4vKipcbiAqIFRhYmxlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiAtIEFzc29jaWF0ZWQgVGFibGUgVmFyaWFibGVzXG4gKiAtIERlZmF1bHQgdGFibGUgU3R5bGVzXG4gKiDigJMgVGFibGUgbW9kaWZpZXJzOlxuICogICAtIC50YWJsZS0tc3RyaXBlZFxuICog4oCTIC5yZXNwb25zaXZlVGFibGVcbiAqL1xuLyoqXG4gKiBEZWZpbmUgYXNzb2NpYXRlZCBUYWJsZSB2YXJpYWJsZXNcbiAqL1xuLyoqXG4gKiBDdXN0b21pemVzIHRoZSBgLnRhYmxlYCBjb21wb25lbnQgd2l0aCBiYXNpYyB2YWx1ZXMsIGVhY2ggdXNlZCBhY3Jvc3MgYWxsIHRhYmxlIHZhcmlhdGlvbnMuXG4gKi9cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMjhweDtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNjY2M7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XG4gIHRhYmxlLWxheW91dDogZml4ZWQ7IH1cbiAgdGFibGUgdGgsXG4gIHRhYmxlIHRkIHtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOyB9XG4gICAgdGFibGUgdGg6Zmlyc3QtY2hpbGQsXG4gICAgdGFibGUgdGQ6Zmlyc3QtY2hpbGQge1xuICAgICAgYm9yZGVyLWxlZnQ6IDA7IH1cbiAgICB0YWJsZSB0aDpsYXN0LWNoaWxkLFxuICAgIHRhYmxlIHRkOmxhc3QtY2hpbGQge1xuICAgICAgYm9yZGVyLXJpZ2h0OiAwOyB9XG4gIHRhYmxlID4gdGhlYWQgdGgsXG4gIHRhYmxlID4gdGhlYWQgdGQge1xuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNjY2M7IH1cbiAgdGFibGUgPiB0Zm9vdCB0ZCB7XG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNjY2M7XG4gICAgYm9yZGVyLWJvdHRvbTogMDsgfVxuICB0YWJsZSA+IHRoZWFkOmZpcnN0LWNoaWxkID4gdHI6Zmlyc3QtY2hpbGQgPiB0aCxcbiAgdGFibGUgPiB0aGVhZDpmaXJzdC1jaGlsZCA+IHRyOmZpcnN0LWNoaWxkID4gdGQge1xuICAgIGJvcmRlci10b3A6IDA7IH1cbiAgdGFibGUgdHI6aG92ZXIgdGQsIHRhYmxlIHRyOmhvdmVyIHRoIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0OyB9XG4gIHRhYmxlID4gdGJvZHkgKyB0Ym9keSB7XG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNjY2M7IH1cbiAgdGFibGUgdGFibGUsXG4gIHRhYmxlIC50YWJsZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTsgfVxuXG50aCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuLyoqXG4gKiBaZWJyYS1zdHJpcGluZ1xuICogRGVmYXVsdCB6ZWJyYS1zdHJpcGUgc3R5bGVzIChhbHRlcm5hdGluZyBncmF5IGFuZCB0cmFuc3BhcmVudCBiYWNrZ3JvdW5kcylcbiAqL1xuLnRhYmxlLS1zdHJpcGVkIHRib2R5IDpudGgtY2hpbGQob2RkKSB0aCxcbi50YWJsZS0tc3RyaXBlZCB0Ym9keSA6bnRoLWNoaWxkKG9kZCkgdGQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5ICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBSZXNwb25zaXZlIHRhYmxlc1xuICogV3JhcCB5b3VyIHRhYmxlcyBpbiBgLnJlc3BvbnNpdmVUYWJsZWAgYW5kIHdlJ2xsIG1ha2UgdGhlbSBtb2JpbGUgZnJpZW5kbHkgYnkgZW5hYmxpbmcgaG9yaXpvbnRhbCBzY3JvbGxpbmcuIE9ubHkgYXBwbGllcyA8NzY4cHguIEV2ZXJ5dGhpbmcgYWJvdmUgdGhhdCB3aWxsIGRpc3BsYXkgbm9ybWFsbHkuXG4gKlxuICogSWYgeW91IG5lZWQgbW9yZSByZXNwb25zaXZlIHRhYmxlcywgY29uc2lkZXIgVGFibGVzYXcgYnkgdGhlIEZpbGFtZW50IEdyb3VwOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2ZpbGFtZW50Z3JvdXAvdGFibGVzYXdcbiAqL1xuQG1lZGlhIChtYXgtd2lkdGg6IDc0OXB4KSB7XG4gIC5yZXNwb25zaXZlVGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDIxcHg7XG4gICAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG4gICAgLW1zLW92ZXJmbG93LXN0eWxlOiAtbXMtYXV0b2hpZGluZy1zY3JvbGxiYXI7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7IH1cbiAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIGJvcmRlcjogMDsgfVxuICAgICAgLnJlc3BvbnNpdmVUYWJsZSA+IHRhYmxlID4gdGhlYWQgdGgsXG4gICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0aGVhZCB0ZCxcbiAgICAgIC5yZXNwb25zaXZlVGFibGUgPiB0YWJsZSA+IHRib2R5IHRoLFxuICAgICAgLnJlc3BvbnNpdmVUYWJsZSA+IHRhYmxlID4gdGJvZHkgdGQsXG4gICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0Zm9vdCB0aCxcbiAgICAgIC5yZXNwb25zaXZlVGFibGUgPiB0YWJsZSA+IHRmb290IHRkIHtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuICAgICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0aGVhZCB0aDpmaXJzdC1jaGlsZCxcbiAgICAgICAgLnJlc3BvbnNpdmVUYWJsZSA+IHRhYmxlID4gdGhlYWQgdGQ6Zmlyc3QtY2hpbGQsXG4gICAgICAgIC5yZXNwb25zaXZlVGFibGUgPiB0YWJsZSA+IHRib2R5IHRoOmZpcnN0LWNoaWxkLFxuICAgICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0Ym9keSB0ZDpmaXJzdC1jaGlsZCxcbiAgICAgICAgLnJlc3BvbnNpdmVUYWJsZSA+IHRhYmxlID4gdGZvb3QgdGg6Zmlyc3QtY2hpbGQsXG4gICAgICAgIC5yZXNwb25zaXZlVGFibGUgPiB0YWJsZSA+IHRmb290IHRkOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICBib3JkZXItbGVmdDogMDsgfVxuICAgICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0aGVhZCB0aDpsYXN0LWNoaWxkLFxuICAgICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0aGVhZCB0ZDpsYXN0LWNoaWxkLFxuICAgICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0Ym9keSB0aDpsYXN0LWNoaWxkLFxuICAgICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0Ym9keSB0ZDpsYXN0LWNoaWxkLFxuICAgICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0Zm9vdCB0aDpsYXN0LWNoaWxkLFxuICAgICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0Zm9vdCB0ZDpsYXN0LWNoaWxkIHtcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IDA7IH1cbiAgICAgIC5yZXNwb25zaXZlVGFibGUgPiB0YWJsZSA+IHRib2R5ID4gdGgsXG4gICAgICAucmVzcG9uc2l2ZVRhYmxlID4gdGFibGUgPiB0Ym9keSA+IHRkLFxuICAgICAgLnJlc3BvbnNpdmVUYWJsZSA+IHRhYmxlID4gdGZvb3QgdHI6bGFzdC1jaGlsZCA+IHRoLFxuICAgICAgLnJlc3BvbnNpdmVUYWJsZSA+IHRhYmxlID4gdGZvb3QgdHI6bGFzdC1jaGlsZCA+IHRkIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMDsgfSB9XG5cbi8qKlxuICogUGFydGlhbHNcbiAqL1xuLyoqXG4gKiBNYXN0aGVhZFxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbi8qKlxuICogRm9vdGVyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuLyoqXG4gKiBCcm93c2VyIHVwZ3JhZGUgbWVzc2FnZVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbi5icm93c2VydXBncmFkZSB7XG4gIG1hcmdpbjogLjJlbSAwO1xuICBiYWNrZ3JvdW5kOiAjY2NjO1xuICBjb2xvcjogIzAwMDtcbiAgcGFkZGluZzogLjJlbSAwOyB9XG5cbi8qKlxuICogVmlld3NcbiAqL1xuLyoqXG4gKiBHbG9iYWwgc3R5bGVzXG4gKi9cbi8qKlxuICogR2xvYmFsIGFwcC9zaXRlIHN0eWxlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxOyB9XG5cbi8qKlxuICogRGVmYXVsdCBsYXlvdXQgY29udGFpbmVyXG4gKi9cbi5sLWNvbnRhaW5lciB7XG4gIHdpZHRoOiA5MCU7XG4gIG1heC13aWR0aDogMTAwMHB4O1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG4vKipcbiAqIEhlbHBlci91dGlsaXR5IGNsYXNzZXNcbiAqL1xuLyoqXG4gKiBIZWxwZXIgY2xhc3Nlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBOb24tc2VtYW50aWMgaGVscGVyIGNsYXNzZXNcbiAqL1xuLyoqXG4gKiBDbGVhcmZpeFxuICogaHR0cDovL3d3dy5jc3Ntb2pvLmNvbS9sYXRlc3RfbmV3X2NsZWFyZml4X3NvX2Zhci9cbiAqIFNlZSBtaXhpbnMvX3V0aWxpdHkuc2NzcyBmb3IgYSBtaXhpbiB2ZXJzaW9uIG9mIHRoaXNcbiAqL1xuLmNsZWFyZml4OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDsgfVxuXG4uaXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYm9yZGVyOiAwO1xuICBkaXJlY3Rpb246IGx0cjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHRleHQtaW5kZW50OiAtOTk5ZW07IH1cbiAgLmlyIGJyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG5cbi5pcy1oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIHZpc2liaWxpdHk6IGhpZGRlbiAhaW1wb3J0YW50OyB9XG5cbi5pcy1zaG93biB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5pcy12aXN1YWxseUhpZGRlbiB7XG4gIGJvcmRlcjogMDtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4OyB9XG4gIC5pcy12aXN1YWxseUhpZGRlbi5mb2N1c2FibGU6YWN0aXZlLCAuaXMtdmlzdWFsbHlIaWRkZW4uZm9jdXNhYmxlOmZvY3VzIHtcbiAgICBjbGlwOiBhdXRvO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXJnaW46IDA7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgcG9zaXRpb246IHN0YXRpYztcbiAgICB3aWR0aDogYXV0bzsgfVxuXG4uaXMtaW52aXNpYmxlIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuOyB9XG5cbi5sLWZsb2F0TGVmdCB7XG4gIGZsb2F0OiBsZWZ0OyB9XG5cbi5sLWZsb2F0UmlnaHQge1xuICBmbG9hdDogcmlnaHQ7IH1cblxuLmwtY2xlYXIge1xuICBjbGVhcjogYm90aDtcbiAgZmxvYXQ6IG5vbmU7IH1cblxuLmwtbWIwIHtcbiAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50OyB9XG5cbi5sLW10MCB7XG4gIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDsgfVxuXG4qIHtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50OyB9XG5cbi8qIEEgaGFjayBmb3IgSFRNTDUgY29udGVudGVkaXRhYmxlIGF0dHJpYnV0ZSBvbiBtb2JpbGUgKi9cbnRleHRhcmVhW2NvbnRlbnRlZGl0YWJsZV0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLnByb21vdGUtbGF5ZXIge1xuICAvKlxuXHRUaGlzIG1heSBwcm9tb3RlIHRoZSBsYXllciB0byBhIGNvbXBvc2l0ZWRcblx0bGF5ZXIuXG5cblx0UmVwbGFjZSB3aXRoIHdpbGwtY2hhbmdlIHdoZW4gYXZhaWxhYmxlXG5cblx0I3BlcmZtYXR0ZXJzXG5cdCovXG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuXG4udHJhbnNpdGlvbiB7XG4gIHRyYW5zaXRpb246IGFsbCAzMDBtcyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpOyB9XG5cbmEsXG5hcmVhLFxuYnV0dG9uLFxuaW5wdXQsXG5sYWJlbCxcbnNlbGVjdCxcbnRleHRhcmVhLFxuW3RhYmluZGV4XSB7XG4gIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uOyB9XG5cbi8qKlxuICogUHJpbnQgc3R5bGVzXG4gKi9cbi8qKlxuICogUHJpbnQgc3R5bGVzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuQG1lZGlhIHByaW50IHtcbiAgKixcbiAgKjpiZWZvcmUsXG4gICo6YWZ0ZXIsXG4gICo6Zmlyc3QtbGV0dGVyIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgLyogQmxhY2sgcHJpbnRzIGZhc3RlcjogaHR0cDovL3d3dy5zYW5iZWlqaS5jb20vYXJjaGl2ZXMvOTUzICovXG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7IH1cbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICBhW2hyZWZdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjsgfVxuICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiOyB9XG4gIC8qXG5cdCAqIERvbid0IHNob3cgbGlua3MgZm9yIGltYWdlcywgb3IgamF2YXNjcmlwdC9pbnRlcm5hbCBsaW5rc1xuXHQgKi9cbiAgLmlyIGE6YWZ0ZXIsXG4gIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcbiAgYVtocmVmXj1cIiNcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xuICAgIC8qIGg1YnAuY29tL3QgKi8gfVxuICB0cixcbiAgaW1nIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuICBAcGFnZSB7XG4gICAgbWFyZ2luOiAuNWNtOyB9XG4gIHAsIGgyLCBoMyB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7IH1cbiAgaDIsIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDsgfSB9XG4iLCIvKipcbiAqIOKWiOKWiOKVlyAg4paI4paI4pWX4paI4paI4pWXIOKWiOKWiOKWiOKWiOKWiOKWiOKVl+KWiOKWiOKVlyAg4paI4paI4pWXIOKWiOKWiOKWiOKWiOKWiOKWiOKVlyDilojilojilojilojilojilojilojilZfilojilojilojilojilojilojilojilZdcbiAqIOKWiOKWiOKVkSDilojilojilZTilZ3ilojilojilZHilojilojilZTilZDilZDilZDilZDilZ3ilojilojilZEg4paI4paI4pWU4pWd4paI4paI4pWU4pWQ4pWQ4pWQ4paI4paI4pWX4paI4paI4pWU4pWQ4pWQ4pWQ4pWQ4pWd4paI4paI4pWU4pWQ4pWQ4pWQ4pWQ4pWdXG4gKiDilojilojilojilojilojilZTilZ0g4paI4paI4pWR4paI4paI4pWRICAgICDilojilojilojilojilojilZTilZ0g4paI4paI4pWRICAg4paI4paI4pWR4paI4paI4paI4paI4paI4pWXICDilojilojilojilojilojilZdcbiAqIOKWiOKWiOKVlOKVkOKWiOKWiOKVlyDilojilojilZHilojilojilZEgICAgIOKWiOKWiOKVlOKVkOKWiOKWiOKVlyDilojilojilZEgICDilojilojilZHilojilojilZTilZDilZDilZ0gIOKWiOKWiOKVlOKVkOKVkOKVnVxuICog4paI4paI4pWRICDilojilojilZfilojilojilZHilZrilojilojilojilojilojilojilZfilojilojilZEgIOKWiOKWiOKVl+KVmuKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKVkSAgICAg4paI4paI4pWRXG4gKiDilZrilZDilZ0gIOKVmuKVkOKVneKVmuKVkOKVnSDilZrilZDilZDilZDilZDilZDilZ3ilZrilZDilZ0gIOKVmuKVkOKVnSDilZrilZDilZDilZDilZDilZDilZ0g4pWa4pWQ4pWdICAgICDilZrilZDilZ1cbiAqIEJ5IFphbmRlciBNYXJ0aW5lYXUgJiBBc2hsZXkgTm9sYW5cbiAqIGh0dHA6Ly90cnlraWNrb2ZmLmNvbVxuICpcbiAqIFByb2plY3QgZGVwZW5kZW5jaWVzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIC0gTWl4aW5zLCBoZWxwZXJzIGFuZCBmdW5jdGlvbnNcbiAqIC0gQ29yZSB2YXJpYWJsZXNcbiAqIC0gQ1NTIHJlc2V0c1xuICogLSBUeXBvZ3JhcGh5IHN0eWxlc1xuICogLSBDb21wb25lbnRzXG4gKiAtIFBhcnRpYWxzXG4gKiAtIFZpZXdzXG4gKiAtIEdsb2JhbCBzdHlsZXNcbiAqIC0gSGVscGVyL3V0aWxpdHkgY2xhc3Nlc1xuICogLSBQcmludCBzdHlsZXNcbiAqXG4gKiBSZWFkIGFib3V0IG91ciBkaXN0aW5jdGlvbiBiZXR3ZWVuIHZpZXdzLCBwYXJ0aWFscyBhbmQgY29tcG9uZW50cyBhdFxuICogaHR0cHM6Ly90cnlraWNrb2ZmLmNvbS9sZWFybi9jc3MuaHRtbCN2aWV3cy1wYXJ0aWFscy0tY29tcG9uZW50c1xuICpcbiAqICMjIFllb21hblxuICogVGhlIFllb21hbiBnZW5lcmF0b3IgY2FuIGFsc28gYmUgdXNlZCB0byBhZGQgbmV3IHZpZXdzLCBwYXJ0aWFscyBhbmRcbiAqIGNvbXBvbmVudHMuIGUuZy4gYHlvIGtpY2tvZmY6c2Fzczpjb21wb25lbnQgZm9vYCB3aWxsIGNyZWF0ZSBhIG5ldyBmaWxlOlxuICogYHNjc3MvY29tcG9uZW50cy9fY29tcG9uZW50LnNjc3NgIGFuZCBhZGQgdGhlIGBAaW1wb3J0YCBzdGF0ZW1lbnQgaW4gdGhpc1xuICogZmlsZS4gSW5zdGFsbCB0aGUgZ2VuZXJhdG9yIGJ5IHJ1bm5pbmcgYG5wbSBpIC1nIHlvIGdlbmVyYXRvci1raWNrb2ZmYFxuICpcbiAqL1xuXG5cbi8qXG4gKiBNaXhpbnMsIGhlbHBlcnMgYW5kIGZ1bmN0aW9uc1xuICovXG5AaW1wb3J0IFwia2lja29mZi11dGlsc1wiOyAvLyBGcm9tIGdpdGh1Yi5jb20vbXJtYXJ0aW5lYXUva2lja29mZi11dGlscy5zY3NzXG5AaW1wb3J0IFwiaW5jbHVkZS1tZWRpYVwiOyAvLyBGcm9tIGluY2x1ZGUtbWVkaWEuY29tXG5cblxuLyoqXG4gKiBDb3JlIHZhcmlhYmxlc1xuICogRWRpdCB5b3VyIGNvbG9yIHBhbGV0dGUgYW5kIGFwcCB2YXJzIGJlZm9yZSB5b3VyIGJlZ2luXG4gKi9cbkBpbXBvcnQgXCJjb2xvci1wYWxldHRlXCI7XG5AaW1wb3J0IFwidmFyaWFibGVzXCI7XG5cblxuLyoqXG4gKiBDU1MgcmVzZXRzXG4gKi9cbkBpbXBvcnQgXCJyZXNldFwiO1xuXG5cbi8qKlxuICogVHlwb2dyYXBoeSBzdHlsZXNcbiAqIFNlZSBodHRwczovL3RyeWtpY2tvZmYuY29tL2RlbW9zL3R5cG9ncmFwaHkuaHRtbCBmb3IgbW9yZSBpbmZvXG4gKi9cbkBpbXBvcnQgXCJ0eXBvZ3JhcGh5XCI7XG5cblxuLyoqXG4gKiBDb21wb25lbnRzXG4gKiBTZWUgaHR0cHM6Ly90cnlraWNrb2ZmLmNvbS9kZW1vcy9jb21wb25lbnRzLmh0bWwgZm9yIG1vcmUgaW5mb1xuICpcbiAqIE5vdGU6IHBsYWNlIGFsbCAzcmQgcGFydHkgY29tcG9uZW50cyBhdCB0aGUgdG9wIG9mIHRoZSBsaXN0XG4gKi9cbkBpbXBvcnQgXCJraWNrb2ZmLWZsdWlkVmlkZW9cIjsgLy8gaHR0cHM6Ly9naXRodWIuY29tL21ybWFydGluZWF1L2tpY2tvZmYtZmx1aWRWaWRlby5jc3NcbkBpbXBvcnQgXCJraWNrb2ZmLWdyaWRcIjsgLy8gaHR0cHM6Ly9naXRodWIuY29tL1RyeUtpY2tvZmYva2lja29mZi1ncmlkLmNzcyAtIGRvY3M6IHRyeWtpY2tvZmYuY29tL2RvY3MvZ3JpZC5odG1sICYgZGVtbzogdHJ5a2lja29mZi5jb20vZGVtb3MvZ3JpZHMuaHRtbFxuQGltcG9ydCBcImNvbXBvbmVudHMvZm9ybXMvZm9ybXNcIjsgLy8gaHR0cHM6Ly90cnlraWNrb2ZmLmNvbS9kZW1vcy9mb3Jtcy5odG1sXG5AaW1wb3J0IFwiY29tcG9uZW50cy9saW5rc1wiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvYnV0dG9uc1wiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvbGlzdHNcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL2VtYmVkZGVkLWNvbnRlbnRcIjsgLy8gaW1hZ2VzIGV0Y1xuQGltcG9ydCBcImNvbXBvbmVudHMvaWNvbnNcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL3NraXAtbmF2aWdhdGlvblwiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvY29kZVwiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvdGFibGVzXCI7XG4vLyBAaW1wb3J0IFwiY29tcG9uZW50cy9zY3JvbGxiYXJzXCI7XG4vLyB5bzpzdGFydCAtLSBjb21wb25lbnRcbi8vIHlvOmVuZCAtLSBjb21wb25lbnRcblxuXG4vKipcbiAqIFBhcnRpYWxzXG4gKi9cbkBpbXBvcnQgXCJwYXJ0aWFscy9tYXN0aGVhZFwiOyAvLyBFeGFtcGxlIHBhcnRpYWwgZm9yIG1hc3RoZWFkXG5AaW1wb3J0IFwicGFydGlhbHMvZm9vdGVyXCI7IC8vIEV4YW1wbGUgcGFydGlhbCBmb3IgZm9vdGVyXG5AaW1wb3J0IFwicGFydGlhbHMvYnJvd3Nlci11cGdyYWRlXCI7IC8vIFN0eWxlcyB0byBzaG93IGFuIHVwZ3JhZGUgbWVzc2FnZSB0byB1c2VycyBvbiBvbGQgYnJvd3NlcnNcbi8vIHlvOnN0YXJ0IC0tIHBhcnRpYWxcbi8vIHlvOmVuZCAtLSBwYXJ0aWFsXG5cblxuLyoqXG4gKiBWaWV3c1xuICovXG4vL0BpbXBvcnQgXCJ2aWV3cy9ob21lXCI7XG4vL0BpbXBvcnQgXCJ2aWV3cy9jb250YWN0XCI7XG4vLyB5bzpzdGFydCAtLSB2aWV3XG4vLyB5bzplbmQgLS0gdmlld1xuXG5cbi8qKlxuICogR2xvYmFsIHN0eWxlc1xuICovXG5AaW1wb3J0IFwiZ2xvYmFsXCI7XG5cblxuLyoqXG4gKiBIZWxwZXIvdXRpbGl0eSBjbGFzc2VzXG4gKi9cbkBpbXBvcnQgXCJoZWxwZXItY2xhc3Nlc1wiO1xuXG4vKipcbiAqIFByaW50IHN0eWxlc1xuICovXG5AaW1wb3J0IFwidmlld3MvcHJpbnRcIjtcbiIsIi8qKlxuICogVXNhZ2U6XG4gKlxuICoga28tZ2V0VmFsKDEwMCwgJG1hcCkgLSB1c2VzIGFuIGludGVnZXJcbiAqIGtvLWdldFZhbChtaWQsICRtYXApIC0gdXNlcyBhIFNhc3MgbWFwXG4gKiBrby1nZXRWYWwoJGZvbywgJG1hcCkgLSB1c2VzIGEgU2FzcyB2YXJpYWJsZVxuICovXG5cbkBmdW5jdGlvbiBrby1nZXRWYWx1ZSgkdmFsLCAkbWFwOiAnJykge1xuXHRAaWYgdHlwZS1vZigkdmFsKSA9PSAnbnVtYmVyJyB7XG5cdFx0QHJldHVybiAkdmFsO1xuXHR9IEBlbHNlIGlmIHZhcmlhYmxlLWV4aXN0cygkdmFsKSB7XG5cdFx0QHJldHVybiAkdmFsO1xuXHR9IEBlbHNlIHtcblx0XHRAcmV0dXJuIG1hcC1nZXQoJG1hcCwgJHZhbCk7XG5cdH1cbn1cblxuXG4vKipcbiAqIEdldCBicmVha3BvaW50c1xuICpcbiAqIGtvLWJwKClcbiAqXG4gKiBVc2FnZTpcbiAqIGtvLWJwKDEwMCkgLSB1c2VzIGFuIGludGVnZXJcbiAqIGtvLWJwKG1pZCkgLSB1c2VzIHRoZSAkYnJlYWtwb2ludHMgU2FzcyBtYXBcbiAqIGtvLWJwKCRmb28pIC0gdXNlcyBhIFNhc3MgdmFyaWFibGVcbiAqL1xuQGZ1bmN0aW9uIGtvLWJwKCR2YWwpIHtcblx0QHJldHVybiBnZXRWYWx1ZSgkdmFsLCAkYnJlYWtwb2ludHMpO1xufVxuXG5cbi8qKlxuICogR2V0IHR5cGUgc2l6ZVxuICpcbiAqIGtvLXR5cGUoKVxuICpcbiAqIFVzYWdlOlxuICoga28tdHlwZSgxMDApIC0gdXNlcyBhbiBpbnRlZ2VyXG4gKiBrby10eXBlKG1pZCkgLSB1c2VzIHRoZSAkdHlwZSBTYXNzIG1hcFxuICoga28tdHlwZSgkZm9vKSAtIHVzZXMgYSBTYXNzIHZhcmlhYmxlXG4gKi9cbkBmdW5jdGlvbiBrby10eXBlKCR2YWwpIHtcblx0QHJldHVybiBnZXRWYWx1ZSgkdmFsLCAkdHlwZSk7XG59XG4iLCIvKipcbiAqIFVzYWdlOlxuICpcbiAkZ3JpZC1jb25maWd1cmF0aW9uOiAoXG4gICAnY29sdW1ucyc6IDEyLFxuICAgJ2xheW91dHMnOiAoXG4gICAgICdzbWFsbCc6IDgwMHB4LFxuICAgICAnbWVkaXVtJzogMTAwMHB4LFxuICAgICAnbGFyZ2UnOiAxMjAwcHgsXG4gICApLFxuICk7XG5cbiBkaXYge1xuICAgZm9udC1zaXplOiBrby1tYXAtZGVlcC1nZXQoJGdyaWQtY29uZmlndXJhdGlvbiwgJ2NvbHVtbnMnKTtcbiAgIHdpZHRoOiBrby1tYXAtZGVlcC1nZXQoJGdyaWQtY29uZmlndXJhdGlvbiwgJ2xheW91dHMnLCAnbWVkaXVtJyk7XG4gfVxuICovXG5cbkBmdW5jdGlvbiBrby1tYXAtZGVlcC1nZXQoJG1hcCwgJGtleXMuLi4pIHtcblx0QGVhY2ggJGtleSBpbiAka2V5cyB7XG5cdFx0JG1hcDogbWFwLWdldCgkbWFwLCAka2V5KTtcblxuXHRcdEBpZiBub3QgJG1hcCB7XG5cdFx0XHRAZXJyb3IgJ1RoZSB2YWx1ZSBgI3ska2V5fWAgZG9lc27igJl0IGV4aXN0IGluIHRoZSBtYXAuJztcblx0XHR9XG5cdH1cblxuXHRAcmV0dXJuICRtYXA7XG59XG4iLCIvKipcbiAqIE1vZHVsYXIgc2NhbGVcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogVXNhZ2U6IGtvLW1vZHVsYXItc2NhbGUoJGZvbnQtc2l6ZS1iYXNlLCAzLCAkdHlwZS1zY2FsZSlcbiAqIG9yIHdpdGggdGhlIHNob3J0aGFuZCB2ZXJzaW9uOiBrby1tcygzKVxuICovXG5cbi8vIFNjYWxpbmcgVmFyaWFibGVzXG4kZ29sZGVuICAgICAgICAgICA6IDEuNjE4O1xuJG1pbm9yLXNlY29uZCAgICAgOiAxLjA2NztcbiRtYWpvci1zZWNvbmQgICAgIDogMS4xMjU7XG4kbWlub3ItdGhpcmQgICAgICA6IDEuMjtcbiRtYWpvci10aGlyZCAgICAgIDogMS4yNTtcbiRwZXJmZWN0LWZvdXJ0aCAgIDogMS4zMzM7XG4kYXVnbWVudGVkLWZvdXJ0aCA6IDEuNDE0O1xuJHBlcmZlY3QtZmlmdGggICAgOiAxLjU7XG4kbWlub3Itc2l4dGggICAgICA6IDEuNjtcbiRtYWpvci1zaXh0aCAgICAgIDogMS42Njc7XG4kbWlub3Itc2V2ZW50aCAgICA6IDEuNzc4O1xuJG1ham9yLXNldmVudGggICAgOiAxLjg3NTtcbiRvY3RhdmUgICAgICAgICAgIDogMjtcbiRtYWpvci10ZW50aCAgICAgIDogMi41O1xuJG1ham9yLWVsZXZlbnRoICAgOiAyLjY2NztcbiRtYWpvci10d2VsZnRoICAgIDogMztcbiRkb3VibGUtb2N0YXZlICAgIDogNDtcblxuXG5AZnVuY3Rpb24ga28tbW9kdWxhci1zY2FsZSgkdmFsdWUsICRpbmNyZW1lbnQsICRyYXRpbykge1xuICAkdjE6IG50aCgkdmFsdWUsIDEpO1xuICAkdjI6IG50aCgkdmFsdWUsIGxlbmd0aCgkdmFsdWUpKTtcbiAgJHZhbHVlOiAkdjE7XG5cbiAgLy8gc2NhbGUgJHYyIHRvIGp1c3QgYWJvdmUgJHYxXG4gIEB3aGlsZSAkdjIgPiAkdjEge1xuICAgICR2MjogKCR2MiAvICRyYXRpbyk7IC8vIHdpbGwgYmUgb2ZmLWJ5LTFcbiAgfVxuICBAd2hpbGUgJHYyIDwgJHYxIHtcbiAgICAkdjI6ICgkdjIgKiAkcmF0aW8pOyAvLyB3aWxsIGZpeCBvZmYtYnktMVxuICB9XG5cbiAgLy8gY2hlY2sgQUZURVIgc2NhbGluZyAkdjIgdG8gcHJldmVudCBkb3VibGUtY291bnRpbmcgY29ybmVyLWNhc2VcbiAgJGRvdWJsZS1zdHJhbmRlZDogJHYyID4gJHYxO1xuXG4gIEBpZiAkaW5jcmVtZW50ID4gMCB7XG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkaW5jcmVtZW50IHtcbiAgICAgIEBpZiAkZG91YmxlLXN0cmFuZGVkIGFuZCAoJHYxICogJHJhdGlvKSA+ICR2MiB7XG4gICAgICAgICR2YWx1ZTogJHYyO1xuICAgICAgICAkdjI6ICgkdjIgKiAkcmF0aW8pO1xuICAgICAgfSBAZWxzZSB7XG4gICAgICAgICR2MTogKCR2MSAqICRyYXRpbyk7XG4gICAgICAgICR2YWx1ZTogJHYxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiAkaW5jcmVtZW50IDwgMCB7XG4gICAgLy8gYWRqdXN0ICR2MiB0byBqdXN0IGJlbG93ICR2MVxuICAgIEBpZiAkZG91YmxlLXN0cmFuZGVkIHtcbiAgICAgICR2MjogKCR2MiAvICRyYXRpbyk7XG4gICAgfVxuXG4gICAgQGZvciAkaSBmcm9tICRpbmNyZW1lbnQgdGhyb3VnaCAtMSB7XG4gICAgICBAaWYgJGRvdWJsZS1zdHJhbmRlZCBhbmQgKCR2MSAvICRyYXRpbykgPCAkdjIge1xuICAgICAgICAkdmFsdWU6ICR2MjtcbiAgICAgICAgJHYyOiAoJHYyIC8gJHJhdGlvKTtcbiAgICAgIH0gQGVsc2Uge1xuICAgICAgICAkdjE6ICgkdjEgLyAkcmF0aW8pO1xuICAgICAgICAkdmFsdWU6ICR2MTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZTtcbn1cblxuLyoqXG4gKiBTaG9ydGhhbmQgbW9kdWxhciBzY2FsZVxuICogVXNlcyB0aGUgJGZvbnQtc2l6ZS1iYXNlIGFuZCAkdHlwZS1zY2FsZSBmcmFtZXdvcmsgdmFyaWFibGVzIHNvIHRoYXQgeW91XG4gKiBvbmx5IG5lZWQgdG8gcHJvdmlkZSB0aGUgc2NhbGUgaW5jcmVtZW50XG4gKlxuICogZS5nLiBrby1tcyg1KVxuICovXG5AZnVuY3Rpb24ga28tbXMoJGluY3JlbWVudCkge1xuXHRAcmV0dXJuIGtvLW1vZHVsYXItc2NhbGUoJGZvbnQtc2l6ZS1iYXNlLCAkaW5jcmVtZW50LCAkdHlwZS1zY2FsZSk7XG59XG4iLCIvKipcbiAqIE11bHRpcGx5XG4gKiA9PT09PT09PT09PT09PT09PVxuICogTXVsdGlwbHkgYW55IHZhbHVlXG4gKlxuICogVXNhZ2U6XG4gKiBrby1tdWx0aXBseSgxNSwgMilcbiAqIGtvLW11bHRpcGx5KCRiYXNlbGluZSwgMS41KVxuICovXG5AZnVuY3Rpb24ga28tbXVsdGlwbHkoJGluaXRpYWwsICRtdWx0aXBseSkge1xuXHRAcmV0dXJuICRtdWx0aXBseSAqICRpbml0aWFsO1xufVxuIiwiLyoqXG4gKiBTYXNzIE1peGluc1xuICogLSBSZXNwb25zaXZlXG4gKiAtIERpbWVuc2lvbnNcbiAqIC0gUG9zaXRpb25pbmdcbiAqIC0gVXRpbGl0eVxuICogLSBGb3Jtc1xuICogLSBNb2R1bGUgTmFtaW5nIEhlbHBlcnNcbiAqL1xuXG4vLyBSZXNwb25zaXZlIG1peGluc1xuQGltcG9ydCBcInJlc3BvbnNpdmVcIjtcbkBpbXBvcnQgXCJoaWRwaVwiO1xuXG4vLyBTaXppbmcgbWl4aW5zXG4vLyBGb250LXNpemluZywgUkVNIG1peGlucyBhbmQgb3RoZXIgc2l6aW5nIG1peGluc1xuQGltcG9ydCBcInVuaXRzXCI7XG5cbi8vIFBvc2l0aW9uaW5nIG1peGluc1xuQGltcG9ydCBcInBvc2l0aW9uXCI7XG5AaW1wb3J0IFwidmVydGljYWwtY2VudGVyXCI7XG5cbi8vIFV0aWxpdHkgbWl4aW5zIC0gQ2xlYXJmaXggYW5kIG90aGVyIGhlbHBlcnNcbkBpbXBvcnQgXCJ1dGlsaXR5XCI7XG5cbi8vIE1vZHVsZSBuYW1pbmcgaGVscGVyc1xuQGltcG9ydCBcIm1vZHVsZS1uYW1pbmctaGVscGVyc1wiO1xuIiwiLyoqXG4gKiBSZXNwb25zaXZlIG1lZGlhIHF1ZXJ5IG1peGluc1xuICogLSBUaGVzZSBhcmUgdXNlZCBzbyB0aGF0IHdlIGNhbiBkZWZpbmUgc2VwYXJhdGUgbWVkaWEtcXVlcnkgY29udGVudFxuICogLSBBcmd1bWVudHMgY2FuIHVzZTpcbiAqICAgLSBhIG5hbWVkIGJyZWFrcG9pbnQgaW4gdGhlICRicmVha3BvaW50cyBtYXAsIGUuZy4gbWlkXG4gKiAgIC0gYSBwaXhlbCB2YWx1ZSBlLmcuIDUwMHB4XG4gKiAgIC0gYSB1bml0bGVzcyB2YWx1ZSB0aGF0IGlzIGVxaXZhbGVudCB0byBhIHBpeGVsIGUuZy4gNTAwXG4gKi9cblxuLy8gJG1xLWJhc2UgdmFyaWFibGU6XG4vL1xuLy8gVGhpcyBpcyBuZWVkZWQgYmVjYXVzZSBicm93c2VycyBkbyBub3QgY2FsY3VsYXRlIGVtLWJhc2VkXG4vLyBtZWRpYSBxdWVyaWVzIGNvcnJlY3RseS4gSXQgaXMgc2V0IHRvIDE2IGJlY2F1c2Ugd2UgdGhpbmtcbi8vIHRoZSBtYWpvcml0eSBvZiB1c2VycyB3aWxsIGhhdmUgdGhlaXIgYnJvd3NlciBzZXQgdG8gMTAwJVxuLy8gem9vbSBsZXZlbC5cbi8vXG4vLyBTZWUgYmVsb3cgZm9yIGFuIGV4cGxhbmF0aW9uOlxuLy8gaHR0cDovL3d3dy5maWxhbWVudGdyb3VwLmNvbS9sYWIvaG93LXdlLWxlYXJuZWQtdG8tbGVhdmUtYm9keS1mb250LXNpemUtYWxvbmUuaHRtbFxuJG1xLWJhc2U6IDE2O1xuXG5cbi8qKlxuICogTWluLXdpZHRoIG1lZGlhIHF1ZXJ5OlxuICogLSBFcXVpdmFsZW50IHRvOiBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAyMGVtKSB7IC4uLiB9XG4gKiAtIFVzYWdlOiBAaW5jbHVkZSBrby1yZXNwb25kLW1pbihtaWQpIHsgLi4uIH07XG4gKi9cbkBtaXhpbiBrby1yZXNwb25kLW1pbigkd2lkdGgpIHtcblx0JHdpZHRoLWVtOiBrby1lbShrby1zdHJpcC11bml0cyhrby1icCgkd2lkdGgpKSwgJG1xLWJhc2UpO1xuXG5cdEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR3aWR0aC1lbSkge1xuXHRcdEBjb250ZW50O1xuXHR9XG59XG5cblxuLyoqXG4gKiBNYXgtd2lkdGggbWVkaWEgcXVlcnk6XG4gKiAtIEVxdWl2YWxlbnQgdG86IEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDIwZW0pIHsgLi4uIH1cbiAqIC0gVXNhZ2U6IEBpbmNsdWRlIGtvLXJlc3BvbmQtbWF4KG1pZCkgeyAuLi4gfTtcbiAqL1xuQG1peGluIGtvLXJlc3BvbmQtbWF4KCR3aWR0aCkge1xuXHQkd2lkdGgtZW06IGtvLWVtKGtvLXN0cmlwLXVuaXRzKGtvLWJwKCR3aWR0aCkpLCAkbXEtYmFzZSk7XG5cblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHdpZHRoLWVtKSB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cblxuXG4vKipcbiAqIE1pbi1tYXgtd2lkdGggbWVkaWEgcXVlcnk6XG4gKiAtIEVxdWl2YWxlbnQgdG86IEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwZW0pIGFuZCAobWF4LXdpZHRoOiAyMGVtKSB7IC4uLiB9XG4gKiAtIFVzYWdlOiBAaW5jbHVkZSBrby1yZXNwb25kLW1pbi1tYXgobmFycm93LCA2MDApIHsgLi4uIH07XG4gKi9cbkBtaXhpbiBrby1yZXNwb25kLW1pbi1tYXgoJG1pbi13aWR0aCwgJG1heC13aWR0aCkge1xuXHQkbWluLXdpZHRoLWVtOiBrby1lbShrby1zdHJpcC11bml0cyhrby1icCgkbWluLXdpZHRoKSksICRtcS1iYXNlKTtcblx0JG1heC13aWR0aC1lbToga28tZW0oa28tc3RyaXAtdW5pdHMoa28tYnAoJG1heC13aWR0aCkpLCAkbXEtYmFzZSk7XG5cblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJG1pbi13aWR0aC1lbSkgYW5kIChtYXgtd2lkdGg6ICRtYXgtd2lkdGgtZW0pIHtcblx0XHRAY29udGVudDtcblx0fVxufVxuIiwiLyoqXG4gKiAgSGlEUEkgbWl4aW4uXG4gKiAgQGluY2x1ZGUga28taGlkcGkgeyAuLi4gfTtcbiAqICBEZWZhdWx0IHZhbHVlIHNldCB0byAxLjMgdG8gdGFyZ2V0IEdvb2dsZSBOZXh1cyA3IChodHRwOi8vYmphbmdvLmNvbS9hcnRpY2xlcy9taW4tZGV2aWNlLXBpeGVsLXJhdGlvLylcbiAqL1xuQG1peGluIGtvLWhpZHBpKCRyYXRpbzogMS4yNSkge1xuXHRAbWVkaWEgcHJpbnQsXG5cdFx0KC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogJHJhdGlvKSxcblx0XHQobWluLXJlc29sdXRpb246ICN7JHJhdGlvfWRwcHgpLFxuXHRcdChtaW4tcmVzb2x1dGlvbjogI3skcmF0aW8qOTZ9ZHBpKSB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cblxuXG4vKipcbiAqIEhpZHBpIHdpdGggYSBtaW5pbXVtIHdpZHRoIG1lZGlhIHF1ZXJ5XG4gKiBAaW5jbHVkZSBrby1oaWRwaS1taW4oYnAobWlkKSwgMS41KSB7IC4uLiB9O1xuICovXG5AbWl4aW4ga28taGlkcGktbWluKCR3aWR0aCwgJHJhdGlvOiAxLjI1KSB7XG5cdCR3aWR0aC1lbToga28tZW0oa28tc3RyaXAtdW5pdHMoa28tYnAoJHdpZHRoKSksICRtcS1iYXNlKTtcblxuXHRAbWVkaWEgcHJpbnQsXG5cdFx0c2NyZWVuIGFuZCAobWluLXdpZHRoOiAkd2lkdGgtZW0pIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAkcmF0aW8pLFxuXHRcdHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHdpZHRoLWVtKSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAjeyRyYXRpb31kcHB4KSxcblx0XHRzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR3aWR0aC1lbSkgYW5kIChtaW4tcmVzb2x1dGlvbjogI3skcmF0aW8qOTZ9ZHBpKSB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cblxuXG4vKipcbiAqIEhpZHBpIHdpdGggYSBtYXggd2lkdGggbWVkaWEgcXVlcnlcbiAqIEBpbmNsdWRlIGtvLWhpZHBpLW1heChicChtaWQpLCAxLjMpIHsgLi4uIH07XG4gKi9cbkBtaXhpbiBrby1oaWRwaS1tYXgoJHdpZHRoLCAkcmF0aW86IDEuMjUpIHtcblx0JHdpZHRoLWVtOiBrby1lbShrby1zdHJpcC11bml0cyhrby1icCgkd2lkdGgpKSwgJG1xLWJhc2UpO1xuXG5cdEBtZWRpYSBwcmludCxcblx0XHRzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICR3aWR0aC1lbSkgYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86ICRyYXRpbyksXG5cdFx0c2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkd2lkdGgtZW0pIGFuZCAobWluLXJlc29sdXRpb246ICN7JHJhdGlvfWRwcHgpLFxuXHRcdHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHdpZHRoLWVtKSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAjeyRyYXRpbyo5Nn1kcGkpIHtcblx0XHRAY29udGVudDtcblx0fVxufVxuIiwiLy8vIEBncm91cCB1bml0c1xuLyoqXG4gKiBEaW1lbnNpb25zLWJhc2VkIG1peGluc1xuICogLSBSRU0gY2FsY3VsYXRpb25cbiAqIC0gVHlwb2dyYXBoeSBtaXhpbnMgYmFzZWQgb24gdGhlIFJFTSBtaXhpblxuICogICAtIGZvbnQtc2l6ZVxuICogICAtIGxpbmUtaGVpZ2h0XG4gKiAgIC0gZm9udC1zaXplLWVtc1xuICovXG5cbi8vIFJFTVxuLy8gQGluY2x1ZGUga28tcmVtKG1hcmdpbiwgJGZvbnQtc2l6ZS1iYXNlKTtcbkBtaXhpbiBrby1yZW0oJHByb3BlcnR5LCAkc2l6ZVZhbHVlOiAkZm9udC1zaXplLWJhc2UpIHtcblx0JHJlbVZhbHVlOiAoa28tc3RyaXAtdW5pdHMoJHNpemVWYWx1ZSkgLyAkZm9udC1zaXplLWJhc2UpO1xuXHQvLyAjeyRwcm9wZXJ0eX06IGNlaWwoJHNpemVWYWx1ZSkgKyBweDtcblx0I3skcHJvcGVydHl9OiAjeyRyZW1WYWx1ZX1yZW07XG59XG5cblxuLyoqXG4gKiBUeXBvZ3JhcGh5IG1peGluc1xuICovXG5cbi8vIFJFTSBmb250IHNpemVcbi8vIEBpbmNsdWRlIGtvLWZvbnQtc2l6ZSgxNik7XG4vLyBAaW5jbHVkZSBrby1mb250LXNpemUobGFyZ2UpO1xuLy8gQGluY2x1ZGUga28tZm9udC1zaXplKCR0eXBlLWp1bWJvKTtcbkBtaXhpbiBrby1mb250LXNpemUoJHNpemVWYWx1ZTogJGZvbnQtc2l6ZS1iYXNlKSB7XG5cdCR0eXBlOiAoKSAhZGVmYXVsdDtcblx0Ly8gQGRlYnVnICRzaXplVmFsdWU7XG5cdEBpbmNsdWRlIGtvLXJlbShmb250LXNpemUsIGtvLWdldFZhbHVlKCRzaXplVmFsdWUsICR0eXBlKSk7XG59XG5cblxuLy8gUkVNIGxpbmUgaGVpZ2h0XG4vLyBAaW5jbHVkZSBrby1saW5lLWhlaWdodCgxNik7XG5AbWl4aW4ga28tbGluZS1oZWlnaHQoJHNpemVWYWx1ZTogJGxpbmUtaGVpZ2h0LWJhc2UpIHtcblx0QGluY2x1ZGUga28tcmVtKGxpbmUtaGVpZ2h0LCAkc2l6ZVZhbHVlKTtcbn1cblxuXG4vLyBFTSBmb250IHNpemVcbi8vIEBpbmNsdWRlIGtvLWZvbnQtc2l6ZS1lbXMoMjAsIDE2KTtcbkBtaXhpbiBrby1mb250LXNpemUtZW1zKCR0YXJnZXQtcHgtc2l6ZSwgJGNvbnRleHQtcHgtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlKSB7XG5cdGZvbnQtc2l6ZTogKCR0YXJnZXQtcHgtc2l6ZSAvICRjb250ZXh0LXB4LXNpemUpICogMWVtO1xufVxuIiwiLyoqXG4gKiBrby1wb3NpdGlvblxuICogVXNhZ2U6XG4gKiBAaW5jbHVkZSBrby1wb3NpdGlvbihhYnNvbHV0ZSwgMTBweCAyMHB4IDMwcHggMTBweCk7XG4gKi9cbkBtaXhpbiBrby1wb3NpdGlvbiAoJHBvc2l0aW9uOiByZWxhdGl2ZSwgJGNvb3JkaW5hdGVzOiAwIDAgMCAwKSB7XG5cblx0QGlmIHR5cGUtb2YoJHBvc2l0aW9uKSA9PSBsaXN0IHtcblx0XHQkY29vcmRpbmF0ZXM6ICRwb3NpdGlvbjtcblx0XHQkcG9zaXRpb246IHJlbGF0aXZlO1xuXHR9XG5cblx0JHRvcDogbnRoKCRjb29yZGluYXRlcywgMSk7XG5cdCRyaWdodDogbnRoKCRjb29yZGluYXRlcywgMik7XG5cdCRib3R0b206IG50aCgkY29vcmRpbmF0ZXMsIDMpO1xuXHQkbGVmdDogbnRoKCRjb29yZGluYXRlcywgNCk7XG5cblx0cG9zaXRpb246ICRwb3NpdGlvbjtcblxuXHRAaWYgJHRvcCA9PSBhdXRvIHtcblx0XHR0b3A6ICR0b3A7XG5cdH0gQGVsc2UgaWYgbm90KHVuaXRsZXNzKCR0b3ApKSB7XG5cdFx0dG9wOiAkdG9wO1xuXHR9XG5cblx0QGlmICRyaWdodCA9PSBhdXRvIHtcblx0XHRyaWdodDogJHJpZ2h0O1xuXHR9IEBlbHNlIGlmIG5vdCh1bml0bGVzcygkcmlnaHQpKSB7XG5cdFx0cmlnaHQ6ICRyaWdodDtcblx0fVxuXG5cdEBpZiAkYm90dG9tID09IGF1dG8ge1xuXHRcdGJvdHRvbTogJGJvdHRvbTtcblx0fSBAZWxzZSBpZiBub3QodW5pdGxlc3MoJGJvdHRvbSkpIHtcblx0XHRib3R0b206ICRib3R0b207XG5cdH1cblxuXHRAaWYgJGxlZnQgPT0gYXV0byB7XG5cdFx0bGVmdDogJGxlZnQ7XG5cdH0gQGVsc2UgaWYgbm90KHVuaXRsZXNzKCRsZWZ0KSkge1xuXHRcdGxlZnQ6ICRsZWZ0O1xuXHR9XG59XG4iLCIvKipcbiAqIHZlcnRpY2FsLWNlbnRlclxuICogVmVydGljYWxseSBjZW50ZXIgYW55IGVsZW1lbnQuIE5lZWRzIHN1cHBvcnQgZm9yIENTUyB0cmFuZm9ybXMuXG4gKiBVc2FnZTpcbiAqIEBpbmNsdWRlIGtvLXZlcnRpY2FsLWNlbnRlcjtcbiAqL1xuQG1peGluIGtvLXZlcnRpY2FsLWNlbnRlciB7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0dG9wOiA1MCU7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cbiIsIi8qKlxuICogVXRpbGl0eSBNaXhpbnNcbiAqIC0gY2xlYXJmaXhcbiAqIC0gZm9udC1mYWNlXG4gKiAtXG4gKiAtIHNpemluZyBzaG9ydGN1dHNcbiAqICAgLSBzaXplXG4gKiAgIC0gc3F1YXJlXG4gKiAtIHJlc2l6YWJsZVxuICovXG5cbi8vIENsZWFyZml4XG4vLyBodHRwOi8vd3d3LmNzc21vam8uY29tL2xhdGVzdF9uZXdfY2xlYXJmaXhfc29fZmFyL1xuLy8gT3RoZXIga28tY2xlYXJmaXggb3B0aW9uczogaHR0cHM6Ly9naXRodWIuY29tL3N0dWJib3JuZWxsYS9vb2Nzcy9ibG9iL21hc3Rlci9vb2Nzcy9zcmMvY29tcG9uZW50cy91dGlscy9fY2xlYXJmaXgtbWUuc2Nzc1xuQG1peGluIGtvLWNsZWFyZml4IHtcblx0JjphZnRlciB7XG5cdFx0Y29udGVudDogXCJcIjtcblx0XHRkaXNwbGF5OiB0YWJsZTtcblx0XHRjbGVhcjogYm90aDtcblx0fVxufVxuXG5cblxuLy8gQGZvbnQtZmFjZVxuLy8gQGluY2x1ZGUga28tZm9udC1mYWNlKHByb3hpbWEtbm92YSwgL2Nzcy9mb250cy9wcm94aW1hLW5vdmEsIG5vcm1hbCwgaXRhbGljLCBmYWxzZSk7XG5AbWl4aW4ga28tZm9udC1mYWNlKCRmYW1pbHktbmFtZSwgJGZvbnQtcGF0aCwgJGZvbnQtd2VpZ2h0OiBub3JtYWwsICRmb250LXN0eWxlOiBub3JtYWwpIHtcblx0QGZvbnQtZmFjZSB7XG5cdFx0Zm9udC1mYW1pbHk6ICRmYW1pbHktbmFtZTtcblx0XHRzcmM6IHVybCgnI3skZm9udC1wYXRofS5lb3QnKTtcblx0XHRzcmM6IHVybCgnI3skZm9udC1wYXRofS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuXHRcdFx0dXJsKCcjeyRmb250LXBhdGh9LndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcblx0XHRcdHVybCgnI3skZm9udC1wYXRofS50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG5cdFx0XHR1cmwoJyN7JGZvbnQtcGF0aH0uc3ZnIyN7JGZhbWlseS1uYW1lfScpIGZvcm1hdCgnc3ZnJyk7XG5cdFx0Zm9udC13ZWlnaHQ6ICRmb250LXdlaWdodDtcblx0XHRmb250LXN0eWxlOiAkZm9udC1zdHlsZTtcblx0fVxufVxuXG4vLyBDZW50cmUtYWxpZ24gYSBibG9jayBsZXZlbCBlbGVtZW50XG4vLyBAaW5jbHVkZSBrby1jZW50ZXItYmxvY2tcbkBtaXhpbiBrby1jZW50ZXItYmxvY2soKSB7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRtYXJnaW46IDAgYXV0bztcbn1cblxuLy8gSW5wdXQgcGxhY2Vob2xkZXIgdGV4dFxuQG1peGluIGtvLXBsYWNlaG9sZGVyKCRjb2xvcjogbGlnaHRlbigjMDAwLCA3MCUpKSB7XG5cdDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAkY29sb3I7XG5cdH1cblxuXHQ6LW1vei1wbGFjZWhvbGRlciB7XG5cdFx0Y29sb3I6ICRjb2xvcjtcblx0fVxuXG5cdDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG5cdFx0Y29sb3I6ICRjb2xvcjtcblx0fVxufVxuXG4vLyBUZXh0IHNlbGVjdGlvblxuQG1peGluIGtvLXRleHQtc2VsZWN0aW9uKCRjb2xvci1zZWxlY3Rpb24sICRjb2xvci1zZWxlY3Rpb24tYmcpIHtcblx0OjotbW96LXNlbGVjdGlvbiB7XG5cdFx0Y29sb3I6ICRjb2xvci1zZWxlY3Rpb247XG5cdFx0YmFja2dyb3VuZDogJGNvbG9yLXNlbGVjdGlvbi1iZztcblx0XHR0ZXh0LXNoYWRvdzogbm9uZTtcblx0fVxuXG5cdDo6c2VsZWN0aW9uIHtcblx0XHRjb2xvcjogJGNvbG9yLXNlbGVjdGlvbjtcblx0XHRiYWNrZ3JvdW5kOiAkY29sb3Itc2VsZWN0aW9uLWJnO1xuXHRcdHRleHQtc2hhZG93OiBub25lO1xuXHR9XG59XG5cbi8vIFZlcnRpY2FsIGFsaWduXG4vLyBAaW5jbHVkZSBrby12ZXJ0aWNhbC1hbGlnbig1MHB4KTtcbkBtaXhpbiBrby12ZXJ0aWNhbC1hbGlnbigkYXJndW1lbnQpIHtcblx0bGluZS1oZWlnaHQ6ICRhcmd1bWVudDtcblx0aGVpZ2h0OiAkYXJndW1lbnQ7XG59XG5cbi8vIFRleHQgdHJ1bmNhdGlvblxuLy8gQGluY2x1ZGUga28tdHJ1bmNhdGUoMzAwcHgpO1xuLy8gQGluY2x1ZGUga28tdHJ1bmNhdGUoMTAwJSk7XG5AbWl4aW4ga28tdHJ1bmNhdGUoJHRydW5jYXRpb24tYm91bmRhcnkpIHtcblx0bWF4LXdpZHRoOiAkdHJ1bmNhdGlvbi1ib3VuZGFyeTtcblx0QGluY2x1ZGUga28tdGV4dC1vdmVyZmxvdygpO1xufVxuXG4vLyBUZXh0IG92ZXJmbG93XG4vLyBAaW5jbHVkZSBrby10ZXh0LW92ZXJmbG93KCk7XG4vLyBSZXF1aXJlcyBpbmxpbmUtYmxvY2sgb3IgYmxvY2sgZm9yIHByb3BlciBzdHlsaW5nXG5AbWl4aW4ga28tdGV4dC1vdmVyZmxvdyB7XG5cdG92ZXJmbG93OiBoaWRkZW47XG5cdHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG5cbi8qKlxuICogU2l6aW5nIHNob3J0Y3V0c1xuICovXG5cbi8vIEBpbmNsdWRlIGtvLXNpemUoMTBweCwgMzBweCk7XG5AbWl4aW4ga28tc2l6ZSgkd2lkdGg6IDVweCwgJGhlaWdodDogNXB4KSB7XG5cdGhlaWdodDogJGhlaWdodDtcblx0d2lkdGg6ICR3aWR0aDtcbn1cblxuXG4vLyBAaW5jbHVkZSBrby1zcXVhcmUoNTBweCk7XG5AbWl4aW4ga28tc3F1YXJlKCRzaXplOiA1cHgpIHtcblx0QGluY2x1ZGUga28tc2l6ZSgkc2l6ZSwgJHNpemUpO1xufVxuXG5cbi8vIE1ha2UgYW55IGVsZW1lbnQgcmVzaXphYmxlIGZvciBwcm90b3R5cGluZ1xuLy8gQGluY2x1ZGUga28tcmVzaXphYmxlKCk7XG5AbWl4aW4ga28tcmVzaXphYmxlKCRkaXJlY3Rpb246IGJvdGgpIHtcblx0cmVzaXplOiAkZGlyZWN0aW9uOyAvLyBPcHRpb25zIGFyZSBob3Jpem9udGFsLCB2ZXJ0aWNhbCwgYm90aFxuXHRvdmVyZmxvdzogYXV0bzsgLy8gU2FmYXJpIGZpeFxufVxuXG4iLCIvKipcbiAqIGJlbWlmeSBbbW9kaWZpZWQgZm9yIEtpY2tvZmZdXG4gKiBodHRwczovL2d0aWh1Yi5jb20vZnJhbnpoZWlkbC9iZW1pZnlcbiAqIEZyYW56IEhlaWRsIDIwMTVcbiAqXG4gKiBVc2FnZTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vbXJtYXJ0aW5lYXUvMGNkMjAxMGJmMjY1ZDcxMmJhZmJcbiAqL1xuXG5cblxuLy8gQ09ORklHXG4vLyA9PT09PT1cblxuLy8gT3V0cHV0IGNvbWJpbmVkIHN0YXRlIHNlbGVjdG9ycyBsaWtlOlxuLy8gICAgLmJsb2NrLWVsZW1lbnQuaXMtYWN0aXZlIHt9XG4vLyBTZXQgdG8gZmFsc2UgdG8gb3V0cHV0IHNpbmdsZSwgbm9uLWNvbWJpbmVkIHN0YXRlIG1vZGlmaWVyczpcbi8vICAgIC5ibG9jay1lbGVtZW50LS1pcy1hY3RpdmUge31cbiRjb21iaW5lZC1zdGF0ZS1zZWxlY3RvcnM6IHRydWU7XG5cbi8vIC5ibG9ja1tzZXBhcmF0b3JdZWxlbWVudDpcbiRlbGVtZW50LXNlcGFyYXRvcjogXCItXCI7XG5cbi8vIC5ibG9ja1tzZXBhcmF0b3JdbW9kaWZpZXI6XG4kbW9kaWZpZXItc2VwYXJhdG9yOiBcIi0tXCI7XG5cbi8vIFRoZSBkZWZhdWx0IHByZWZpeCBmb3Igc3RhdGUgbW9kaWZpZXIgc2VsZWN0b3JzLCB3aWxsIGJlIGNvbWJpbmVkIHdpdGggJG1vZGlmaWVyLXNlcGFyYXRvcjpcbiRzdGF0ZS1wcmVmaXg6IFwiaXNcIjtcblxuXG5cblxuLy8gTWl4aW5zXG4vLyBAaW5jbHVkZSBrby1ibG9jaygnZm9ybScpIHt9XG5AbWl4aW4ga28tYmxvY2soJG5hbWUpIHtcblx0LiN7JG5hbWV9IHtcblx0XHRAY29udGVudDtcblx0fVxufVxuXG4vLyBAaW5jbHVkZSBrby1lbGVtZW50KCdpdGVtJykge31cbkBtaXhpbiBrby1lbGVtZW50KCRuYW1lKSB7XG5cdEBhdC1yb290IHtcblx0XHQmI3skZWxlbWVudC1zZXBhcmF0b3J9I3skbmFtZX0ge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9XG59XG5cbi8vIEBpbmNsdWRlIGtvLW1vZGlmaWVyKCdzdGFja2VkJykge31cbkBtaXhpbiBrby1tb2RpZmllcigkbmFtZSkge1xuXHRAYXQtcm9vdCB7XG5cdFx0JiN7JG1vZGlmaWVyLXNlcGFyYXRvcn0jeyRuYW1lfSB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH1cbn1cblxuLy8gQGluY2x1ZGUga28tc3RhdGUoJ2FjdGl2ZScpIHt9XG4vLyBAaW5jbHVkZSBrby1zdGF0ZSgnbmF2JywgJ2hhcycpIHt9XG5AbWl4aW4ga28tc3RhdGUoJHN0YXRlLCAkcHJlZml4OiAkc3RhdGUtcHJlZml4KSB7XG5cdEBpZiAkY29tYmluZWQtc3RhdGUtc2VsZWN0b3JzID09IHRydWUge1xuXHRcdEBhdC1yb290IHtcblx0XHRcdCYuI3skcHJlZml4fS0jeyRzdGF0ZX0ge1xuXHRcdFx0XHRAY29udGVudDtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0QGVsc2Uge1xuXHRcdEBhdC1yb290IHtcblx0XHRcdCYjeyRtb2RpZmllci1zZXBhcmF0b3J9I3skcHJlZml4fS0jeyRzdGF0ZX0ge1xuXHRcdFx0XHRAY29udGVudDtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cblxuXG5cblxuLy8gQWxpYXNlc1xuLy8gQGluY2x1ZGUga28tY29tcG9uZW50KCdmb3JtJykge31cbkBtaXhpbiBrby1jb21wb25lbnQoJG5hbWUpIHtcblx0QGluY2x1ZGUga28tYmxvY2soJG5hbWUpIHtcblx0XHRAY29udGVudDtcblx0fVxufVxuXG4vLyBAaW5jbHVkZSBrby1jaGlsZCgnaXRlbScpIHt9XG5AbWl4aW4ga28tY2hpbGQoJG5hbWUpIHtcblx0QGluY2x1ZGUga28tZWxlbWVudCgkbmFtZSkge1xuXHRcdEBjb250ZW50O1xuXHR9XG59XG5cbi8vIEBpbmNsdWRlIGtvLXN1YmNvbXBvbmVudCgnaXRlbScpIHt9XG5AbWl4aW4ga28tc3ViY29tcG9uZW50KCRuYW1lKSB7XG5cdEBpbmNsdWRlIGtvLWVsZW1lbnQoJG5hbWUpIHtcblx0XHRAY29udGVudDtcblx0fVxufVxuXG4vLyBAaW5jbHVkZSBrby1zdWIoJ2l0ZW0nKSB7fVxuQG1peGluIGtvLXN1YigkbmFtZSkge1xuXHRAaW5jbHVkZSBrby1lbGVtZW50KCRuYW1lKSB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cbiIsIi8qKlxuICogR2xvYmFsIGNvbG9yIHBhbGV0dGVcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogLSBHZW5lcmljIGNvbG9yc1xuICogLSBDb2xvciBzY2hlbWVcbiAqIC0gQ29tbW9uIGNvbG9yc1xuICogLSBMaW5rc1xuICogLSBUZXh0IHNlbGVjdGlvblxuICogLSA8aHI+XG4gKiAtIEFueSBvdGhlcnMuLlxuICovXG5cbi8vIEdlbmVyaWMgY29sb3JzXG4kYmx1ZSAgICAgICAgICAgICAgICAgICAgICAgICA6ICMyODhhZDY7XG4kZ3JlZW4gICAgICAgICAgICAgICAgICAgICAgICA6ICMxNmM5OGQ7XG4kcmVkICAgICAgICAgICAgICAgICAgICAgICAgICA6ICNmYTVlNWI7XG4keWVsbG93ICAgICAgICAgICAgICAgICAgICAgICA6ICNmZWVmNmQ7XG4kb3JhbmdlICAgICAgICAgICAgICAgICAgICAgICA6ICNmZTdjMDg7XG4kcGluayAgICAgICAgICAgICAgICAgICAgICAgICA6ICNmZjcwOGU7XG4kcHVycGxlICAgICAgICAgICAgICAgICAgICAgICA6ICM4ZTQ0YWQ7XG4kZ3JheSAgICAgICAgICAgICAgICAgICAgICAgICA6ICM5NWE1YTY7XG5cbiRkYXJrICAgICAgICAgICAgICAgICAgICAgICAgIDogIzAwMDtcbiRicmlnaHQgICAgICAgICAgICAgICAgICAgICAgIDogI2ZmZjtcblxuJGNvbG9yLWtpY2tvZmYtYmx1ZSAgICAgICAgICAgOiAjMTgxODMwO1xuJGNvbG9yLWtpY2tvZmYtb3JhbmdlICAgICAgICAgOiAjZmU3YzA4O1xuXG4vLyBDb2xvciBTY2hlbWVcbiRjb2xvci1wcmltYXJ5ICAgICAgICAgICAgICAgIDogIzE4MTgzMDtcbiRjb2xvci1zZWNvbmRhcnkgICAgICAgICAgICAgIDogJG9yYW5nZTtcbiRjb2xvci1oaWdobGlnaHQgICAgICAgICAgICAgIDogJGJsdWU7XG5cbi8vIENvbW1vbiBjb2xvcnNcbiRjb2xvci10ZXh0ICAgICAgICAgICAgICAgICAgIDogIzQ0NDtcbiRjb2xvci1iZyAgICAgICAgICAgICAgICAgICAgIDogI2YxZjFmMTtcbiRjb2xvci1ib3JkZXIgICAgICAgICAgICAgICAgIDogI2RkZDtcblxuXG4vLyBMaW5rc1xuJGNvbG9yLWxpbmstZGVmYXVsdCAgICAgICAgICAgOiAkY29sb3ItaGlnaGxpZ2h0O1xuJGNvbG9yLWxpbmstdmlzaXRlZCAgICAgICAgICAgOiAkY29sb3ItbGluay1kZWZhdWx0O1xuJGNvbG9yLWxpbmstaG92ZXIgICAgICAgICAgICAgOiBkYXJrZW4oJGNvbG9yLWxpbmstZGVmYXVsdCwgMjAlKTtcbiRjb2xvci1saW5rLWFjdGl2ZSAgICAgICAgICAgIDogZGFya2VuKCRjb2xvci1saW5rLWRlZmF1bHQsIDIwJSk7XG5cbi8vIFRleHQgU2VsZWN0aW9uXG4kY29sb3Itc2VsZWN0aW9uICAgICAgICAgICAgICA6ICNmZmY7XG4kY29sb3Itc2VsZWN0aW9uLWJnICAgICAgICAgICA6ICRjb2xvci1wcmltYXJ5O1xuXG5cbi8vIDxocj4gYm9yZGVyIGNvbG9yXG4kaHItY29sb3IgICAgICAgICAgICAgICAgICAgICA6IGxpZ2h0ZW4oIzAwMCwgNzAlKTtcblxuLy8gM3JkIHBhcnR5IGJyYW5kIGNvbG9ycyAtIGZpbmQgbW9yZSBhdCBicmFuZGNvbG9ycy5uZXRcbiRjb2xvci10d2l0dGVyICAgICAgICAgICAgICAgIDogIzU1YWNlZTtcbiRjb2xvci1mYWNlYm9vayAgICAgICAgICAgICAgIDogIzNiNTk5ODtcbiRjb2xvci15b3V0dWJlICAgICAgICAgICAgICAgIDogI2NkMjAxZjtcbiRjb2xvci1waW50ZXJlc3QgICAgICAgICAgICAgIDogI2JkMDgxYztcbiRjb2xvci1pbnN0YWdyYW0gICAgICAgICAgICAgIDogI2U0NDA1ZjtcbiRjb2xvci13aGF0c2FwcCAgICAgICAgICAgICAgIDogIzI1ZDM2NjtcbiIsIi8qKlxuICogVmFyaWFibGVzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIC0gVHlwb2dyYXBoeVxuICogLSBCcmVha3BvaW50c1xuICogLSBQYXRoc1xuICogLSBMYXlvdXQgJiBHcmlkXG4gKiAtIEFwcC1zcGVjaWZpY1xuICovXG5cbi8qIHN0eWxlbGludC1kaXNhYmxlIGluZGVudGF0aW9uICovXG5cbi8qKlxuICogVHlwb2dyYXBoeVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKlxuICogQmFzZSBzaXplczpcbiAqIFNldCB0aGlzIGluIHBpeGVscyAoYnV0IGRvIG5vdCBhZGQgcHgpLFxuICogdGhlIGZvbnQtc2l6ZSBtaXhpbiB3aWxsIGNvbnZlcnQgdG8gUkVNU1xuICovXG4kZm9udC1zaXplLWJhc2UgICAgICAgICAgIDogMjA7XG4kZm9udC1zaXplLWJhc2UtcHggICAgICAgIDogJGZvbnQtc2l6ZS1iYXNlICogMXB4O1xuJGZvbnQtc2l6ZS1iYXNlLW5hcnJvdyAgICA6ICRmb250LXNpemUtYmFzZSAtIDI7XG4kZm9udC1zaXplLWJhc2UtbmFycm93LXB4IDogJGZvbnQtc2l6ZS1iYXNlLW5hcnJvdyAqIDFweDtcblxuJGxlYWRpbmctYmFzZSAgICAgICAgICAgICA6IDEuNDtcbiRsaW5lLWhlaWdodC1iYXNlICAgICAgICAgOiByb3VuZCgkZm9udC1zaXplLWJhc2UgKiAkbGVhZGluZy1iYXNlKTsgLy8gMjAgKiAxLjRcbiRiYXNlbGluZSAgICAgICAgICAgICAgICAgOiAkbGluZS1oZWlnaHQtYmFzZSAqIDFweDtcblxuJHR5cGUtc2NhbGUgICAgICAgICAgICAgICA6IDEuMjU7IC8vIE1ham9yIHRoaXJkXG5cbiR0eXBlOiAoXG5cdG1pY3JvICAgICAgICAgICAgICAgICAgIDoga28tbXMoLTIpLFxuXHRzbWFsbCAgICAgICAgICAgICAgICAgICA6IGtvLW1zKC0xKSwgLy8gaDUsIGg2XG5cdGJhc2UgICAgICAgICAgICAgICAgICAgIDoga28tbXMoMCksICAvLyBwLCBoNFxuXHRtaWQgICAgICAgICAgICAgICAgICAgICA6IGtvLW1zKDEpLCAgLy8gaDNcblx0bGFyZ2UgICAgICAgICAgICAgICAgICAgOiBrby1tcygyKSwgIC8vIGgyXG5cdGp1bWJvICAgICAgICAgICAgICAgICAgIDoga28tbXMoMykgICAvLyBoMVxuKTtcblxuLy8gVXNlZnVsIHRvIHNldCBoZXJlIHdoZW4gYm9sZCB3ZWJmb250cyBjb21lIGFzIDQwMCBmb250LXdlaWdodC5cbiRmb250LXdlaWdodC1ib2xkICAgICAgICAgOiBib2xkO1xuXG4vLyBGb250IHN0YWNrc1xuJGZvbnQtZmFtaWx5LXN5c3RlbSAgICAgICA6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIE94eWdlbiwgVWJ1bnR1LCBDYW50YXJlbGwsIFwiRmlyYSBTYW5zXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XG4kZm9udC1mYW1pbHktc2FucyAgICAgICAgIDogXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuJGZvbnQtZmFtaWx5LXNlcmlmICAgICAgICA6IEdlb3JnaWEsIFwiVGltZXMgTmV3IFJvbWFuXCIsIFRpbWVzLCBzZXJpZjtcbiRmb250LWZhbWlseS1tb25vICAgICAgICAgOiBNZW5sbywgTW9uYWNvLCBcIkNvdXJpZXIgTmV3XCIsIG1vbm9zcGFjZTtcblxuJGZvbnQtZmFtaWx5LWJhc2UgICAgICAgICA6ICRmb250LWZhbWlseS1zeXN0ZW07XG4kZm9udC1mYW1pbHktYWx0ICAgICAgICAgIDogJGZvbnQtZmFtaWx5LXNlcmlmO1xuXG4kZm9udC1mYW1pbHktaGVhZGluZ3MgICAgIDogJGZvbnQtZmFtaWx5LWJhc2U7IC8vIHVzaW5nIGluaGVyaXQgd2lsbCB1c2UgJGZvbnQtZmFtaWx5LWJhc2UgZm9yIGFsbCBoZWFkaW5nc1xuJGZvbnQtd2VpZ2h0LWhlYWRpbmdzICAgICA6IGJvbGQ7ICAgIC8vIGluc3RlYWQgb2YgYnJvd3NlciBkZWZhdWx0LCBib2xkXG4kbGluZS1oZWlnaHQtaGVhZGluZ3MgICAgIDogMS4xO1xuXG5cbi8qKlxuICogQnJlYWtwb2ludHNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogVGhlcmUgYXJlIG5vIGNvbW1vbiBicmVha3BvaW50cyBzbyB0aGVzZSBhcmUganVzdCBhIHN1Z2dlc3Rpb25zXG4gKiBZb3UnbGwgbmVlZCB0byBkZWZpbmUgeW91ciBvd24gYnJlYWtwb2ludHMgdG8gc3VpdCB5b3VyIGRlc2lnblxuICogQWRkIHlvdXIgYnJlYWtwb2ludHMgdG8gdGhpcyBTYXNzIG1hcFxuICogVXNlZCBpbiB0aGUgS2lja29mZiBncmlkXG4gKi9cbiRicmVha3BvaW50czogKFxuXHRuYXJyb3cgICAgICAgICAgICAgICAgICA6IDQwMHB4LFxuXHRtaWQgICAgICAgICAgICAgICAgICAgICA6IDc1MHB4LFxuXHR3aWRlICAgICAgICAgICAgICAgICAgICA6IDEwMDBweCxcblx0aHVnZSAgICAgICAgICAgICAgICAgICAgOiAxMjUwcHhcbik7XG5cblxuLy8gU2V0dXAgbGF5b3V0IG1heC13aWR0aFxuJGxheW91dC1tYXJnaW4gICAgICAgICAgICAgICAgOiAwOyAvLyBbaW4gcGl4ZWxzXSBTcGFjZSBvdXRzaWRlIHRoZSBncmlkXG4kbGF5b3V0LW1heC13aWR0aCAgICAgICAgICAgICA6IDEwMDA7IC8vIFtpbiBwaXhlbHNdXG4kbGF5b3V0LW1pbi13aWR0aCAgICAgICAgICAgICA6IDk2MDsgIC8vIFtpbiBwaXhlbHNdIE1pbmltdW0gd2lkdGggZm9yIGxheW91dCBpbiA8SUU5XG4kbGF5b3V0LW1heC13aWR0aC0taHVnZSAgICAgICA6IDExMDA7IC8vIFtpbiBwaXhlbHNdXG4kbGF5b3V0LW1pbi13aWR0aC0taHVnZSAgICAgICA6IDExMDA7IC8vIFtpbiBwaXhlbHNdIE1pbmltdW0gd2lkdGggZm9yIGxheW91dCBpbiA8SUU5XG5cblxuLyoqXG4gKiBHcmlkXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIFRoZXNlIHZhcmlhYmxlcyB3aWxsIGNvbnRyb2wgdGhlIGdyaWQgbW9kdWxlLlxuICpcbiAqIGlmIHlvdXIgcHJvamVjdCBkb2VzbnQgdXNlIEtpY2tvZmbigJlzIGRlZmF1bHQgZ3JpZCwgeW91IGNhbiBkZWxldGUgdGhlc2VcbiAqL1xuXG4kZ3JpZC1jb2x1bW4tY291bnQgICAgICAgIDogMTI7IC8vIFRvdGFsIGNvbHVtbiBjb3VudFxuJGdyaWQtZ3V0dGVyLXdpZHRoICAgICAgICA6IDIwOyAvLyBbaW4gcGl4ZWxzXVxuXG4vL1NldHRpbmdzIGhlcmUgb3ZlcnJpZGUgJiBhZmZlY3QgdGhlIGdyaWQgY2xhc3NlcyBvdXRwdXRcbiRyZXNwb25zaXZlLWdyaWQtc2l6ZXMgICAgOiB0cnVlOyAvLyBEaXNhYmxlIHRoaXMgaWYgeW91IGRvbid0IHdhbnQgZ3JpZCBzaXplcyBmb3IgZWFjaCBicmVha3BvaW50XG4kdXNlLWxlZ2FjeS1ncmlkICAgICAgICAgIDogdHJ1ZTsgLy8gRGlzYWJsZSB0aGlzIGlzIHlvdSBvbuKAmXQgd2FudCB0byBvdXRwdXQgLm5vLWZsZXhib3ggY2xhc3NlcyBmb3Igb2xkZXIgYnJvd3NlcnMgdG8gdXNlXG5cblxuLyoqXG4gKiBQYXRoIHZhcmlhYmxlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbiRpbWctcGF0aCAgICAgICAgICAgICAgICAgOiBcIi9hc3NldHMvZGlzdC9pbWdcIjsgLy8gVXNhZ2U6IGJhY2tncm91bmQ6IHVybCgnI3skaW1nLXBhdGh9L2ltZy5qcGcnKSAwIDAgbm8tcmVwZWF0O1xuXG5cbi8qKlxuICogWi1pbmRleCB2YXJpYWJsZXNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG4kei1sb3cgICAgICAgICAgICAgICAgICAgICAgIDogMTA7XG4kei1taWQgICAgICAgICAgICAgICAgICAgICAgIDogMTAwO1xuJHotaGlnaCAgICAgICAgICAgICAgICAgICAgICA6IDEwMDA7XG5cblxuLyoqXG4gKiBBcHAtc3BlY2lmaWMgdmFyaWFibGVzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuJGRlZmF1bHQtdHJhbnNpdGlvbi10aW1pbmcgICA6IGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG4kZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uIDogMzAwbXM7XG4kZGVmYXVsdC10cmFuc2l0aW9uICAgICAgICAgIDogYWxsICRkZWZhdWx0LXRyYW5zaXRpb24tZHVyYXRpb24gJGRlZmF1bHQtdHJhbnNpdGlvbi10aW1pbmc7XG5cbi8vIEFkZCB5b3VyIG93biA6KVxuIiwiLyoqXG4gKiBLaWNrb2ZmIHJlc2V0XG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIFdlIHVzZSBub3JtYWxpemUuY3NzIGZvciB0aGUgYnVsayBvZiBvdXIgJ3Jlc2V0J1xuICovXG5cbkBpbXBvcnQgXCJub3JtYWxpemVcIjtcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3Ncbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9Kb2huQWxiaW4vbm9ybWFsaXplLXNjc3MgKFNhc3MgcG9ydCBvZiBub3JtYWxpemUuY3NzKVxuXG5odG1sIHtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcblx0Ym94LXNpemluZzogaW5oZXJpdDtcbn1cblxuQGluY2x1ZGUgbm9ybWFsaXplKCk7XG4iLCIvLyBIZWxwZXIgZnVuY3Rpb24gZm9yIHRoZSBub3JtYWxpemUoKSBtaXhpbi5cbkBmdW5jdGlvbiBfbm9ybWFsaXplLWluY2x1ZGUoJHNlY3Rpb24sICRleGNsdWRlOiBudWxsKSB7XG4gIC8vIEluaXRpYWxpemUgdGhlIGdsb2JhbCB2YXJpYWJsZXMgbmVlZGVkIGJ5IHRoaXMgZnVuY3Rpb24uXG4gIEBpZiBub3QgZ2xvYmFsX3ZhcmlhYmxlX2V4aXN0cyhfbm9ybWFsaXplLWluY2x1ZGUpIHtcbiAgICAkX25vcm1hbGl6ZS1pbmNsdWRlOiAoKSAhZ2xvYmFsO1xuICAgICRfbm9ybWFsaXplLWV4Y2x1ZGU6ICgpICFnbG9iYWw7XG4gIH1cbiAgLy8gU2luY2Ugd2UgYXJlIGdpdmVuIDIgcGFyYW1ldGVycywgc2V0IHRoZSBnbG9iYWwgdmFyaWFibGVzLlxuICBAaWYgJGV4Y2x1ZGUgIT0gbnVsbCB7XG4gICAgJGluY2x1ZGU6ICRzZWN0aW9uO1xuICAgIC8vIFNhc3MgZG9lc24ndCBoYXZlIHN0YXRpYyB2YXJpYWJsZXMsIHNvIHRoZSB3b3JrLWFyb3VuZCBpcyB0byBzdHVmZiB0aGVzZVxuICAgIC8vIHZhbHVlcyBpbnRvIGdsb2JhbCB2YXJpYWJsZXMgc28gd2UgY2FuIGFjY2VzcyB0aGVtIGluIGZ1dHVyZSBjYWxscy5cbiAgICAkX25vcm1hbGl6ZS1pbmNsdWRlOiBpZih0eXBlLW9mKCRpbmNsdWRlKSA9PSAnbGlzdCcsICRpbmNsdWRlLCAoJGluY2x1ZGUpKSAhZ2xvYmFsO1xuICAgICRfbm9ybWFsaXplLWV4Y2x1ZGU6IGlmKHR5cGUtb2YoJGV4Y2x1ZGUpID09ICdsaXN0JywgJGV4Y2x1ZGUsICgkZXhjbHVkZSkpICFnbG9iYWw7XG4gICAgQHJldHVybiB0cnVlO1xuICB9XG5cbiAgLy8gQ2hlY2sgaWYgJHNlY3Rpb24gaXMgaW4gdGhlICRpbmNsdWRlIGxpc3QuXG4gIEBpZiBpbmRleCgkX25vcm1hbGl6ZS1pbmNsdWRlLCAkc2VjdGlvbikge1xuICAgIEByZXR1cm4gdHJ1ZTtcbiAgfVxuICAvLyBJZiAkaW5jbHVkZSBpcyBzZXQgdG8gKGFsbCksIG1ha2Ugc3VyZSAkc2VjdGlvbiBpcyBub3QgaW4gJGV4Y2x1ZGUuXG4gIEBlbHNlIGlmIG5vdCBpbmRleCgkX25vcm1hbGl6ZS1leGNsdWRlLCAkc2VjdGlvbikgYW5kIGluZGV4KCRfbm9ybWFsaXplLWluY2x1ZGUsIGFsbCkge1xuICAgIEByZXR1cm4gdHJ1ZTtcbiAgfVxuICBAcmV0dXJuIGZhbHNlO1xufVxuXG5AbWl4aW4gbm9ybWFsaXplKCRpbmNsdWRlOiAoYWxsKSwgJGV4Y2x1ZGU6ICgpKSB7XG4gIC8vIEluaXRpYWxpemUgdGhlIGhlbHBlciBmdW5jdGlvbiBieSBwYXNzaW5nIGl0IHRoaXMgbWl4aW4ncyBwYXJhbWV0ZXJzLlxuICAkaW5pdDogX25vcm1hbGl6ZS1pbmNsdWRlKCRpbmNsdWRlLCAkZXhjbHVkZSk7XG5cbiAgLy8gSWYgd2UndmUgY3VzdG9taXplZCBhbnkgZm9udCB2YXJpYWJsZXMsIHdlJ2xsIG5lZWQgZXh0cmEgcHJvcGVydGllcy5cbiAgQGlmICRiYXNlLWZvbnQtc2l6ZSAhPSAxNnB4XG4gICAgb3IgJGJhc2UtbGluZS1oZWlnaHQgIT0gMjRweFxuICAgIG9yICRiYXNlLXVuaXQgIT0gJ2VtJ1xuICAgIG9yICRoMS1mb250LXNpemUgIT0gMiAgICAqICRiYXNlLWZvbnQtc2l6ZVxuICAgIG9yICRoMi1mb250LXNpemUgIT0gMS41ICAqICRiYXNlLWZvbnQtc2l6ZVxuICAgIG9yICRoMy1mb250LXNpemUgIT0gMS4xNyAqICRiYXNlLWZvbnQtc2l6ZVxuICAgIG9yICRoNC1mb250LXNpemUgIT0gMSAgICAqICRiYXNlLWZvbnQtc2l6ZVxuICAgIG9yICRoNS1mb250LXNpemUgIT0gMC44MyAqICRiYXNlLWZvbnQtc2l6ZVxuICAgIG9yICRoNi1mb250LXNpemUgIT0gMC42NyAqICRiYXNlLWZvbnQtc2l6ZSB7XG4gICAgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG06IHRydWUgIWdsb2JhbDtcbiAgfVxuXG4gIC8qISBub3JtYWxpemUtc2NzcyB8IE1JVC9HUEx2MiBMaWNlbnNlIHwgYml0Lmx5L25vcm1hbGl6ZS1zY3NzICovXG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShkb2N1bWVudCkge1xuICAgIC8qIERvY3VtZW50XG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICogMy4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpblxuICAgICAqICAgIElFIG9uIFdpbmRvd3MgUGhvbmUgYW5kIGluIGlPUy5cbiAgICAgKi9cblxuICAgIGh0bWwge1xuICAgICAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5OyAvKiAxICovXG4gICAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgICAvLyBDb3JyZWN0IG9sZCBicm93c2VyIGJ1ZyB0aGF0IHByZXZlbnRlZCBhY2Nlc3NpYmxlIHJlc2l6aW5nIG9mIHRleHRcbiAgICAgICAgLy8gd2hlbiByb290IGZvbnQtc2l6ZSBpcyBzZXQgd2l0aCBweCBvciBlbS5cbiAgICAgICAgZm9udC1zaXplOiAoJGJhc2UtZm9udC1zaXplIC8gMTZweCkgKiAxMDAlO1xuICAgICAgICBsaW5lLWhlaWdodDogKCRiYXNlLWxpbmUtaGVpZ2h0IC8gJGJhc2UtZm9udC1zaXplKSAqIDFlbTsgLyogMiAqL1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBsaW5lLWhlaWdodDogMS4xNTsgLyogMiAqL1xuICAgICAgfVxuICAgICAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDMgKi9cbiAgICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMyAqL1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoc2VjdGlvbnMpIHtcbiAgICAvKiBTZWN0aW9uc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICAgKi9cblxuICAgIGJvZHkge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuXG4gICAgYXJ0aWNsZSxcbiAgICBhc2lkZSxcbiAgICBmb290ZXIsXG4gICAgaGVhZGVyLFxuICAgIG5hdixcbiAgICBzZWN0aW9uIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAgICAgKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICAgICAqL1xuXG4gICAgaDEge1xuICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLWZvbnQtc2l6ZSgkaDEtZm9udC1zaXplKTtcbiAgICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDEtZm9udC1zaXplKTtcbiAgICAgIH1cblxuICAgICAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcbiAgICAgICAgLyogU2V0IDEgdW5pdCBvZiB2ZXJ0aWNhbCByaHl0aG0gb24gdGhlIHRvcCBhbmQgYm90dG9tIG1hcmdpbnMuICovXG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDEtZm9udC1zaXplKTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgbWFyZ2luOiAwLjY3ZW0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgaDIge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoMi1mb250LXNpemUpO1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGgyLWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDItZm9udC1zaXplKTtcbiAgICAgIH1cblxuICAgICAgaDMge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoMy1mb250LXNpemUpO1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGgzLWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDMtZm9udC1zaXplKTtcbiAgICAgIH1cblxuICAgICAgaDQge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoNC1mb250LXNpemUpO1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGg0LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDQtZm9udC1zaXplKTtcbiAgICAgIH1cblxuICAgICAgaDUge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoNS1mb250LXNpemUpO1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGg1LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDUtZm9udC1zaXplKTtcbiAgICAgIH1cblxuICAgICAgaDYge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoNi1mb250LXNpemUpO1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGg2LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDYtZm9udC1zaXplKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAaWYgX25vcm1hbGl6ZS1pbmNsdWRlKGdyb3VwaW5nKSB7XG4gICAgLyogR3JvdXBpbmcgY29udGVudFxuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgLyoqXG4gICAgICAgKiBTZXQgMSB1bml0IG9mIHZlcnRpY2FsIHJoeXRobSBvbiB0aGUgdG9wIGFuZCBib3R0b20gbWFyZ2luLlxuICAgICAgICovXG5cbiAgICAgIGJsb2NrcXVvdGUge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbWFyZ2luKDEgJGluZGVudC1hbW91bnQpO1xuICAgICAgfVxuXG4gICAgICBkbCxcbiAgICAgIG9sLFxuICAgICAgdWwge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbWFyZ2luKDEgMCk7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogVHVybiBvZmYgbWFyZ2lucyBvbiBuZXN0ZWQgbGlzdHMuXG4gICAgICAgKi9cblxuICAgICAgb2wsXG4gICAgICB1bCB7XG4gICAgICAgIG9sLFxuICAgICAgICB1bCB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGRkIHtcbiAgICAgICAgbWFyZ2luOiAwIDAgMCAkaW5kZW50LWFtb3VudDtcbiAgICAgIH1cblxuICAgICAgb2wsXG4gICAgICB1bCB7XG4gICAgICAgIHBhZGRpbmc6IDAgMCAwICRpbmRlbnQtYW1vdW50O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuXG4gICAgZmlnY2FwdGlvbixcbiAgICBmaWd1cmUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICAgICAqL1xuXG4gICAgZmlndXJlIHtcbiAgICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAkaW5kZW50LWFtb3VudCk7XG4gICAgICB9XG4gICAgICBAZWxzZSB7XG4gICAgICAgIG1hcmdpbjogMWVtICRpbmRlbnQtYW1vdW50O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gICAgICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gICAgICovXG5cbiAgICBociB7XG4gICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICAgICAgaGVpZ2h0OiAwOyAvKiAxICovXG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICAgICAqL1xuXG4gICAgbWFpbiB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgLyoqXG4gICAgICAgKiBTZXQgMSB1bml0IG9mIHZlcnRpY2FsIHJoeXRobSBvbiB0aGUgdG9wIGFuZCBib3R0b20gbWFyZ2luLlxuICAgICAgICovXG5cbiAgICAgIHAsXG4gICAgICBwcmUge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbWFyZ2luKDEgMCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5cbiAgICBwcmUge1xuICAgICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gICAgICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUobGlua3MpIHtcbiAgICAvKiBMaW5rc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgICAvKipcbiAgICAgKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gICAgICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICAgICAqL1xuXG4gICAgYSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xuICAgICAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICAgICAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICAgICAqL1xuXG4gICAgYTphY3RpdmUsXG4gICAgYTpob3ZlciB7XG4gICAgICBvdXRsaW5lLXdpZHRoOiAwO1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUodGV4dCkge1xuICAgIC8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAgICAgKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICAgICAqL1xuXG4gICAgYWJiclt0aXRsZV0ge1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICAgICAqL1xuXG4gICAgYixcbiAgICBzdHJvbmcge1xuICAgICAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAgICAgKi9cblxuICAgIGIsXG4gICAgc3Ryb25nIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5cbiAgICBjb2RlLFxuICAgIGtiZCxcbiAgICBzYW1wIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICAgICAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gICAgICovXG5cbiAgICBkZm4ge1xuICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAgICAgKi9cblxuICAgIG1hcmsge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgICAgIGNvbG9yOiAjMDAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqL1xuXG4gICAgc21hbGwge1xuICAgICAgZm9udC1zaXplOiA4MCU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gICAgICogYWxsIGJyb3dzZXJzLlxuICAgICAqL1xuXG4gICAgc3ViLFxuICAgIHN1cCB7XG4gICAgICBmb250LXNpemU6IDc1JTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAgIH1cblxuICAgIHN1YiB7XG4gICAgICBib3R0b206IC0wLjI1ZW07XG4gICAgfVxuXG4gICAgc3VwIHtcbiAgICAgIHRvcDogLTAuNWVtO1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoZW1iZWRkZWQpIHtcbiAgICAvKiBFbWJlZGRlZCBjb250ZW50XG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuXG4gICAgYXVkaW8sXG4gICAgdmlkZW8ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gICAgICovXG5cbiAgICBhdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGhlaWdodDogMDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAgICAgKi9cblxuICAgIGltZyB7XG4gICAgICBib3JkZXItc3R5bGU6IG5vbmU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gICAgICovXG5cbiAgICBzdmc6bm90KDpyb290KSB7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoZm9ybXMpIHtcbiAgICAvKiBGb3Jtc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgICAvKipcbiAgICAgKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICAgICAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAgICAgKi9cblxuICAgIGJ1dHRvbixcbiAgICBpbnB1dCxcbiAgICBvcHRncm91cCxcbiAgICBzZWxlY3QsXG4gICAgdGV4dGFyZWEge1xuICAgICAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5OyAvKiAxICovXG4gICAgICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAoJGJhc2UtbGluZS1oZWlnaHQgLyAkYmFzZS1mb250LXNpemUpICogMWVtOyAvKiAxICovXG4gICAgICB9XG4gICAgICBAZWxzZSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gICAgICB9XG4gICAgICBtYXJnaW46IDA7IC8qIDIgKi9cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAgICAgKi9cblxuICAgIGJ1dHRvbiB7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAgICAgKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gICAgICovXG5cbiAgICBidXR0b24sXG4gICAgc2VsZWN0IHsgLyogMSAqL1xuICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gICAgICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICAgICAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gICAgICovXG5cbiAgICBidXR0b24sXG4gICAgaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuICAgIFt0eXBlPVwicmVzZXRcIl0sXG4gICAgW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgICB9XG5cbiAgICBidXR0b24sXG4gICAgW3R5cGU9XCJidXR0b25cIl0sXG4gICAgW3R5cGU9XCJyZXNldFwiXSxcbiAgICBbdHlwZT1cInN1Ym1pdFwiXSB7XG5cbiAgICAgIC8qKlxuICAgICAgICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAgICAgICAqL1xuXG4gICAgICAmOjotbW96LWZvY3VzLWlubmVyIHtcbiAgICAgICAgYm9yZGVyLXN0eWxlOiBub25lO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAgICAgICAqL1xuXG4gICAgICAmOi1tb3otZm9jdXNyaW5nIHtcbiAgICAgICAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gICAgICovXG5cbiAgICBpbnB1dCB7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gICAgICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAgICAgKi9cblxuICAgIFt0eXBlPVwiY2hlY2tib3hcIl0sXG4gICAgW3R5cGU9XCJyYWRpb1wiXSB7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gICAgICBwYWRkaW5nOiAwOyAvKiAyICovXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICAgICAqL1xuXG4gICAgW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG4gICAgW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICAgICAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICAgICAqL1xuXG4gICAgW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgICAgIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG5cbiAgICAgIC8qKlxuICAgICAgICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAgICAgICAqL1xuXG4gICAgICAmOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuICAgICAgJjo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICAgICAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAgICAgKi9cblxuICAgIDo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgICAgIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICAgKi9cblxuICAgIGZpZWxkc2V0IHtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gICAgICBtYXJnaW46IDAgMnB4O1xuICAgICAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICAgICAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAgICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cblxuICAgIGxlZ2VuZCB7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gICAgICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICAgICAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gICAgICBwYWRkaW5nOiAwOyAvKiAzICovXG4gICAgICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICAgICAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gICAgICovXG5cbiAgICBwcm9ncmVzcyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gICAgICovXG5cbiAgICB0ZXh0YXJlYSB7XG4gICAgICBvdmVyZmxvdzogYXV0bztcbiAgICB9XG4gIH1cblxuICBAaWYgX25vcm1hbGl6ZS1pbmNsdWRlKGludGVyYWN0aXZlKSB7XG4gICAgLyogSW50ZXJhY3RpdmVcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLypcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gICAgICovXG5cbiAgICBkZXRhaWxzIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqL1xuXG4gICAgc3VtbWFyeSB7XG4gICAgICBkaXNwbGF5OiBsaXN0LWl0ZW07XG4gICAgfVxuXG4gICAgLypcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAgICAgKi9cblxuICAgIG1lbnUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIC8qXG4gICAgICAgICAqIDEuIFNldCAxIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtIG9uIHRoZSB0b3AgYW5kIGJvdHRvbSBtYXJnaW4uXG4gICAgICAgICAqIDIuIFNldCBjb25zaXN0ZW50IHNwYWNlIGZvciB0aGUgbGlzdCBzdHlsZSBpbWFnZS5cbiAgICAgICAgICovXG5cbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDApOyAvKiAxICovXG4gICAgICAgIHBhZGRpbmc6IDAgMCAwICRpbmRlbnQtYW1vdW50OyAvKiAyICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFR1cm4gb2ZmIG1hcmdpbnMgb24gbmVzdGVkIGxpc3RzLlxuICAgICAgICAgKi9cblxuICAgICAgICBtZW51ICYsXG4gICAgICAgIG9sICYsXG4gICAgICAgIHVsICYge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoc2NyaXB0aW5nKSB7XG4gICAgLyogU2NyaXB0aW5nXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuXG4gICAgY2FudmFzIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAgICAgKi9cblxuICAgIHRlbXBsYXRlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShoaWRkZW4pIHtcbiAgICAvKiBIaWRkZW5cbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICAgICAqL1xuXG4gICAgW2hpZGRlbl0ge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbn1cbiIsIi8vXG4vLyBWYXJpYWJsZXNcbi8vXG4vLyBZb3UgY2FuIG92ZXJyaWRlIHRoZSBkZWZhdWx0IHZhbHVlcyBieSBzZXR0aW5nIHRoZSB2YXJpYWJsZXMgaW4geW91ciBTYXNzXG4vLyBiZWZvcmUgaW1wb3J0aW5nIHRoZSBub3JtYWxpemUtc2NzcyBsaWJyYXJ5LlxuXG4vLyBUaGUgZm9udCBzaXplIHNldCBvbiB0aGUgcm9vdCBodG1sIGVsZW1lbnQuXG4kYmFzZS1mb250LXNpemU6IDE2cHggIWRlZmF1bHQ7XG5cbi8vIFRoZSBiYXNlIGxpbmUgaGVpZ2h0IGRldGVybWluZXMgdGhlIGJhc2ljIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtLlxuJGJhc2UtbGluZS1oZWlnaHQ6IDI0cHggIWRlZmF1bHQ7XG5cbi8vIFRoZSBsZW5ndGggdW5pdCBpbiB3aGljaCB0byBvdXRwdXQgdmVydGljYWwgcmh5dGhtIHZhbHVlcy5cbi8vIFN1cHBvcnRlZCB2YWx1ZXM6IHB4LCBlbSwgcmVtLlxuJGJhc2UtdW5pdDogJ2VtJyAhZGVmYXVsdDtcblxuLy8gVGhlIGRlZmF1bHQgZm9udCBmYW1pbHkuXG4kYmFzZS1mb250LWZhbWlseTogc2Fucy1zZXJpZiAhZGVmYXVsdDtcblxuLy8gVGhlIGZvbnQgc2l6ZXMgZm9yIGgxLWg2LlxuJGgxLWZvbnQtc2l6ZTogMiAgICAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRoMi1mb250LXNpemU6IDEuNSAgKiAkYmFzZS1mb250LXNpemUgIWRlZmF1bHQ7XG4kaDMtZm9udC1zaXplOiAxLjE3ICogJGJhc2UtZm9udC1zaXplICFkZWZhdWx0O1xuJGg0LWZvbnQtc2l6ZTogMSAgICAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRoNS1mb250LXNpemU6IDAuODMgKiAkYmFzZS1mb250LXNpemUgIWRlZmF1bHQ7XG4kaDYtZm9udC1zaXplOiAwLjY3ICogJGJhc2UtZm9udC1zaXplICFkZWZhdWx0O1xuXG4vLyBUaGUgYW1vdW50IGxpc3RzIGFuZCBibG9ja3F1b3RlcyBhcmUgaW5kZW50ZWQuXG4kaW5kZW50LWFtb3VudDogNDBweCAhZGVmYXVsdDtcblxuLy8gVGhlIGZvbGxvd2luZyB2YXJpYWJsZSBjb250cm9scyB3aGV0aGVyIG5vcm1hbGl6ZS1zY3NzIHdpbGwgb3V0cHV0XG4vLyBmb250LXNpemVzLCBsaW5lLWhlaWdodHMgYW5kIGJsb2NrLWxldmVsIHRvcC9ib3R0b20gbWFyZ2lucyB0aGF0IGZvcm0gYSBiYXNpY1xuLy8gdmVydGljYWwgcmh5dGhtIG9uIHRoZSBwYWdlLCB3aGljaCBkaWZmZXJzIGZyb20gdGhlIG9yaWdpbmFsIE5vcm1hbGl6ZS5jc3MuXG4vLyBIb3dldmVyLCBjaGFuZ2luZyBhbnkgb2YgdGhlIHZhcmlhYmxlcyBhYm92ZSB3aWxsIGNhdXNlXG4vLyAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB0byBiZSBhdXRvbWF0aWNhbGx5IHNldCB0byB0cnVlLlxuJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG06IGZhbHNlICFkZWZhdWx0O1xuIiwiLy9cbi8vIFZlcnRpY2FsIFJoeXRobVxuLy9cbi8vIFRoaXMgaXMgdGhlIG1pbmltYWwgYW1vdW50IG9mIGNvZGUgbmVlZGVkIHRvIGNyZWF0ZSB2ZXJ0aWNhbCByaHl0aG0gaW4gb3VyXG4vLyBDU1MuIElmIHlvdSBhcmUgbG9va2luZyBmb3IgYSByb2J1c3Qgc29sdXRpb24sIGxvb2sgYXQgdGhlIGV4Y2VsbGVudCBUeXBleVxuLy8gbGlicmFyeS4gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vanB0YXJhbnRvL3R5cGV5XG5cbkBmdW5jdGlvbiBub3JtYWxpemUtcmh5dGhtKCR2YWx1ZSwgJHJlbGF0aXZlLXRvOiAkYmFzZS1mb250LXNpemUsICR1bml0OiAkYmFzZS11bml0KSB7XG4gIEBpZiB1bml0KCR2YWx1ZSkgIT0gcHgge1xuICAgIEBlcnJvciBcIlRoZSBub3JtYWxpemUgdmVydGljYWwtcmh5dGhtIG1vZHVsZSBvbmx5IHN1cHBvcnRzIHB4IGlucHV0cy4gVGhlIHR5cGV5IGxpYnJhcnkgaXMgYmV0dGVyLlwiO1xuICB9XG4gIEBpZiAkdW5pdCA9PSByZW0ge1xuICAgIEByZXR1cm4gKCR2YWx1ZSAvICRiYXNlLWZvbnQtc2l6ZSkgKiAxcmVtO1xuICB9XG4gIEBlbHNlIGlmICR1bml0ID09IGVtIHtcbiAgICBAcmV0dXJuICgkdmFsdWUgLyAkcmVsYXRpdmUtdG8pICogMWVtO1xuICB9XG4gIEBlbHNlIHsgLy8gJHVuaXQgPT0gcHhcbiAgICBAcmV0dXJuICR2YWx1ZTtcbiAgfVxufVxuXG5AbWl4aW4gbm9ybWFsaXplLWZvbnQtc2l6ZSgkdmFsdWUsICRyZWxhdGl2ZS10bzogJGJhc2UtZm9udC1zaXplKSB7XG4gIEBpZiB1bml0KCR2YWx1ZSkgIT0gJ3B4JyB7XG4gICAgQGVycm9yIFwibm9ybWFsaXplLWZvbnQtc2l6ZSgpIG9ubHkgc3VwcG9ydHMgcHggaW5wdXRzLiBUaGUgdHlwZXkgbGlicmFyeSBpcyBiZXR0ZXIuXCI7XG4gIH1cbiAgZm9udC1zaXplOiBub3JtYWxpemUtcmh5dGhtKCR2YWx1ZSwgJHJlbGF0aXZlLXRvKTtcbn1cblxuQG1peGluIG5vcm1hbGl6ZS1yaHl0aG0oJHByb3BlcnR5LCAkdmFsdWVzLCAkcmVsYXRpdmUtdG86ICRiYXNlLWZvbnQtc2l6ZSkge1xuICAkdmFsdWUtbGlzdDogJHZhbHVlcztcbiAgJHNlcDogc3BhY2U7XG4gIEBpZiB0eXBlLW9mKCR2YWx1ZXMpID09ICdsaXN0JyB7XG4gICAgJHNlcDogbGlzdC1zZXBhcmF0b3IoJHZhbHVlcyk7XG4gIH1cbiAgQGVsc2Uge1xuICAgICR2YWx1ZS1saXN0OiBhcHBlbmQoKCksICR2YWx1ZXMpO1xuICB9XG5cbiAgJG5vcm1hbGl6ZWQtdmFsdWVzOiAoKTtcbiAgQGVhY2ggJHZhbHVlIGluICR2YWx1ZS1saXN0IHtcbiAgICBAaWYgdW5pdGxlc3MoJHZhbHVlKSBhbmQgJHZhbHVlICE9IDAge1xuICAgICAgJHZhbHVlOiAkdmFsdWUgKiBub3JtYWxpemUtcmh5dGhtKCRiYXNlLWxpbmUtaGVpZ2h0LCAkcmVsYXRpdmUtdG8pO1xuICAgIH1cbiAgICAkbm9ybWFsaXplZC12YWx1ZXM6IGFwcGVuZCgkbm9ybWFsaXplZC12YWx1ZXMsICR2YWx1ZSwgJHNlcCk7XG4gIH1cbiAgI3skcHJvcGVydHl9OiAkbm9ybWFsaXplZC12YWx1ZXM7XG59XG5cbkBtaXhpbiBub3JtYWxpemUtbWFyZ2luKCR2YWx1ZXMsICRyZWxhdGl2ZS10bzogJGJhc2UtZm9udC1zaXplKSB7XG4gIEBpbmNsdWRlIG5vcm1hbGl6ZS1yaHl0aG0obWFyZ2luLCAkdmFsdWVzLCAkcmVsYXRpdmUtdG8pO1xufVxuXG5AbWl4aW4gbm9ybWFsaXplLWxpbmUtaGVpZ2h0KCRmb250LXNpemUsICRtaW4tbGluZS1wYWRkaW5nOiAycHgpIHtcbiAgJGxpbmVzOiBjZWlsKCRmb250LXNpemUgLyAkYmFzZS1saW5lLWhlaWdodCk7XG4gIC8vIElmIGxpbmVzIGFyZSBjcmFtcGVkIGluY2x1ZGUgc29tZSBleHRyYSBsZWFkaW5nLlxuICBAaWYgKCRsaW5lcyAqICRiYXNlLWxpbmUtaGVpZ2h0IC0gJGZvbnQtc2l6ZSkgPCAoJG1pbi1saW5lLXBhZGRpbmcgKiAyKSB7XG4gICAgJGxpbmVzOiAkbGluZXMgKyAxO1xuICB9XG4gIEBpbmNsdWRlIG5vcm1hbGl6ZS1yaHl0aG0obGluZS1oZWlnaHQsICRsaW5lcywgJGZvbnQtc2l6ZSk7XG59XG4iLCIvKipcbiAqIFR5cG9ncmFwaHlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogLSBCYXNlXG4gKiAtIFBhcmFncmFwaHNcbiAqIC0gSGVhZGluZ3NcbiAqIC0gVHlwZSBzaXplc1xuICogLSBNaXNjXG4gKiAtIFV0aWxpdGllc1xuICpcbiAqIEJvZHkgZm9udCBzaXplLCBsZWFkaW5ncyBldGMgaGF2ZSBiZWVuIHNldCBpbiBfdmFyaWFibGVzLnNjc3NcbiAqXG4gKiBTZWUgaHR0cDovL21vZHVsYXJzY2FsZS5jb20gZm9yXG4gKlxuICovXG5cbmh0bWwge1xuXHRmb250LXNpemU6ICRmb250LXNpemUtYmFzZS1uYXJyb3ctcHg7XG5cdHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG5cblx0QGluY2x1ZGUgbWVkaWEoJz5taWQnKSB7XG5cdFx0Zm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UtcHg7XG5cdH1cbn1cblxuYm9keSB7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktYmFzZTtcblx0QGluY2x1ZGUga28tZm9udC1zaXplKGJhc2UpO1xuXHRsaW5lLWhlaWdodDogJGxlYWRpbmctYmFzZTtcblx0Y29sb3I6ICRjb2xvci10ZXh0O1xuXG5cdC8vIEFkZCBsaWdhdHVyZXNcblx0Zm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImxpZ2FcIiwgXCJkbGlnXCIsIFwiaGlzdFwiO1xuXHRmb250LXZhcmlhbnQtbGlnYXR1cmVzOiBjb21tb24tbGlnYXR1cmVzIGRpc2NyZXRpb25hcnktbGlnYXR1cmVzIGhpc3RvcmljYWwtbGlnYXR1cmVzO1xuXG5cdC8vIFR3byB3YXlzIHRvIHNtb290aGVuIHR5cGUsIHRoZXkgYXJlIGRpc2FibGVkIGJ5IGRlZmF1bHRcblx0Ly8gRW5hYmxlIG9ubHkgb25lIG9mIHRoZW0gaWYgeW91IG5lZWQgdGhlbVxuXHQvLyAxLlxuXHQvLyAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcblx0Ly8gICAgLW1vei1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG5cdC8vIGZvbnQtc21vb3RoOmFsd2F5cztcblxuXHQvLyAyLlxuXHQvLyBvcGFjaXR5OiAwLjk5O1xufVxuXG4vKipcbiAqIFBhcmFncmFwaHNcbiAqL1xucCB7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktYmFzZTtcblx0QGluY2x1ZGUga28tZm9udC1zaXplKGJhc2UpO1xuXHRtYXJnaW4tdG9wOiAwO1xuXHRtYXJnaW4tYm90dG9tOiAkYmFzZWxpbmU7XG5cblx0Ly8gTWVhc3VyZSAtIGlkZWFsbHkgYWJvdXQgNjUgY2hhcnMgcGVyIGxpbmVcblx0Ly8gbWF4LXdpZHRoOiAje3R5cGUoYmFzZSkgKiAzMH1weDtcbn1cblxuLyoqXG4gKiBIZWFkaW5nc1xuICovXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuXHRtYXJnaW46IDA7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktaGVhZGluZ3M7XG5cdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtaGVhZGluZ3M7XG5cdGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtaGVhZGluZ3M7XG5cdHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZWxlZ2liaWxpdHk7IC8vIEZpeCB0aGUgY2hhcmFjdGVyIHNwYWNpbmcgZm9yIGhlYWRpbmdzXG5cdG1hcmdpbi10b3A6IDA7XG5cdG1hcmdpbi1ib3R0b206ICRiYXNlbGluZTtcblxuXHRzbWFsbCB7XG5cdFx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcblx0fVxufVxuXG4vLyBVc2UgdGhlIGhlbHBlciBjbGFzc2VzIHRvIGVtdWxhdGUgc3R5bGVzIGZvciBhbm90aGVyIGVsZW1lbnRcbi8vIEZvciBleGFtcGxlOiBoMy5oMSBvciBoMy5hbHBoYVxuaDEsXG4uaDEsXG4uYWxwaGEge1xuXHRAaW5jbHVkZSBrby1mb250LXNpemUoanVtYm8pO1xuXHRtYXJnaW4tYm90dG9tOiAkYmFzZWxpbmUgKiAyO1xufVxuXG5oMixcbi5oMixcbi5iZXRhIHtcblx0QGluY2x1ZGUga28tZm9udC1zaXplKGxhcmdlKTtcbn1cblxuaDMsXG4uaDMsXG4uZ2FtbWEge1xuXHRAaW5jbHVkZSBrby1mb250LXNpemUobWlkKTtcbn1cblxuaDQsXG4uaDQsXG4uZGVsdGEge1xuXHRAaW5jbHVkZSBrby1mb250LXNpemUoYmFzZSk7XG59XG5cbmg1LFxuLmg1LFxuLmVwc2lsb24sXG5oNixcbi5oNixcbi56ZXRhIHtcblx0QGluY2x1ZGUga28tZm9udC1zaXplKGJhc2UpO1xuXHRtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4vLyBPbmx5IGdpdmUgdGhlc2UgaGVhZGluZ3MgYSBtYXJnaW4tdG9wIGlmIHRoZXkgYXJlIGFmdGVyIG90aGVyIGVsZW1lbnRzXG4qICsgaDEsXG4qICsgLmgxLFxuKiArIC5hbHBoYSxcbiogKyBoMixcbiogKyAuaDIsXG4qICsgLmJldGEsXG4qICsgaDMsXG4qICsgLmgzLFxuKiArIC5nYW1tYSxcbiogKyBoNCxcbiogKyAuaDQsXG4qICsgLmRlbHRhIHtcblx0bWFyZ2luLXRvcDogJGJhc2VsaW5lO1xufVxuXG5zbWFsbCB7XG5cdGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIE1pc2NlbGxhbmVvdXNcbiAqL1xuXG4vLyBFbXBoYXNpc1xuc3Ryb25nLFxuYiB7XG5cdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtYm9sZDtcbn1cblxuZW0sXG5pIHtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vLyBBYmJyZXZpYXRpb25zIGFuZCBhY3Jvbnltc1xuYWJiclt0aXRsZV0ge1xuXHRib3JkZXItYm90dG9tOiAxcHggZG90dGVkICNkZGQ7XG5cdGN1cnNvcjogaGVscDtcbn1cblxuLyoqXG4gKiBCbG9ja3F1b3Rlc1xuICovXG5ibG9ja3F1b3RlIHtcblx0cGFkZGluZy1sZWZ0OiAxMHB4O1xuXHRtYXJnaW46ICRiYXNlbGluZTtcblx0Ym9yZGVyLWxlZnQ6IDRweCBzb2xpZCBsaWdodGVuKCMwMDAsIDgwJSk7XG5cblx0cCB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRAaW5jbHVkZSBrby1mb250LXNpemUoYmFzZSk7XG5cdFx0Zm9udC13ZWlnaHQ6IDMwMDtcblx0fVxuXG5cdHNtYWxsIHtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRjb2xvcjogbGlnaHRlbigjMDAwLCA3MCUpO1xuXG5cdFx0Jjo6YmVmb3JlIHtcblx0XHRcdGNvbnRlbnQ6ICdcXDIwMTQgXFwwMEEwJztcblx0XHR9XG5cdH1cbn1cblxuLy8gUXVvdGVzXG5xLFxuYmxvY2txdW90ZSB7XG5cdCY6OmJlZm9yZSxcblx0Jjo6YWZ0ZXIge1xuXHRcdGNvbnRlbnQ6IFwiXCI7XG5cdH1cbn1cblxuY2l0ZSB7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuLy8gQWRkcmVzc2VzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gUzUsIENocm9tZVxuZGZuIHtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vLyBBZGRyZXNzZXMgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRTYvNy84Lzlcbm1hcmsge1xuXHRiYWNrZ3JvdW5kOiAkeWVsbG93O1xuXHRwYWRkaW5nOiAycHggNHB4O1xuXHRib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbi8vIFByZXZlbnRzIHN1YiBhbmQgc3VwIGFmZmVjdGluZyBsaW5lLWhlaWdodCBpbiBhbGwgYnJvd3NlcnNcbi8vIGdpc3QuZ2l0aHViLmNvbS80MTM5MzBcbnN1YixcbnN1cCB7XG5cdGZvbnQtc2l6ZTogNzUlO1xuXHRsaW5lLWhlaWdodDogMDtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7IHRvcDogLTAuNWVtOyB9XG5zdWIgeyBib3R0b206IC0wLjI1ZW07IH1cbnNhbXAgeyBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5LW1vbm87IH1cblxuXG4vKipcbiAqIFV0aWxpdGllc1xuICovXG4udGV4dC1jZW50cmUsIC8vIEJyaXRpc2ggb3IgVVMgRW5nbGlzaCBzcGVsbGluZ3MuLlxuLnRleHQtY2VudGVyIHtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udGV4dC1sZWZ0IHtcblx0dGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLnRleHQtcmlnaHQge1xuXHR0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuQGluY2x1ZGUga28tdGV4dC1zZWxlY3Rpb24oJGNvbG9yLXNlbGVjdGlvbiwgJGNvbG9yLXNlbGVjdGlvbi1iZyk7XG5cbi8vIEhvcml6b250YWwgcnVsZXNcbmhyIHtcblx0bWFyZ2luOiAoJGJhc2VsaW5lKSAwO1xuXHRib3JkZXI6IDA7XG5cdGhlaWdodDogMXB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkaHItY29sb3I7XG59XG5cbi8vIGh0dHBzOi8vanVzdG1hcmt1cC5jb20vbG9nLzIwMTUvMDcvZGVhbGluZy13aXRoLWxvbmctd29yZHMtaW4tY3NzL1xuLmh5cGhlbmF0ZSB7XG5cdG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG5cdHdvcmQtd3JhcDogYnJlYWstd29yZDtcblx0aHlwaGVuczogYXV0bztcbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8gICAgIF8gICAgICAgICAgICBfICAgICAgICAgICBfICAgICAgICAgICAgICAgICAgICAgICAgICAgXyBfXG4vLyAgICAoXykgICAgICAgICAgfCB8ICAgICAgICAgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgIHwgKF8pXG4vLyAgICAgXyBfIF9fICAgX19ffCB8XyAgIF8gIF9ffCB8IF9fXyAgIF8gX18gX19fICAgX19fICBfX3wgfF8gIF9fIF9cbi8vICAgIHwgfCAnXyBcXCAvIF9ffCB8IHwgfCB8LyBfYCB8LyBfIFxcIHwgJ18gYCBfIFxcIC8gXyBcXC8gX2AgfCB8LyBfYCB8XG4vLyAgICB8IHwgfCB8IHwgKF9ffCB8IHxffCB8IChffCB8ICBfXy8gfCB8IHwgfCB8IHwgIF9fLyAoX3wgfCB8IChffCB8XG4vLyAgICB8X3xffCB8X3xcXF9fX3xffFxcX18sX3xcXF9fLF98XFxfX198IHxffCB8X3wgfF98XFxfX198XFxfXyxffF98XFxfXyxffFxuLy9cbi8vICAgICAgU2ltcGxlLCBlbGVnYW50IGFuZCBtYWludGFpbmFibGUgbWVkaWEgcXVlcmllcyBpbiBTYXNzXG4vLyAgICAgICAgICAgICAgICAgICAgICAgIHYxLjQuOVxuLy9cbi8vICAgICAgICAgICAgICAgIGh0dHA6Ly9pbmNsdWRlLW1lZGlhLmNvbVxuLy9cbi8vICAgICAgICAgQXV0aG9yczogRWR1YXJkbyBCb3VjYXMgKEBlZHVhcmRvYm91Y2FzKVxuLy8gICAgICAgICAgICAgICAgICBIdWdvIEdpcmF1ZGVsIChAaHVnb2dpcmF1ZGVsKVxuLy9cbi8vICAgICAgVGhpcyBwcm9qZWN0IGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgTUlUIGxpY2Vuc2VcblxuXG4vLy8vXG4vLy8gaW5jbHVkZS1tZWRpYSBsaWJyYXJ5IHB1YmxpYyBjb25maWd1cmF0aW9uXG4vLy8gQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8vXG5cblxuLy8vXG4vLy8gQ3JlYXRlcyBhIGxpc3Qgb2YgZ2xvYmFsIGJyZWFrcG9pbnRzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBicmVha3BvaW50IHdpdGggdGhlIGxhYmVsIGBwaG9uZWBcbi8vLyAgJGJyZWFrcG9pbnRzOiAoJ3Bob25lJzogMzIwcHgpO1xuLy8vXG4kYnJlYWtwb2ludHM6IChcbiAgJ3Bob25lJzogMzIwcHgsXG4gICd0YWJsZXQnOiA3NjhweCxcbiAgJ2Rlc2t0b3AnOiAxMDI0cHhcbikgIWRlZmF1bHQ7XG5cblxuLy8vXG4vLy8gQ3JlYXRlcyBhIGxpc3Qgb2Ygc3RhdGljIGV4cHJlc3Npb25zIG9yIG1lZGlhIHR5cGVzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBtZWRpYSB0eXBlIChzY3JlZW4pXG4vLy8gICRtZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nOiAnc2NyZWVuJyk7XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHN0YXRpYyBleHByZXNzaW9uIHdpdGggbG9naWNhbCBkaXNqdW5jdGlvbiAoT1Igb3BlcmF0b3IpXG4vLy8gICRtZWRpYS1leHByZXNzaW9uczogKFxuLy8vICAgICdyZXRpbmEyeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJ1xuLy8vICApO1xuLy8vXG4kbWVkaWEtZXhwcmVzc2lvbnM6IChcbiAgJ3NjcmVlbic6ICdzY3JlZW4nLFxuICAncHJpbnQnOiAncHJpbnQnLFxuICAnaGFuZGhlbGQnOiAnaGFuZGhlbGQnLFxuICAnbGFuZHNjYXBlJzogJyhvcmllbnRhdGlvbjogbGFuZHNjYXBlKScsXG4gICdwb3J0cmFpdCc6ICcob3JpZW50YXRpb246IHBvcnRyYWl0KScsXG4gICdyZXRpbmEyeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpLCAobWluLXJlc29sdXRpb246IDJkcHB4KScsXG4gICdyZXRpbmEzeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSwgKG1pbi1yZXNvbHV0aW9uOiAzNTBkcGkpLCAobWluLXJlc29sdXRpb246IDNkcHB4KSdcbikgIWRlZmF1bHQ7XG5cblxuLy8vXG4vLy8gRGVmaW5lcyBhIG51bWJlciB0byBiZSBhZGRlZCBvciBzdWJ0cmFjdGVkIGZyb20gZWFjaCB1bml0IHdoZW4gZGVjbGFyaW5nIGJyZWFrcG9pbnRzIHdpdGggZXhjbHVzaXZlIGludGVydmFsc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBwaXhlbHMgaXMgZGVmaW5lZCBhcyBgMWAgYnkgZGVmYXVsdFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjEyOHB4Jykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAxMjlweCkge31cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgZW1zIGlzIGRlZmluZWQgYXMgYDAuMDFgIGJ5IGRlZmF1bHRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4yMGVtJykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAyMC4wMWVtKSB7fVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciByZW1zIGlzIGRlZmluZWQgYXMgYDAuMWAgYnkgZGVmYXVsdCwgdG8gYmUgdXNlZCB3aXRoIGBmb250LXNpemU6IDYyLjUlO2Bcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4yLjByZW0nKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDIuMXJlbSkge31cbi8vL1xuJHVuaXQtaW50ZXJ2YWxzOiAoXG4gICdweCc6IDEsXG4gICdlbSc6IDAuMDEsXG4gICdyZW0nOiAwLjEsXG4gICcnOiAwXG4pICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBEZWZpbmVzIHdoZXRoZXIgc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllcyBpcyBhdmFpbGFibGUsIHVzZWZ1bCBmb3IgY3JlYXRpbmcgc2VwYXJhdGUgc3R5bGVzaGVldHNcbi8vLyBmb3IgYnJvd3NlcnMgdGhhdCBkb24ndCBzdXBwb3J0IG1lZGlhIHF1ZXJpZXMuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRGlzYWJsZXMgc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllc1xuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAuZm9vIHtcbi8vLyAgICBjb2xvcjogdG9tYXRvO1xuLy8vICB9XG4vLy9cbiRpbS1tZWRpYS1zdXBwb3J0OiB0cnVlICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBTZWxlY3RzIHdoaWNoIGJyZWFrcG9pbnQgdG8gZW11bGF0ZSB3aGVuIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXMgaXMgZGlzYWJsZWQuIE1lZGlhIHF1ZXJpZXMgdGhhdCBzdGFydCBhdCBvclxuLy8vIGludGVyY2VwdCB0aGUgYnJlYWtwb2ludCB3aWxsIGJlIGRpc3BsYXllZCwgYW55IG90aGVycyB3aWxsIGJlIGlnbm9yZWQuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAuZm9vIHtcbi8vLyAgICBjb2xvcjogdG9tYXRvO1xuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIE5PVCBzaG93IGJlY2F1c2UgaXQgZG9lcyBub3QgaW50ZXJjZXB0IHRoZSBkZXNrdG9wIGJyZWFrcG9pbnRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ3RhYmxldCc7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PWRlc2t0b3AnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIE5vIG91dHB1dCAqL1xuLy8vXG4kaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBTZWxlY3RzIHdoaWNoIG1lZGlhIGV4cHJlc3Npb25zIGFyZSBhbGxvd2VkIGluIGFuIGV4cHJlc3Npb24gZm9yIGl0IHRvIGJlIHVzZWQgd2hlbiBtZWRpYSBxdWVyaWVzXG4vLy8gYXJlIG5vdCBzdXBwb3J0ZWQuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludCBhbmQgY29udGFpbnMgb25seSBhY2NlcHRlZCBtZWRpYSBleHByZXNzaW9uc1xuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gICRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nKTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0JywgJ3NjcmVlbicpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgIC5mb28ge1xuLy8vICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBOT1Qgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50IGJ1dCBjb250YWlucyBhIG1lZGlhIGV4cHJlc3Npb24gdGhhdCBpcyBub3QgYWNjZXB0ZWRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICAkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJyk7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcsICdyZXRpbmEyeCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogTm8gb3V0cHV0ICovXG4vLy9cbiRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nLCAncG9ydHJhaXQnLCAnbGFuZHNjYXBlJykgIWRlZmF1bHQ7XG5cbi8vLy9cbi8vLyBDcm9zcy1lbmdpbmUgbG9nZ2luZyBlbmdpbmVcbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuXG4vLy9cbi8vLyBMb2cgYSBtZXNzYWdlIGVpdGhlciB3aXRoIGBAZXJyb3JgIGlmIHN1cHBvcnRlZFxuLy8vIGVsc2Ugd2l0aCBgQHdhcm5gLCB1c2luZyBgZmVhdHVyZS1leGlzdHMoJ2F0LWVycm9yJylgXG4vLy8gdG8gZGV0ZWN0IHN1cHBvcnQuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lc3NhZ2UgLSBNZXNzYWdlIHRvIGxvZ1xuLy8vXG5AZnVuY3Rpb24gaW0tbG9nKCRtZXNzYWdlKSB7XG4gIEBpZiBmZWF0dXJlLWV4aXN0cygnYXQtZXJyb3InKSB7XG4gICAgQGVycm9yICRtZXNzYWdlO1xuICB9IEBlbHNlIHtcbiAgICBAd2FybiAkbWVzc2FnZTtcbiAgICAkXzogbm9vcCgpO1xuICB9XG5cbiAgQHJldHVybiAkbWVzc2FnZTtcbn1cblxuXG4vLy9cbi8vLyBXcmFwcGVyIG1peGluIGZvciB0aGUgbG9nIGZ1bmN0aW9uIHNvIGl0IGNhbiBiZSB1c2VkIHdpdGggYSBtb3JlIGZyaWVuZGx5XG4vLy8gQVBJIHRoYW4gYEBpZiBpbS1sb2coJy4uJykge31gIG9yIGAkXzogaW0tbG9nKCcuLicpYC4gQmFzaWNhbGx5LCB1c2UgdGhlIGZ1bmN0aW9uXG4vLy8gd2l0aGluIGZ1bmN0aW9ucyBiZWNhdXNlIGl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW4gYSBmdW5jdGlvblxuLy8vIGFuZCB1c2UgdGhlIG1peGluIGV2ZXJ5d2hlcmUgZWxzZSBiZWNhdXNlIGl0J3MgbXVjaCBtb3JlIGVsZWdhbnQuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lc3NhZ2UgLSBNZXNzYWdlIHRvIGxvZ1xuLy8vXG5AbWl4aW4gbG9nKCRtZXNzYWdlKSB7XG4gIEBpZiBpbS1sb2coJG1lc3NhZ2UpIHt9XG59XG5cblxuLy8vXG4vLy8gRnVuY3Rpb24gd2l0aCBubyBgQHJldHVybmAgY2FsbGVkIG5leHQgdG8gYEB3YXJuYCBpbiBTYXNzIDMuM1xuLy8vIHRvIHRyaWdnZXIgYSBjb21waWxpbmcgZXJyb3IgYW5kIHN0b3AgdGhlIHByb2Nlc3MuXG4vLy9cbkBmdW5jdGlvbiBub29wKCkge31cblxuLy8vXG4vLy8gRGV0ZXJtaW5lcyB3aGV0aGVyIGEgbGlzdCBvZiBjb25kaXRpb25zIGlzIGludGVyY2VwdGVkIGJ5IHRoZSBzdGF0aWMgYnJlYWtwb2ludC5cbi8vL1xuLy8vIEBwYXJhbSB7QXJnbGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG4vLy9cbi8vLyBAcmV0dXJuIHtCb29sZWFufSAtIFJldHVybnMgdHJ1ZSBpZiB0aGUgY29uZGl0aW9ucyBhcmUgaW50ZXJjZXB0ZWQgYnkgdGhlIHN0YXRpYyBicmVha3BvaW50XG4vLy9cbkBmdW5jdGlvbiBpbS1pbnRlcmNlcHRzLXN0YXRpYy1icmVha3BvaW50KCRjb25kaXRpb25zLi4uKSB7XG4gICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQpO1xuXG4gIEBpZiBub3QgJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUge1xuICAgIEBpZiBpbS1sb2coJ2AjeyRpbS1uby1tZWRpYS1icmVha3BvaW50fWAgaXMgbm90IGEgdmFsaWQgYnJlYWtwb2ludC4nKSB7fVxuICB9XG5cbiAgQGVhY2ggJGNvbmRpdGlvbiBpbiAkY29uZGl0aW9ucyB7XG4gICAgQGlmIG5vdCBtYXAtaGFzLWtleSgkbWVkaWEtZXhwcmVzc2lvbnMsICRjb25kaXRpb24pIHtcbiAgICAgICRvcGVyYXRvcjogZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGNvbmRpdGlvbik7XG4gICAgICAkcHJlZml4OiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKTtcbiAgICAgICR2YWx1ZTogZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGNvbmRpdGlvbiwgJG9wZXJhdG9yKTtcblxuICAgICAgLy8gc2Nzcy1saW50OmRpc2FibGUgU3BhY2VBcm91bmRPcGVyYXRvclxuICAgICAgQGlmICgkcHJlZml4ID09ICdtYXgnIGFuZCAkdmFsdWUgPD0gJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUpIG9yXG4gICAgICAgICAgKCRwcmVmaXggPT0gJ21pbicgYW5kICR2YWx1ZSA+ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlKSB7XG4gICAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSBAZWxzZSBpZiBub3QgaW5kZXgoJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zLCAkY29uZGl0aW9uKSB7XG4gICAgICBAcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gdHJ1ZTtcbn1cblxuLy8vL1xuLy8vIFBhcnNpbmcgZW5naW5lXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gR2V0IG9wZXJhdG9yIG9mIGFuIGV4cHJlc3Npb25cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCBvcGVyYXRvciBmcm9tXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gQW55IG9mIGA+PWAsIGA+YCwgYDw9YCwgYDxgLCBg4omlYCwgYOKJpGBcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRleHByZXNzaW9uKSB7XG4gIEBlYWNoICRvcGVyYXRvciBpbiAoJz49JywgJz4nLCAnPD0nLCAnPCcsICfiiaUnLCAn4omkJykge1xuICAgIEBpZiBzdHItaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAgICAgQHJldHVybiAkb3BlcmF0b3I7XG4gICAgfVxuICB9XG5cbiAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbnNpZGUgYSBmdW5jdGlvbiwgc28gd2UgaGF2ZSB0b1xuICAvLyByZWx5IG9uIHRoZSBgaW0tbG9nKC4uKWAgZnVuY3Rpb24gcmF0aGVyIHRoYW4gdGhlIGBsb2coLi4pYCBtaXhpbi4gQmVjYXVzZVxuICAvLyBmdW5jdGlvbnMgY2Fubm90IGJlIGNhbGxlZCBhbnl3aGVyZSBpbiBTYXNzLCB3ZSBuZWVkIHRvIGhhY2sgdGhlIGNhbGwgaW5cbiAgLy8gYSBkdW1teSB2YXJpYWJsZSwgc3VjaCBhcyBgJF9gLiBJZiBhbnlib2R5IGV2ZXIgcmFpc2UgYSBzY29waW5nIGlzc3VlIHdpdGhcbiAgLy8gU2FzcyAzLjMsIGNoYW5nZSB0aGlzIGxpbmUgaW4gYEBpZiBpbS1sb2coLi4pIHt9YCBpbnN0ZWFkLlxuICAkXzogaW0tbG9nKCdObyBvcGVyYXRvciBmb3VuZCBpbiBgI3skZXhwcmVzc2lvbn1gLicpO1xufVxuXG5cbi8vL1xuLy8vIEdldCBkaW1lbnNpb24gb2YgYW4gZXhwcmVzc2lvbiwgYmFzZWQgb24gYSBmb3VuZCBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IGRpbWVuc2lvbiBmcm9tXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yIGZyb20gYCRleHByZXNzaW9uYFxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIGB3aWR0aGAgb3IgYGhlaWdodGAgKG9yIHBvdGVudGlhbGx5IGFueXRoaW5nIGVsc2UpXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1kaW1lbnNpb24oJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAkb3BlcmF0b3ItaW5kZXg6IHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHBhcnNlZC1kaW1lbnNpb246IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMCwgJG9wZXJhdG9yLWluZGV4IC0gMSk7XG4gICRkaW1lbnNpb246ICd3aWR0aCc7XG5cbiAgQGlmIHN0ci1sZW5ndGgoJHBhcnNlZC1kaW1lbnNpb24pID4gMCB7XG4gICAgJGRpbWVuc2lvbjogJHBhcnNlZC1kaW1lbnNpb247XG4gIH1cblxuICBAcmV0dXJuICRkaW1lbnNpb247XG59XG5cblxuLy8vXG4vLy8gR2V0IGRpbWVuc2lvbiBwcmVmaXggYmFzZWQgb24gYW4gb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvclxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIGBtaW5gIG9yIGBtYXhgXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKSB7XG4gIEByZXR1cm4gaWYoaW5kZXgoKCc8JywgJzw9JywgJ+KJpCcpLCAkb3BlcmF0b3IpLCAnbWF4JywgJ21pbicpO1xufVxuXG5cbi8vL1xuLy8vIEdldCB2YWx1ZSBvZiBhbiBleHByZXNzaW9uLCBiYXNlZCBvbiBhIGZvdW5kIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3QgdmFsdWUgZnJvbVxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvciBmcm9tIGAkZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn0gLSBBIG51bWVyaWMgdmFsdWVcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLXZhbHVlKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgJG9wZXJhdG9yLWluZGV4OiBzdHItaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICR2YWx1ZTogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAkb3BlcmF0b3ItaW5kZXggKyBzdHItbGVuZ3RoKCRvcGVyYXRvcikpO1xuXG4gIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICR2YWx1ZSkge1xuICAgICR2YWx1ZTogbWFwLWdldCgkYnJlYWtwb2ludHMsICR2YWx1ZSk7XG4gIH0gQGVsc2Uge1xuICAgICR2YWx1ZTogdG8tbnVtYmVyKCR2YWx1ZSk7XG4gIH1cblxuICAkaW50ZXJ2YWw6IG1hcC1nZXQoJHVuaXQtaW50ZXJ2YWxzLCB1bml0KCR2YWx1ZSkpO1xuXG4gIEBpZiBub3QgJGludGVydmFsIHtcbiAgICAvLyBJdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluc2lkZSBhIGZ1bmN0aW9uLCBzbyB3ZSBoYXZlIHRvXG4gICAgLy8gcmVseSBvbiB0aGUgYGltLWxvZyguLilgIGZ1bmN0aW9uIHJhdGhlciB0aGFuIHRoZSBgbG9nKC4uKWAgbWl4aW4uIEJlY2F1c2VcbiAgICAvLyBmdW5jdGlvbnMgY2Fubm90IGJlIGNhbGxlZCBhbnl3aGVyZSBpbiBTYXNzLCB3ZSBuZWVkIHRvIGhhY2sgdGhlIGNhbGwgaW5cbiAgICAvLyBhIGR1bW15IHZhcmlhYmxlLCBzdWNoIGFzIGAkX2AuIElmIGFueWJvZHkgZXZlciByYWlzZSBhIHNjb3BpbmcgaXNzdWUgd2l0aFxuICAgIC8vIFNhc3MgMy4zLCBjaGFuZ2UgdGhpcyBsaW5lIGluIGBAaWYgaW0tbG9nKC4uKSB7fWAgaW5zdGVhZC5cbiAgICAkXzogaW0tbG9nKCdVbmtub3duIHVuaXQgYCN7dW5pdCgkdmFsdWUpfWAuJyk7XG4gIH1cblxuICBAaWYgJG9wZXJhdG9yID09ICc+JyB7XG4gICAgJHZhbHVlOiAkdmFsdWUgKyAkaW50ZXJ2YWw7XG4gIH0gQGVsc2UgaWYgJG9wZXJhdG9yID09ICc8JyB7XG4gICAgJHZhbHVlOiAkdmFsdWUgLSAkaW50ZXJ2YWw7XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZTtcbn1cblxuXG4vLy9cbi8vLyBQYXJzZSBhbiBleHByZXNzaW9uIHRvIHJldHVybiBhIHZhbGlkIG1lZGlhLXF1ZXJ5IGV4cHJlc3Npb25cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gcGFyc2Vcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBWYWxpZCBtZWRpYSBxdWVyeVxuLy8vXG5AZnVuY3Rpb24gcGFyc2UtZXhwcmVzc2lvbigkZXhwcmVzc2lvbikge1xuICAvLyBJZiBpdCBpcyBwYXJ0IG9mICRtZWRpYS1leHByZXNzaW9ucywgaXQgaGFzIG5vIG9wZXJhdG9yXG4gIC8vIHRoZW4gdGhlcmUgaXMgbm8gbmVlZCB0byBnbyBhbnkgZnVydGhlciwganVzdCByZXR1cm4gdGhlIHZhbHVlXG4gIEBpZiBtYXAtaGFzLWtleSgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKSB7XG4gICAgQHJldHVybiBtYXAtZ2V0KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pO1xuICB9XG5cbiAgJG9wZXJhdG9yOiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkZXhwcmVzc2lvbik7XG4gICRkaW1lbnNpb246IGdldC1leHByZXNzaW9uLWRpbWVuc2lvbigkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHByZWZpeDogZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcik7XG4gICR2YWx1ZTogZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG5cbiAgQHJldHVybiAnKCN7JHByZWZpeH0tI3skZGltZW5zaW9ufTogI3skdmFsdWV9KSc7XG59XG5cbi8vL1xuLy8vIFNsaWNlIGAkbGlzdGAgYmV0d2VlbiBgJHN0YXJ0YCBhbmQgYCRlbmRgIGluZGV4ZXNcbi8vL1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkbGlzdCAtIExpc3QgdG8gc2xpY2Vcbi8vLyBAcGFyYW0ge051bWJlcn0gJHN0YXJ0IFsxXSAtIFN0YXJ0IGluZGV4XG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRlbmQgW2xlbmd0aCgkbGlzdCldIC0gRW5kIGluZGV4XG4vLy9cbi8vLyBAcmV0dXJuIHtMaXN0fSBTbGljZWQgbGlzdFxuLy8vXG5AZnVuY3Rpb24gc2xpY2UoJGxpc3QsICRzdGFydDogMSwgJGVuZDogbGVuZ3RoKCRsaXN0KSkge1xuICBAaWYgbGVuZ3RoKCRsaXN0KSA8IDEgb3IgJHN0YXJ0ID4gJGVuZCB7XG4gICAgQHJldHVybiAoKTtcbiAgfVxuXG4gICRyZXN1bHQ6ICgpO1xuXG4gIEBmb3IgJGkgZnJvbSAkc3RhcnQgdGhyb3VnaCAkZW5kIHtcbiAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgbnRoKCRsaXN0LCAkaSkpO1xuICB9XG5cbiAgQHJldHVybiAkcmVzdWx0O1xufVxuXG4vLy8vXG4vLy8gU3RyaW5nIHRvIG51bWJlciBjb252ZXJ0ZXJcbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuXG4vLy9cbi8vLyBDYXN0cyBhIHN0cmluZyBpbnRvIGEgbnVtYmVyXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZyB8IE51bWJlcn0gJHZhbHVlIC0gVmFsdWUgdG8gYmUgcGFyc2VkXG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9XG4vLy9cbkBmdW5jdGlvbiB0by1udW1iZXIoJHZhbHVlKSB7XG4gIEBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gJ251bWJlcicge1xuICAgIEByZXR1cm4gJHZhbHVlO1xuICB9IEBlbHNlIGlmIHR5cGUtb2YoJHZhbHVlKSAhPSAnc3RyaW5nJyB7XG4gICAgJF86IGltLWxvZygnVmFsdWUgZm9yIGB0by1udW1iZXJgIHNob3VsZCBiZSBhIG51bWJlciBvciBhIHN0cmluZy4nKTtcbiAgfVxuXG4gICRmaXJzdC1jaGFyYWN0ZXI6IHN0ci1zbGljZSgkdmFsdWUsIDEsIDEpO1xuICAkcmVzdWx0OiAwO1xuICAkZGlnaXRzOiAwO1xuICAkbWludXM6ICgkZmlyc3QtY2hhcmFjdGVyID09ICctJyk7XG4gICRudW1iZXJzOiAoJzAnOiAwLCAnMSc6IDEsICcyJzogMiwgJzMnOiAzLCAnNCc6IDQsICc1JzogNSwgJzYnOiA2LCAnNyc6IDcsICc4JzogOCwgJzknOiA5KTtcblxuICAvLyBSZW1vdmUgKy8tIHNpZ24gaWYgcHJlc2VudCBhdCBmaXJzdCBjaGFyYWN0ZXJcbiAgQGlmICgkZmlyc3QtY2hhcmFjdGVyID09ICcrJyBvciAkZmlyc3QtY2hhcmFjdGVyID09ICctJykge1xuICAgICR2YWx1ZTogc3RyLXNsaWNlKCR2YWx1ZSwgMik7XG4gIH1cblxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIHN0ci1sZW5ndGgoJHZhbHVlKSB7XG4gICAgJGNoYXJhY3Rlcjogc3RyLXNsaWNlKCR2YWx1ZSwgJGksICRpKTtcblxuICAgIEBpZiBub3QgKGluZGV4KG1hcC1rZXlzKCRudW1iZXJzKSwgJGNoYXJhY3Rlcikgb3IgJGNoYXJhY3RlciA9PSAnLicpIHtcbiAgICAgIEByZXR1cm4gdG8tbGVuZ3RoKGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpLCBzdHItc2xpY2UoJHZhbHVlLCAkaSkpXG4gICAgfVxuXG4gICAgQGlmICRjaGFyYWN0ZXIgPT0gJy4nIHtcbiAgICAgICRkaWdpdHM6IDE7XG4gICAgfSBAZWxzZSBpZiAkZGlnaXRzID09IDAge1xuICAgICAgJHJlc3VsdDogJHJlc3VsdCAqIDEwICsgbWFwLWdldCgkbnVtYmVycywgJGNoYXJhY3Rlcik7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkZGlnaXRzOiAkZGlnaXRzICogMTA7XG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgbWFwLWdldCgkbnVtYmVycywgJGNoYXJhY3RlcikgLyAkZGlnaXRzO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gaWYoJG1pbnVzLCAtJHJlc3VsdCwgJHJlc3VsdCk7XG59XG5cblxuLy8vXG4vLy8gQWRkIGAkdW5pdGAgdG8gYCR2YWx1ZWBcbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkdmFsdWUgLSBWYWx1ZSB0byBhZGQgdW5pdCB0b1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkdW5pdCAtIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgdW5pdFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfSAtIGAkdmFsdWVgIGV4cHJlc3NlZCBpbiBgJHVuaXRgXG4vLy9cbkBmdW5jdGlvbiB0by1sZW5ndGgoJHZhbHVlLCAkdW5pdCkge1xuICAkdW5pdHM6ICgncHgnOiAxcHgsICdjbSc6IDFjbSwgJ21tJzogMW1tLCAnJSc6IDElLCAnY2gnOiAxY2gsICdwYyc6IDFwYywgJ2luJzogMWluLCAnZW0nOiAxZW0sICdyZW0nOiAxcmVtLCAncHQnOiAxcHQsICdleCc6IDFleCwgJ3Z3JzogMXZ3LCAndmgnOiAxdmgsICd2bWluJzogMXZtaW4sICd2bWF4JzogMXZtYXgpO1xuXG4gIEBpZiBub3QgaW5kZXgobWFwLWtleXMoJHVuaXRzKSwgJHVuaXQpIHtcbiAgICAkXzogaW0tbG9nKCdJbnZhbGlkIHVuaXQgYCN7JHVuaXR9YC4nKTtcbiAgfVxuXG4gIEByZXR1cm4gJHZhbHVlICogbWFwLWdldCgkdW5pdHMsICR1bml0KTtcbn1cblxuLy8vXG4vLy8gVGhpcyBtaXhpbiBhaW1zIGF0IHJlZGVmaW5pbmcgdGhlIGNvbmZpZ3VyYXRpb24ganVzdCBmb3IgdGhlIHNjb3BlIG9mXG4vLy8gdGhlIGNhbGwuIEl0IGlzIGhlbHBmdWwgd2hlbiBoYXZpbmcgYSBjb21wb25lbnQgbmVlZGluZyBhbiBleHRlbmRlZFxuLy8vIGNvbmZpZ3VyYXRpb24gc3VjaCBhcyBjdXN0b20gYnJlYWtwb2ludHMgKHJlZmVycmVkIHRvIGFzIHR3ZWFrcG9pbnRzKVxuLy8vIGZvciBpbnN0YW5jZS5cbi8vL1xuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vXG4vLy8gQHBhcmFtIHtNYXB9ICR0d2Vha3BvaW50cyBbKCldIC0gTWFwIG9mIHR3ZWFrcG9pbnRzIHRvIGJlIG1lcmdlZCB3aXRoIGAkYnJlYWtwb2ludHNgXG4vLy8gQHBhcmFtIHtNYXB9ICR0d2Vhay1tZWRpYS1leHByZXNzaW9ucyBbKCldIC0gTWFwIG9mIHR3ZWFrZWQgbWVkaWEgZXhwcmVzc2lvbnMgdG8gYmUgbWVyZ2VkIHdpdGggYCRtZWRpYS1leHByZXNzaW9uYFxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCB0aGUgZ2xvYmFsIGJyZWFrcG9pbnRzIHdpdGggYSB0d2Vha3BvaW50XG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoKCdjdXN0b20nOiA2NzhweCkpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnLCAnPD1jdXN0b20nKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIHRoZSBnbG9iYWwgbWVkaWEgZXhwcmVzc2lvbnMgd2l0aCBhIGN1c3RvbSBvbmVcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnM6ICgnYWxsJzogJ2FsbCcpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnYWxsJywgJz5waG9uZScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgYm90aCBjb25maWd1cmF0aW9uIG1hcHNcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgoJ2N1c3RvbSc6IDY3OHB4KSwgKCdhbGwnOiAnYWxsJykpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCdhbGwnLCAnPnBob25lJywgJzw9Y3VzdG9tJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG5AbWl4aW4gbWVkaWEtY29udGV4dCgkdHdlYWtwb2ludHM6ICgpLCAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnM6ICgpKSB7XG4gIC8vIFNhdmUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGdsb2JhbC1icmVha3BvaW50czogJGJyZWFrcG9pbnRzO1xuICAkZ2xvYmFsLW1lZGlhLWV4cHJlc3Npb25zOiAkbWVkaWEtZXhwcmVzc2lvbnM7XG5cbiAgLy8gVXBkYXRlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRicmVha3BvaW50czogbWFwLW1lcmdlKCRicmVha3BvaW50cywgJHR3ZWFrcG9pbnRzKSAhZ2xvYmFsO1xuICAkbWVkaWEtZXhwcmVzc2lvbnM6IG1hcC1tZXJnZSgkbWVkaWEtZXhwcmVzc2lvbnMsICR0d2Vhay1tZWRpYS1leHByZXNzaW9ucykgIWdsb2JhbDtcblxuICBAY29udGVudDtcblxuICAvLyBSZXN0b3JlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRicmVha3BvaW50czogJGdsb2JhbC1icmVha3BvaW50cyAhZ2xvYmFsO1xuICAkbWVkaWEtZXhwcmVzc2lvbnM6ICRnbG9iYWwtbWVkaWEtZXhwcmVzc2lvbnMgIWdsb2JhbDtcbn1cblxuLy8vL1xuLy8vIGluY2x1ZGUtbWVkaWEgcHVibGljIGV4cG9zZWQgQVBJXG4vLy8gQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8vXG5cblxuLy8vXG4vLy8gR2VuZXJhdGVzIGEgbWVkaWEgcXVlcnkgYmFzZWQgb24gYSBsaXN0IG9mIGNvbmRpdGlvbnNcbi8vL1xuLy8vIEBwYXJhbSB7QXJnbGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHNpbmdsZSBzZXQgYnJlYWtwb2ludFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCB0d28gc2V0IGJyZWFrcG9pbnRzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnLCAnPD10YWJsZXQnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGN1c3RvbSB2YWx1ZXNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49MzU4cHgnLCAnPDg1MHB4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBzZXQgYnJlYWtwb2ludHMgd2l0aCBjdXN0b20gdmFsdWVzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+ZGVza3RvcCcsICc8PTEzNTBweCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzdGF0aWMgZXhwcmVzc2lvblxuLy8vICBAaW5jbHVkZSBtZWRpYSgncmV0aW5hMngnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBNaXhpbmcgZXZlcnl0aGluZ1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj0zNTBweCcsICc8dGFibGV0JywgJ3JldGluYTN4JykgeyB9XG4vLy9cbkBtaXhpbiBtZWRpYSgkY29uZGl0aW9ucy4uLikge1xuICAvLyBzY3NzLWxpbnQ6ZGlzYWJsZSBTcGFjZUFyb3VuZE9wZXJhdG9yXG4gIEBpZiAoJGltLW1lZGlhLXN1cHBvcnQgYW5kIGxlbmd0aCgkY29uZGl0aW9ucykgPT0gMCkgb3JcbiAgICAgIChub3QgJGltLW1lZGlhLXN1cHBvcnQgYW5kIGltLWludGVyY2VwdHMtc3RhdGljLWJyZWFrcG9pbnQoJGNvbmRpdGlvbnMuLi4pKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH0gQGVsc2UgaWYgKCRpbS1tZWRpYS1zdXBwb3J0IGFuZCBsZW5ndGgoJGNvbmRpdGlvbnMpID4gMCkge1xuICAgIEBtZWRpYSAje3VucXVvdGUocGFyc2UtZXhwcmVzc2lvbihudGgoJGNvbmRpdGlvbnMsIDEpKSl9IHtcbiAgICAgIC8vIFJlY3Vyc2l2ZSBjYWxsXG4gICAgICBAaW5jbHVkZSBtZWRpYShzbGljZSgkY29uZGl0aW9ucywgMikuLi4pIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuZmx1aWRWaWRlbyB7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0aGVpZ2h0OiAwO1xuXHRwYWRkaW5nLWJvdHRvbTogNTYuMjUlO1xuXG5cdC8vIDQ6MyBhc3BlY3QgcmF0aW9cblx0Ji0tNC0zIHtcblx0XHRwYWRkaW5nLWJvdHRvbTogNzUlO1xuXHR9XG59XG5cbi5mbHVpZFZpZGVvLWl0ZW0sXG4uZmx1aWRWaWRlbyBpZnJhbWUge1xucG9zaXRpb246IGFic29sdXRlO1xudG9wOiAwO1xubGVmdDogMDtcbndpZHRoOiAxMDAlO1xuaGVpZ2h0OiAxMDAlO1xufVxuIiwiLyoqXG4gKiBUaGUgS2lja29mZiBGbGV4Ym94IEdyaWRcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogRGVmYXVsdCBncmlkIGNsYXNzZXNcbiAqIEdyaWQgZ3V0dGVyIG9wdGlvbnNcbiAqIE1vZGlmaWVyIENsYXNzZXMgKGNvbHVtbiBoZWlnaHQgYW5kIGNlbGwgYWxpZ25tZW50KVxuICogTGVnYWN5IGZhbGxiYWNrcyBmb3IgZmxleGJveFxuICogR3JpZCBzcGFuIGNsYXNzZXNcbiAqIEJyZWFrcG9pbnQgc3RhY2tpbmdcbiAqL1xuXG5AaW1wb3J0IFwia2lja29mZi11dGlsc1wiOyAvLyBodHRwczovL2dpdGh1Yi5jb20vVHJ5S2lja29mZi9raWNrb2ZmLXV0aWxzLnNjc3NcblxuLyogSW1wb3J0IEdyaWQgaGVscGVycyBhbmQgbWl4aW5zICovXG5AaW1wb3J0ICdncmlkLXZhcmlhYmxlcyc7XG5AaW1wb3J0IFwiaW5jbHVkZS1tZWRpYVwiOyAvLyBodHRwOi8vaW5jbHVkZS1tZWRpYS5jb21cbkBpbXBvcnQgJ2dyaWQtaGVscGVycyc7XG5cbi8qKlxuICogQmFzaWMgVXNhZ2U6XG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblx0PGRpdiBjbGFzcz1cImdcIj5cblx0XHQ8ZGl2IGNsYXNzPVwiZy1jb2wgZy1zcGFuNCBnLXNwYW42LS1taWRcIj48L2Rpdj5cblx0XHQ8ZGl2IGNsYXNzPVwiZy1jb2wgZy1zcGFuOCBnLXNwYW42LS1taWRcIj48L2Rpdj5cblx0PC9kaXY+XG4gKi9cbi5nIHtcblx0ZGlzcGxheTogZmxleCAhaW1wb3J0YW50OyAvLyBmb3JjZSBkaXNwbGF5OiBmbGV4LCBhcyBvdGhlcndpc2UgbWF5IGNsYXNoIHdpdGggb3RoZXIgY29tcG9uZW50cyBkaXNwbGF5IHByb3BlcnRpZXMgKGFuZCB0aGUgZ3JpZCB3b27igJl0IHdvcmspXG5cdGZsZXgtd3JhcDogd3JhcDtcblx0ZmxleC1kaXJlY3Rpb246IHJvdztcblxuXHQvLyBhbnkgaW1hZ2UgaW4gdGhlIGdyaWQgc2hvdWxkIGhhdmUgYSBtYXgtd2lkdGggb2YgaXTigJlzIGNvbnRhaW5lclxuICAgICYgaW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIH1cbn1cblxuXHQuZy1jb2wge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8vIEVuc3VyZSBib3JkZXItYm94IGlzIHNwZWNpZmllZCBhcyB0aGUgZ3JpZCBwcm9wb3J0aW9ucyByZWx5IG9uIHRoaXNcblxuXHRcdC8vIEJ5IGRlZmF1bHQsIGV2ZW5seSBkaXN0cmlidXRlIGNvbHVtbnNcblx0XHQvLyBuLmIuIHRvIHN1cHBvcnQgbm9uLWZsZXhib3ggYnJvd3NlcnMsIHlvdSBzaG91bGQgYWx3YXlzIGFkZCAuZy1zcGFueFxuXHRcdGZsZXg6IDEgMCAwO1xuXHRcdG1pbi13aWR0aDogMDsgLy8gdGhpcyBpcyB0byBtYWtlIHN1cmUgdGhhdCBsb25nIHdvcmRzIGRvbuKAmXQgZ2V0IGN1dCBvZmYsIGJ1dCB3cmFwIGFzIGV4cGVjdGVkXG5cdH1cblxuLyoqXG4gKiBHdXR0ZXIgY2FsY3Mg4oCTIGFwcGxpZWQgdG8gZ3JpZCBjb2x1bW5zIGluIG91ciBncmlkIChkaXJlY3QgZGVzY2VuZGFudHMgb25seSlcbiAqIERlZmF1bHQ6IHBpeGVscyAoY2FuIGxvb2sgYXQgY2hhbmdpbmcgdG8gcGVyY2VudGFnZSlcbiAqIFVzYWdlOiBndXR0ZXJDYWxjKCkgb3IgZ3V0dGVyQ2FsYyhmYWxzZSlcbiAqL1xuXG4vLyBUd28gdHlwZXMgb2YgZ3V0dGVyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAuZy0tZ3V0dGVyXG4vLyBVc2VzIHBhZGRpbmcgYW5kIGZpeGVkIGd1dHRlciBweCB2YWx1ZXMuXG4vLyBQcm9zID0gTWFyZ2lucyB3aWxsIGJlIGVxdWFsIHRvIHlvdXIgJGdyaWQtZ3V0dGVyLXdpZHRoIChldmVuIGF0IGxhcmdlci9zbWFsbGVyIGNvbnRhaW5lciBzaXplcyksIGlmIHRoYXTigJlzIHdoYXQgeW91IHJlcXVpcmVcbi8vIENvbnMgPSBDYW7igJl0IHNldCBhIGJvcmRlciBkaXJlY3RseSB0byBncmlkIGNvbnRhaW5lcnMsIGFzIHVzZXMgbmVnYXRpdmUgbWFyZ2lucy4gIE5lZWQgZXh0cmEgZWxlbWVudCB0byBnZXQgdGhlIGRlc2lyZWQgZWZmZWN0XG5cbiRnLWd1dHRlci1oYWxmOiAoJGdyaWQtZ3V0dGVyLXdpZHRoIC8gMikgKyBweDtcblxuLmctLWd1dHRlciB7XG5cdG1hcmdpbi1sZWZ0OiAtJGctZ3V0dGVyLWhhbGY7XG5cdG1hcmdpbi1yaWdodDogLSRnLWd1dHRlci1oYWxmO1xuXG5cdCYgPiAuZy1jb2wge1xuXHRcdHBhZGRpbmctbGVmdDogJGctZ3V0dGVyLWhhbGY7XG5cdFx0cGFkZGluZy1yaWdodDogJGctZ3V0dGVyLWhhbGY7XG5cdH1cbn1cblxuLy8gLmctLWd1dHRlci0tc2NhbGVkXG4vLyBVc2VzIG1hcmdpbiBhbmQgcGVyY2VudGFnZSB2YWx1ZXMuICBTY2FsZXMgdGhlIG1hcmdpbiBhcyB0aGUgdmlld3BvcnQgZ2V0cyBzbWFsbGVyIChmb3IgUldEKVxuLy8gUHJvID0gR29vZCBmb3Igd2hlbiB5b3VyIGNvbnRhaW5lciBpcyBhbHdheXMgdGhlICRsYXlvdXQtbWF4LXdpZHRoLiAgTWVhbnMgY2FuIGFwcGx5IGJvcmRlcnMgdG8gZ3JpZCBlbGVtZW50cyB3aXRob3V0IG1vcmUgbWFya3VwXG4vLyBDb25zID0gSWYgY29udGFpbmVyIGlzbuKAmXQgc2FtZSBzaXplIGFzICRsYXlvdXQtbWF4LXdpZHRoLCB0aGUgZ3V0dGVycyB3aWxsIGFsc28gc2NhbGUgKHNvIGxhcmdlciBjb250YWluZXIgd2lkdGggPT09IGxhcmdlciBndXR0ZXJzIGFuZCB2aWNlIHZlcnNhKVxuXG4uZy0tZ3V0dGVyLS1zY2FsZWQge1xuXHQmID4gLmctY29sIHtcblx0XHRtYXJnaW4tbGVmdDoga28tZ3V0dGVyQ2FsYygpO1xuXHRcdG1hcmdpbi1yaWdodDogMDtcblxuXHRcdCY6Zmlyc3QtY2hpbGQge1xuXHRcdFx0bWFyZ2luLWxlZnQ6IDA7XG5cdFx0fVxuXHR9XG59XG5cbi5nLS1zdGFjayB7XG5cdCYgPiAuZy1jb2wge1xuXHRcdGZsZXgtYmFzaXM6IDEwMCU7XG5cdFx0bWF4LXdpZHRoOiAxMDAlO1xuXHR9XG4gICAgJi5nLS1ndXR0ZXItLXNjYWxlZCA+IC5nLWNvbCB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIH1cbn1cblxuXG4vKipcbiAqIC5nLS1lcXVhbEhlaWdodCDigJMgRXF1YWwgSGVpZ2h0IENoaWxkIEVsZW1lbnRzXG4gKi9cbi5nLS1lcXVhbEhlaWdodCB7XG5cdD4gLmctY29sIHtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXG5cdFx0JiA+ICoge1xuXHRcdFx0ZmxleC1iYXNpczogMTAwJTtcblx0XHR9XG5cdH1cbn1cblxuXG4vKipcbiAqIEFsaWdubWVudFxuICogTW9kaWZpZXIgY2xhc3NlcyB0byBtb3ZlIG91ciBncmlkIGVsZW1lbnRzIGFyb3VuZFxuICovXG4uZy0tYWxpZ25Ub3AgICAgICAgIHsgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7IH1cbi5nLS1hbGlnbkJvdHRvbSAgICAgeyBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cbi5nLS1hbGlnblNlbGZCb3R0b20geyBhbGlnbi1zZWxmOiBmbGV4LWVuZDsgfVxuLmctLWFsaWduUmlnaHQgICAgICB7IGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbi5nLS1hbGlnbkNlbnRlciAgICAgeyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuLmctLWFsaWduQ2VudGVyLS12ICB7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuXG4vKipcbiAqIENlbnRlcmluZ1xuICogQ2VudGVycyBhbiBpbmRpdmlkdWFsIGNvbHVtbiwgcmF0aGVyIHRoYW4gdGhlIGVudGlyZSBncmlkXG4gKi9cbi5nLWNvbC0tY2VudGVyZWQge1xuXHRtYXJnaW46IDAgYXV0bztcbn1cblxuLyoqXG4gKiBTaHJpbmtpbmcgQ29udGVudFxuICogU2hyaW5rIGEgLmctY29sIGRvd24gdG8gb25seSB0aGUgc3BhY2UgaXQgbmVlZHMgKGZsZXhib3ggb25seSlcbiAqXG4gKiBFZmZlY3RpdmVseSBqdXN0IGNoYW5nZXMgaXTigJlzIHZhbHVlcyBiYWNrIHRvIHRoZSBkZWZhdWx0IGZsZXggcHJvcGVydGllc1xuICovXG4uZy1jb2wtLXNocmluayB7XG5cdGZsZXg6IDAgMSBhdXRvO1xufVxuXG5cbi8qKlxuICogQWRkIGZhbGxiYWNrcyBmb3Igbm9uLWZsZXhib3ggc3VwcG9ydGluZyBicm93c2VycyAoZm9yIGV4YW1wbGUsIElFOC85KVxuICovXG5AaWYgJHVzZS1sZWdhY3ktZ3JpZCB7XG5cdC5uby1mbGV4Ym94IHtcblx0XHQuZyB7XG5cdFx0XHRkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyAvLyBuZWVkIHRoaXMgZm9yIG9sZCBTYWZhcmksIGFzIGl0IHRoaW5rcyBpdCB1bmRlcnN0YW5kcyBmbGV4Ym94IGJ1dCBkb2VzbuKAmXQgcmVhbGx5XG5cdFx0XHRAaW5jbHVkZSBrby1jbGVhcmZpeDtcblx0XHR9XG5cblx0XHQuZy1jb2wge1xuXHRcdFx0ZmxvYXQ6IGxlZnQ7XG5cdFx0XHRtaW4taGVpZ2h0OiAxcHg7XG5cdFx0XHRjbGVhcjogbm9uZTtcblx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdFx0fVxuXG5cdFx0LmctLXN0YWNrIC5nLWNvbCB7XG5cdFx0XHR3aWR0aDogMTAwJTtcblx0XHR9XG5cblx0XHQuZy0tZXF1YWxIZWlnaHQge1xuXHRcdFx0PiAuZy1jb2wge1xuXHRcdFx0XHRkaXNwbGF5OiBibG9jazsgLy8gYWdhaW4gbmVlZCB0byBvdmVyaWRlIG9sZCBzYWZhcmkgdGhpbmtpbmcgaXQga25vd3MgZmxleGJveCwgd2hlbiBpdCBkb2VzbuKAmXQgcmVhbGx5XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdC8vZW5kIC5uby1mbGV4Ym94XG59XG5cblxuXG4vKipcbiAqIEdyaWQgU3BhbiBjbGFzc2VzIChmb3IgZGlmZmVyZW50IGJyZWFrcG9pbnRzKVxuICpcbiAqIEFwcGxpZWQgYnkgdXNpbmcgLmctc3BhbnggdG8gLmctY29sIGVsZW1lbnRzLCB3aGVyZSB4IGlzIHRoZSBudW1iZXIgb2YgY29sdW1uc1xuICovXG5cbkBpbmNsdWRlIGtvLWdyaWRTcGFuSGVscGVyOyAvLyBEZWZhdWx0IHNpemVzXG5cbi8vIFJlc3BvbnNpdmUgc2l6ZXMgb25seSBnZW5lcmF0ZWQgaWYgJHJlc3BvbnNpdmUtZ3JpZC1zaXplcyA9PSB0cnVlXG5AaWYgJHJlc3BvbnNpdmUtZ3JpZC1zaXplcyB7XG5cdC8vbG9vcCB0aHJvdWdoIG91ciBicmVha3BvaW50c1xuXHRAZWFjaCAkbmFtZSwgJHZhbHVlIGluICRicmVha3BvaW50cyB7XG5cdFx0QGluY2x1ZGUgbWVkaWEoJz49I3skdmFsdWV9Jykge1xuXHRcdFx0QGluY2x1ZGUga28tZ3JpZFNwYW5IZWxwZXIoJG5hbWUpO1xuXHRcdH1cblx0fVxufVxuXG5AZWFjaCAkbmFtZSwgJHZhbHVlIGluICRicmVha3BvaW50cyB7XG5cdC5nLS1zdGFjay0tI3skbmFtZX0ge1xuXHRcdEBpbmNsdWRlIGtvLWdyaWQtc3RhY2soJG5hbWUpO1xuXHR9XG59XG4iLCIvKipcbiAqIEdyaWQgVmFyaWFibGVzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIFRoZXNlIGFyZSBkZWZpbmVkIGhlcmUgc28gdGhhdCB0aGUgZ3JpZCBjYW4gcnVuIGFzIGEgc3RhbmRhbG9uZSBtb2R1bGUgKG91dHNpZGUgb2YgS2lja29mZiksXG4gKiBhcyB3ZWxsIGFzIGFsbG93aW5nIHRoZXNlIGZpbGVzIHRvIGJlIGdlbmVyYXRlZCBpbnRvIHN0YW5kYXJkIENTUy5cbiAqXG4gKiBXaGVuIGltcG9ydGluZyB0aGUgZ3JpZCBpbnRvIHlvdXIgb3duIHByb2plY3QsIGNvcHkgdGhlIHZhcmlhYmxlcyBmcm9tIHRoaXMgZmlsZSBpbnRvIHlvdXIgb3duIHZhcmlhYmxlcy5zY3NzXG4gKiBUaGV5IHdpbGwgdGhlbiBvdmVycmlkZSB0aGUgdmFsdWVzIHNwZWNpZmllZCBoZXJlIChhcyBsb25nIGFzIHRoZSBncmlkIGlzIGltcG9ydGVkIGJlbG93IHdoZXJlIHlvdXIgb3duIHZhcmlhYmxlcyBhcmUgZGVmaW5lZCkuXG4gKi9cblxuJGJyZWFrcG9pbnRzOiBrby1tYXAtdG8tZW0oKFxuXHRuYXJyb3cgICAgICAgICAgICAgICAgICA6IDQwMHB4LFxuXHRtaWQgICAgICAgICAgICAgICAgICAgICA6IDc1MHB4LFxuXHR3aWRlICAgICAgICAgICAgICAgICAgICA6IDEwMDBweCxcblx0aHVnZSAgICAgICAgICAgICAgICAgICAgOiAxMjUwcHhcbiksIDE2KSAhZGVmYXVsdDtcblxuXG4vLyBTZXR1cCBsYXlvdXQgbWF4LXdpZHRoXG4kbGF5b3V0LW1heC13aWR0aCAgICAgICAgICAgICA6IDEwMDAgIWRlZmF1bHQ7IC8vIFtpbiBwaXhlbHNdXG5cbi8vIEdyaWQgc3BlY2lmaWMgdmFyaWFibGVzXG4kZ3JpZC1jb2x1bW4tY291bnQgICAgICAgIDogMTIgICAgIWRlZmF1bHQ7IC8vIFRvdGFsIGNvbHVtbiBjb3VudFxuJGdyaWQtZ3V0dGVyLXdpZHRoICAgICAgICA6IDIwICAgICFkZWZhdWx0OyAvLyBbaW4gcGl4ZWxzXVxuXG4vL1NldHRpbmdzIGhlcmUgb3ZlcnJpZGUgJiBhZmZlY3QgdGhlIGdyaWQgY2xhc3NlcyBvdXRwdXRcbiRyZXNwb25zaXZlLWdyaWQtc2l6ZXMgICAgOiB0cnVlICAhZGVmYXVsdDsgLy8gRGlzYWJsZSB0aGlzIGlmIHlvdSBkb24ndCB3YW50IGdyaWQgc2l6ZXMgZm9yIGVhY2ggYnJlYWtwb2ludFxuJHVzZS1sZWdhY3ktZ3JpZCAgICAgICAgICA6IHRydWUgICFkZWZhdWx0OyAvLyBEaXNhYmxlIHRoaXMgaWYgeW91IGRvbuKAmXQgd2FudCB0byBvdXRwdXQgLm5vLWZsZXhib3ggY2xhc3NlcyBmb3Igb2xkZXIgYnJvd3NlcnMgdG8gdXNlXG4iLCIvKipcbiAqIEtpY2tvZmYgZ3JpZCBoZWxwZXJzXG4gKi9cblxuQG1peGluIGtvLWdyaWRTcGFuSGVscGVyKCRicmVha3BvaW50OiBudWxsKSB7XG5cdCRzdWZmaXg6IG51bGw7XG5cblx0QGlmICRicmVha3BvaW50IHtcblx0XHQkc3VmZml4OiAtLSN7JGJyZWFrcG9pbnR9O1xuXHR9XG5cblx0QGZvciAkaSBmcm9tIDEgdG8gJGdyaWQtY29sdW1uLWNvdW50ICsgMSB7XG5cdFx0JGNvbC13aWR0aDoga28tZ3JpZENvbHVtbldpZHRoQ2FsYygkaSwgdHJ1ZSk7XG5cdFx0JGNvbC13aWR0aC1ndXR0ZXJlZDoga28tZ3JpZENvbHVtbldpZHRoQ2FsYygkaSwgdHJ1ZSwgdHJ1ZSk7XG5cblx0XHQuZy1zcGFuI3skaX0jeyRzdWZmaXh9IHtcblx0XHRcdGZsZXgtYmFzaXM6ICRjb2wtd2lkdGggIWltcG9ydGFudDtcblx0XHRcdGZsZXgtZ3JvdzogMDtcblx0XHRcdC8vIG5lZWQgdGhpcyBuZXh0IGxpbmUgZm9yIGEgd2VpcmQgSUU5LzEwLzExIGJ1Zywgd2hlcmUgYWRkaW5nIHBhZGRpbmcgdG8gYSBmbGV4LWl0ZW0gY2FuIHRocm93IG91dCB0aGUgZmxleC1iYXNpcyBhbmQgd3JhcCB0aGUgY29sdW1ucyBpbmNvcnJlY3RseVxuXHRcdFx0Ly8gc2VlIHRoaXMgZm9yIG1vcmUgZGV0YWlsIOKAkyBodHRwczovL2dpdGh1Yi5jb20vcGhpbGlwd2FsdG9uL2ZsZXhidWdzL2lzc3Vlcy8zXG5cdFx0XHRtYXgtd2lkdGg6ICRjb2wtd2lkdGggIWltcG9ydGFudDtcblxuXHRcdFx0Ly8gbWF5YmUgaGF2ZSBhbiBvcHRpb24gdG8gaW5jbHVkZSB0aGlzIGluIGEgdmFyaWFibGVcblx0XHRcdCYuZy1ob2xkV2lkdGgjeyRzdWZmaXh9IHtcblx0XHRcdFx0QGluY2x1ZGUga28tcGl4ZWxNaW5XaWR0aCgkaSk7XG5cblx0XHRcdFx0LmctLWd1dHRlci0tc2NhbGVkICYge1xuXHRcdFx0XHRcdEBpbmNsdWRlIGtvLXBpeGVsTWluV2lkdGgoJGksIHRydWUpOyAvLyBnZXQgdGhlIGhvbGQtd2lkdGggbWludXMgdGhlIGd1dHRlclxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC5nLS1ndXR0ZXItLXNjYWxlZCAmIHtcblx0XHRcdFx0ZmxleC1iYXNpczogJGNvbC13aWR0aC1ndXR0ZXJlZCAhaW1wb3J0YW50O1xuXHRcdFx0XHQvLyBuZWVkIHRoaXMgbmV4dCBsaW5lIGZvciBhIHdlaXJkIElFOS8xMC8xMSBidWcsIHdoZXJlIGFkZGluZyBwYWRkaW5nIHRvIGEgZmxleC1pdGVtIGNhbiB0aHJvdyBvdXQgdGhlIGZsZXgtYmFzaXMgYW5kIHdyYXAgdGhlIGNvbHVtbnMgaW5jb3JyZWN0bHlcblx0XHRcdFx0Ly8gc2VlIHRoaXMgZm9yIG1vcmUgZGV0YWlsIOKAkyBodHRwczovL2dpdGh1Yi5jb20vcGhpbGlwd2FsdG9uL2ZsZXhidWdzL2lzc3Vlcy8zXG5cdFx0XHRcdG1heC13aWR0aDogJGNvbC13aWR0aC1ndXR0ZXJlZDtcblxuXHRcdFx0XHRAaWYgJGkgPCAkZ3JpZC1jb2x1bW4tY291bnQge1xuXHRcdFx0XHRcdG1hcmdpbi1sZWZ0OiBrby1ndXR0ZXJDYWxjKCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0QGVsc2Uge1xuXHRcdFx0XHRcdG1hcmdpbi1sZWZ0OiAwO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdEBpZiAkdXNlLWxlZ2FjeS1ncmlkIHtcblxuXHRcdFx0XHQvLyB1c2VkIGluIGNvbWJpbmF0aW9uIHdpdGggbW9kZXJuaXpyIG9yIGFub3RoZXIgZGV0ZWN0aW9uIG1lY2hhbmlzbVxuXHRcdFx0XHQubm8tZmxleGJveCAmIHtcblx0XHRcdFx0XHR3aWR0aDoga28tZ3JpZENvbHVtbldpZHRoQ2FsYygkaSwgdHJ1ZSkgIWltcG9ydGFudDtcblx0XHRcdFx0fVxuXG5cdFx0XHR9XG5cdFx0XHQvLyBAaWYgJHVzZS1sZWdhY3ktZ3JpZFxuXG5cdFx0fVxuXHRcdEBpZiAkaSA8IDEyIHtcblx0XHRcdC5nLW9mZnNldCN7JGl9I3skc3VmZml4fSB7XG5cdFx0XHRcdG1hcmdpbi1sZWZ0OiAkY29sLXdpZHRoICFpbXBvcnRhbnQ7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbi8qKlxuICogR3JpZCBzdGFja2luZ1xuICogU3RhY2sgZ3JpZHMgYmFzZWQgb24gYSBnaXZlbiBicmVha3BvaW50XG4gKlxuICogVXNhZ2U6XG4gKiAuZy0tc3RhY2stLW5hcnJvd1xuICogLmctLXN0YWNrLS13aWRlXG4gKi9cbkBtaXhpbiBrby1ncmlkLXN0YWNrKCRicmVha3BvaW50OiAnd2lkZScpIHtcblx0QGluY2x1ZGUgbWVkaWEoJzwjeyRicmVha3BvaW50fScpIHtcblx0XHRmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG5cblx0XHQmID4gLmctY29sIHtcblx0XHRcdGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDtcblx0XHRcdG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuXHRcdFx0bWFyZ2luLWxlZnQ6IDA7IC8vIGdldCByaWQgb2YgYW55IGdyaWQgbWFyZ2lucyBpZiB0aGVyZSBhcmUgYW55XG5cblx0XHRcdEBpZiAkdXNlLWxlZ2FjeS1ncmlkIHtcblx0XHRcdFx0Lm5vLWZsZXhib3ggJiB7XG5cdFx0XHRcdFx0d2lkdGg6IDEwMCUgIWltcG9ydGFudDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG4vKipcbiAqIEd1dHRlciBDYWxjdWxhdGlvbnNcbiAqIERlZmF1bHQ6IHBlcmNlbnRcbiAqIFVzYWdlOiBrby1ndXR0ZXJDYWxjKCkgb3Iga28tZ3V0dGVyQ2FsYyhmYWxzZSlcbiAqIFdoZW4gc2hvdy11bml0IGlzIHRydWUsIHJldHVybnMgdGhlIHBlcmNlbnRhZ2UsIG90aGVyd2lzZSByZXR1cm4gYSBkZWNpbWFsXG4gKi9cbkBmdW5jdGlvbiBrby1ndXR0ZXJDYWxjKCRzaG93LXVuaXQ6IHRydWUpIHtcblx0QGlmICRzaG93LXVuaXQgPT0gdHJ1ZSB7XG5cdFx0QHJldHVybiBwZXJjZW50YWdlKGtvLXN0cmlwLXVuaXRzKCRncmlkLWd1dHRlci13aWR0aCkgLyBrby1zdHJpcC11bml0cygkbGF5b3V0LW1heC13aWR0aCkpO1xuXHR9IEBlbHNlIHtcblx0XHRAcmV0dXJuICRncmlkLWd1dHRlci13aWR0aCAvICRsYXlvdXQtbWF4LXdpZHRoO1xuXHR9XG59XG5cblxuXG4vKipcbiAqIEdyaWQgY29sdW1ucyB3aWR0aCBjYWxjdWxhdGlvbnNcbiAqIFRoaXMgaXMgd2hlcmUgdGhlIG1hZ2ljIG9mIHdvcmtpbmcgb3V0IHRoZSBjb2x1bW4gd2lkdGhzIGhhcHBlbnNcbiAqXG4gKiAkY29sdW1uLXNwYW46IGRlZmluZSB0aGUgd2lkdGggZm9yIHRoZSBudW1iZXIgb2YgY29sdW1ucyByZXF1aXJlZFxuICogJHNob3ctdW5pdDogU3dpdGNoIHJldHVybiB2YWx1ZSBiZXR3ZWVuIHBlcmNlbnRhZ2UgKGRlZmF1bHQpIGFuZCBkZWNpbWFsXG4gKiAkaW5jbHVkZS1ndXR0ZXJzOiBpZiBndXR0ZXJzIHNob3VsZCBiZSBpbmNsdWRlZCBpbiB0aGUgY2FsY3VsYXRpb25zLiBEZWZhdWx0ID0gZmFsc2VcbiAqICRsZWdhY3ktY2FsYzogaWYgd2UgYXJlIHdvcmtpbmcgb3V0IGEgbGVnYWN5IGNvbHVtbiB3aWR0aCBjYWxjdWxhdGlvbiwgb3Igbm90LiBEZWZhdWx0ID0gZmFsc2VcbiAqL1xuQGZ1bmN0aW9uIGtvLWdyaWRDb2x1bW5XaWR0aENhbGMoJGNvbHVtbi1zcGFuOiAxLCAkc2hvdy11bml0OiB0cnVlLCAkaW5jbHVkZS1ndXR0ZXJzOiBmYWxzZSkge1xuXHQkbnVtYmVyLW9mLWJsb2Nrcy1pbi1jb250YWluZXIgOiAkZ3JpZC1jb2x1bW4tY291bnQgLyAkY29sdW1uLXNwYW47XG5cdCR0b3RhbC13aWR0aC1vZi1hbGwtYmxvY2tzICAgICA6IDE7XG5cblx0Ly8gd2hlbiBpbmNsdWRpbmcgZ3V0dGVycywgd2UgbmVlZCB0byBhZGp1c3Qgb3VyICUgd2lkdGggb3IgZmxleC1iYXNpcyBhcHByb3ByaWF0ZWx5XG5cdEBpZiAkaW5jbHVkZS1ndXR0ZXJzIHtcblx0XHQkdG90YWwtd2lkdGgtb2YtYWxsLWd1dHRlcnMgICAgOiBrby1ndXR0ZXJDYWxjKGZhbHNlKSAqICgkbnVtYmVyLW9mLWJsb2Nrcy1pbi1jb250YWluZXIgLSAxKTtcblx0XHQkdG90YWwtd2lkdGgtb2YtYWxsLWJsb2NrcyAgICAgOiAxIC0gJHRvdGFsLXdpZHRoLW9mLWFsbC1ndXR0ZXJzO1xuXHR9XG5cblx0JHdpZHRoLW9mLWEtc2luZ2xlLWJsb2NrICAgICAgIDogJHRvdGFsLXdpZHRoLW9mLWFsbC1ibG9ja3MgLyAkbnVtYmVyLW9mLWJsb2Nrcy1pbi1jb250YWluZXI7XG5cblx0QGlmICRzaG93LXVuaXQgPT0gdHJ1ZSB7XG5cdFx0QHJldHVybiBwZXJjZW50YWdlKGtvLXN0cmlwLXVuaXRzKCR3aWR0aC1vZi1hLXNpbmdsZS1ibG9jaykpO1xuXHR9IEBlbHNlIHtcblx0XHRAcmV0dXJuICR3aWR0aC1vZi1hLXNpbmdsZS1ibG9jaztcblx0fVxufVxuXG5AbWl4aW4ga28tcGl4ZWxNaW5XaWR0aCgkY29sdW1uLXNwYW46IDEsICRtaW51c0d1dHRlcjogZmFsc2UpIHtcblx0QGlmICRtaW51c0d1dHRlciA9PSB0cnVlIHtcblx0XHRtaW4td2lkdGg6ICgkbGF5b3V0LW1heC13aWR0aCAqIGtvLWdyaWRDb2x1bW5XaWR0aENhbGMoJGNvbHVtbi1zcGFuLCBmYWxzZSkpIC0gKCRsYXlvdXQtbWF4LXdpZHRoICoga28tZ3V0dGVyQ2FsYyhmYWxzZSkpICsgcHg7XG5cdH1cblx0QGVsc2Uge1xuXHRcdG1pbi13aWR0aDogKCRsYXlvdXQtbWF4LXdpZHRoICoga28tZ3JpZENvbHVtbldpZHRoQ2FsYygkY29sdW1uLXNwYW4sIGZhbHNlKSkgKyBweDtcblx0fVxufVxuXG5cbi8qKlxuICogQ29sdW1uIHdpZHRoIG1peGluXG4gKiBVc2FnZTpcbiAqIEBpbmNsdWRlIGNvbHVtbigyKTtcbiAqL1xuQG1peGluIGNvbHVtbigkY29sdW1uLXNwYW46IDEpIHtcblx0d2lkdGg6IGtvLWdyaWRDb2x1bW5XaWR0aENhbGMoJGNvbHVtbi1zcGFuLCB0cnVlKTtcbn1cbiIsIi8qKlxuICogRm9ybXNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogS2lja29mZidzIGZvcm1zIGhhcyBzdXBwb3J0IGZvciB0aGVtZXMuIFNlZSBiZWxvdyBmb3IgaW5mbyBhYm91dCB0aGVtLlxuICpcbiAqIFRoZSBzdHlsZXMgaGVyZSBhcmUgYmFzZSBzdHlsZXMgdGhhdCBhcHBseSB0byBib3RoIHRoZW1lcyxcbiAqIHRoZXkgYXJlIG1vcmUgb2YgYSByZXNldCBiZWZvcmUgeW91IG1ha2Ugc3R5bGlzdGljIGFtZW5kcyB0byBmb3JtIGZpZWxkc1xuICpcbiAqL1xuXG5AaW1wb3J0IFwiZm9ybS1oZWxwZXJzXCI7IC8vIEhlbHBlciBtaXhpbnNcblxuLyoqXG4gKiBGb3JtIHRoZW1lc1xuICogVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBiYXNlIGZvcm0gc3R5bGVzIGFuZCBlYWNoIHRoZW1lIGZpbGUgY29udGFpbnNcbiAqIG92ZXJyaWRlcyBhbmQgYWRkaXRpb25zLlxuICpcbiAqIENob29zZSBmcm9tOlxuICogLSBgc3RhbmRhcmRgOiB0aGUgb3JpZ2luYWwgS2lja29mZiBmb3JtIHRoZW1lXG4gKiAtIGBtYXRlcmlhbGA6IGJhc2ljIHZlcnNpb24gb2YgR29vZ2xlJ3MgTWF0ZXJpYWwgZGVzaWduIGZvcm1zXG4gKlxuICogVXNhZ2U6IChjaG9vc2UgZnJvbSlcbiAqIEBpbXBvcnQgXCJmb3JtLXRoZW1lLXN0YW5kYXJkXCI7XG4gKiBAaW1wb3J0IFwiZm9ybS10aGVtZS1tYXRlcmlhbFwiO1xuICovXG5AaW1wb3J0IFwiZm9ybS10aGVtZS1zdGFuZGFyZFwiO1xuXG4vKipcbiAqIEN1c3RvbSBjb250cm9sc1xuICogLSBSYWRpb3MvY2hlY2tib3hlc1xuICogLSBTZWxlY3QgZWxlbWVudFxuICogLSBGaWxlIHVwbG9hZFxuICovXG5AaW1wb3J0IFwiZm9ybXMtY3VzdG9tLXJhZGlvc2NoZWNrYm94ZXNcIjsgLy8gUmFkaW8gJiBjaGVja2JveCBpbnB1dHNcbkBpbXBvcnQgXCJmb3Jtcy1jdXN0b20tc2VsZWN0XCI7IC8vIFNlbGVjdCBlbGVtZW50XG5AaW1wb3J0IFwiZm9ybXMtY3VzdG9tLWZpbGVcIjsgLy8gRmlsZSBpbnB1dFxuXG5cbi8qKlxuICogQmFzZSBmb3JtIHN0eWxlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBEZW1vOiBodHRwOi8vdHJ5a2lja29mZi5jb20vZGVtb3MvZm9ybXMuaHRtbCNsYXlvdXQtZXhhbXBsZS1sYWJlbHMtYWJvdmVcbiAqIENvZGU6IGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL21ybWFydGluZWF1LzY3MTI1NzcjZmlsZS1sYWJlbHMtYWJvdmUtaW5wdXRzLWh0bWxcbiAqIFVzYWdlOlxuICBcdDxkaXYgY2xhc3M9XCJmb3JtLWNvbnRyb2xHcm91cFwiPlxuICBcdFx0PGxhYmVsIGZvcj1cIm5hbWVcIiBjbGFzcz1cImZvcm0tbGFiZWxcIj5OYW1lPC9sYWJlbD5cbiAgXHRcdDxkaXYgY2xhc3M9XCJmb3JtLWNvbnRyb2xHcm91cC1pbnB1dFdyYXBwZXJcIj5cbiAgXHRcdFx0PGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9XCJuYW1lXCIgcGxhY2Vob2xkZXI9XCJaYW5kZXIgTWFydGluZWF1XCIgY2xhc3M9XCJmb3JtLWlucHV0XCIvPlxuICBcdFx0PC9kaXY+XG4gIFx0PC9kaXY+XG4gKi9cblxuXG4uZm9ybS1sZWdlbmQge1xuXHRkaXNwbGF5OiBibG9jaztcblx0d2lkdGg6IDEwMCU7XG59XG5cbi8qKlxuICogRm9ybSBpbnB1dHMgYW5kIGdyb3Vwc1xuICovXG4uZm9ybS1jb250cm9sR3JvdXAge31cblxuLy8gTGVnZW5kIGNvbGxhcHNlcyBtYXJnaW4sIHNvIG5leHQgZWxlbWVudCBpcyByZXNwb25zaWJsZSBmb3Igc3BhY2luZ1xuLmZvcm0tbGVnZW5kICsgLmZvcm0tY29udHJvbEdyb3VwIHtcblx0Ly8gbWFyZ2luLXRvcDogJGJhc2VsaW5lOyAvLyBBZGQgdGhpcyB0byB0aGVtZVxuXHQtd2Via2l0LW1hcmdpbi10b3AtY29sbGFwc2U6IHNlcGFyYXRlO1xufVxuXG4vLyBJZGVudGlmeSBjb250cm9scyBieSB0aGVpciBsYWJlbHNcbi5mb3JtLWxhYmVsIHtcblx0ZGlzcGxheTogYmxvY2s7XG59XG5cbi8vIEFueSBmb3JtIGlucHV0c1xuLmZvcm0taW5wdXQge1xuXHRkaXNwbGF5OiBibG9jaztcblx0d2lkdGg6IDEwMCU7XG5cdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcblxuXHQmOmZvY3VzIHtcblx0XHRvdXRsaW5lOiAwO1xuXHRcdG91dGxpbmU6IHRoaW4gZG90dGVkIFxcOTsgLy8gSUU2LTlcblx0fVxuXG5cdCZbdHlwZT1cImltYWdlXCJdLFxuXHQmW3R5cGU9XCJjaGVja2JveFwiXSxcblx0Jlt0eXBlPVwicmFkaW9cIl0sXG5cdCZbdHlwZT1cInJhbmdlXCJdIHtcblx0XHR3aWR0aDogYXV0bztcblx0XHRoZWlnaHQ6IGF1dG87XG5cdFx0cGFkZGluZzogMDtcblx0XHRsaW5lLWhlaWdodDogbm9ybWFsO1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHRib3JkZXItcmFkaXVzOiAwO1xuXHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdFx0Ly8gYm9yZGVyOiAwIFxcOTsgLy8gSUU5IGFuZCBkb3duXG5cdH1cblxuXHQmW3R5cGU9XCJpbWFnZVwiXSB7XG5cdFx0Ym9yZGVyOiAwO1xuXHR9XG5cblx0Ly8gUmVzZXQgdGhlIGZpbGUgaW5wdXQgdG8gYnJvd3NlciBkZWZhdWx0c1xuXHQmW3R5cGU9XCJmaWxlXCJdIHtcblx0XHR3aWR0aDogYXV0bztcblx0XHRoZWlnaHQ6IDI4cHg7XG5cdFx0cGFkZGluZzogaW5pdGlhbDtcblx0XHRsaW5lLWhlaWdodDogaW5pdGlhbDtcblx0XHRib3JkZXI6IGluaXRpYWw7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbDtcblx0fVxuXG5cdC8vIEhpZGRlbiBpbnB1dHNcblx0Jlt0eXBlPVwiaGlkZGVuXCJdIHtcblx0XHRkaXNwbGF5OiBub25lO1xuXHR9XG5cblx0Ly8gU2VlIGh0dHA6Ly9tYXJ0aW5lYXUudHYvMjAxMy8wNS9oaWRkZW4tY2hhcmFjdGVycy1pbi1wYXNzd29yZC1pbnB1dHMvXG5cdCZbdHlwZT1cInBhc3N3b3JkXCJdIHtcblx0XHRmb250LWZhbWlseTogc2Fucy1zZXJpZjtcblx0fVxuXG5cdCZbdHlwZT1cInJhbmdlXCJdIHtcblx0XHR3aWR0aDogMTAwJTtcblx0fVxuXG5cdD4gLnJhZGlvOmZpcnN0LWNoaWxkLFxuXHQ+IC5jaGVja2JveDpmaXJzdC1jaGlsZCB7XG5cdFx0cGFkZGluZy10b3A6IDVweDsgLy8gaGFzIHRvIGJlIHBhZGRpbmcgYmVjYXVzZSBtYXJnaW4gY29sbGFwc2VzXG5cdH1cblxuXHQvLyBEaXNhYmxlZCBTdGF0ZVxuXHQmW2Rpc2FibGVkXSxcblx0JltyZWFkb25seV0ge1xuXHRcdGN1cnNvcjogbm90LWFsbG93ZWQ7XG5cdH1cbn1cblxuLmZvcm0taW5wdXQtLXRleHRhcmVhIHtcblx0aGVpZ2h0OiBhdXRvO1xuXHRtaW4taGVpZ2h0OiA1ZW07XG5cdHJlc2l6ZTogdmVydGljYWw7XG59XG5cbi5mb3JtLWlucHV0LS10ZXh0YXJlYS0tdW5lZGl0YWJsZSB7XG5cdHdpZHRoOiBhdXRvO1xuXHRoZWlnaHQ6IGF1dG87XG59XG5cbi5mb3JtLWlucHV0LWZpbGUge1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdHdpZHRoOiAxMDAlO1xuXHRtYXJnaW46IDA7XG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG5cdGxpbmUtaGVpZ2h0OiAxZW07XG5cblx0Jjpmb2N1cyB7XG5cdFx0b3V0bGluZTogbm9uZTtcblx0fVxufVxuXG4vLyBIZWxwIG91dCBpbnB1dCBidXR0b25zXG5idXR0b24sXG5pbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG5cdHdpZHRoOiBhdXRvO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG5cbi8qKlxuICogQ2hlY2tib3hlczpcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQ8bGFiZWwgY2xhc3M9XCJjb250cm9sXCI+XG5cdFx0PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIHZhbHVlPVwiY2hlY2sxXCI+XG5cdFx0VGhpcyBpcyBhIGNoZWNrYm94XG5cdDwvbGFiZWw+XG5cdDxsYWJlbCBjbGFzcz1cImNvbnRyb2wgY29udHJvbC0taW5saW5lXCI+XG5cdFx0PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIHZhbHVlPVwiY2hlY2sxXCI+XG5cdFx0VGhpcyBpcyBhIGNoZWNrYm94XG5cdDwvbGFiZWw+XG5cbiAqIFJhZGlvczpcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQ8bGFiZWwgY2xhc3M9XCJjb250cm9sXCI+XG5cdFx0PGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJvcHRpb25zUmFkaW9zXCIgaWQ9XCJvcHRpb25zUmFkaW9zMVwiIHZhbHVlPVwib3B0aW9uMVwiIGNoZWNrZWQ+XG5cdFx0VGhpcyBpcyBhIHJhZGlvXG5cdDwvbGFiZWw+XG5cdDxsYWJlbCBjbGFzcz1cImNvbnRyb2wgY29udHJvbC0taW5saW5lXCI+XG5cdFx0PGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJvcHRpb25zUmFkaW9zXCIgaWQ9XCJvcHRpb25zUmFkaW9zMVwiIHZhbHVlPVwib3B0aW9uMlwiIGNoZWNrZWQ+XG5cdFx0VGhpcyBpcyBhIHJhZGlvXG5cdDwvbGFiZWw+XG4gKi9cbi5jb250cm9sIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGxpbmUtaGVpZ2h0OiAxO1xuXG5cdCYgKyAmIHtcblx0XHRtYXJnaW4tdG9wOiBrby1tdWx0aXBseSgkYmFzZWxpbmUsIDAuNSk7XG5cdH1cblxuXHRpbnB1dCB7XG5cdFx0dmVydGljYWwtYWxpZ246IHRvcDtcblx0XHRkaXNwbGF5OiBpbmxpbmU7XG5cdFx0bGluZS1oZWlnaHQ6IDE7XG5cdFx0bWFyZ2luLXJpZ2h0OiAwLjVlbTtcblx0fVxufVxuXG4vLyBSYWRpb3MgYW5kIGNoZWNrYm94ZXMgb24gc2FtZSBsaW5lXG4uY29udHJvbC0taW5saW5lIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXG5cdCYgKyAmIHtcblx0XHRtYXJnaW4tdG9wOiAwO1xuXHRcdG1hcmdpbi1sZWZ0OiAxLjVlbTtcblx0fVxufVxuXG5cbi8qKlxuICogRm9ybSB2YWxpZGF0aW9uIG1lc3NhZ2VzXG4gKi9cbi5mb3JtLWNvbnRyb2xHcm91cCAuZm9ybS1tZXNzYWdlIHtcblx0ZGlzcGxheTogbm9uZTtcbn1cbiIsIi8qKlxuICogS2lja29mZiBmb3JtczogU3RhbmRhcmQgdGhlbWVcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqXG4gKiBEZW1vOiBodHRwOi8vdHJ5a2lja29mZi5jb20vZGVtb3MvZm9ybXMuaHRtbCNsYXlvdXQtZXhhbXBsZS1sYWJlbHMtYWJvdmVcbiAqIENvZGU6IGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL21ybWFydGluZWF1LzY3MTI1NzcjZmlsZS1sYWJlbHMtYWJvdmUtaW5wdXRzLWh0bWxcbiAqIFVzYWdlOlxuICBcdDxkaXYgY2xhc3M9XCJmb3JtLWNvbnRyb2xHcm91cFwiPlxuICBcdFx0PGxhYmVsIGZvcj1cIm5hbWVcIiBjbGFzcz1cImZvcm0tbGFiZWxcIj5OYW1lPC9sYWJlbD5cbiAgXHRcdDxkaXYgY2xhc3M9XCJmb3JtLWNvbnRyb2xHcm91cC1pbnB1dFdyYXBwZXJcIj5cbiAgXHRcdFx0PGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9XCJuYW1lXCIgcGxhY2Vob2xkZXI9XCJaYW5kZXIgTWFydGluZWF1XCIgY2xhc3M9XCJmb3JtLWlucHV0XCIvPlxuICBcdFx0PC9kaXY+XG4gIFx0PC9kaXY+XG4gKlxuICogQ29udGVudHM6XG4gKiAtIFRoZW1lIHZhcmlhYmxlc1xuICogLSBUaGVtZSBzdHlsZXNcbiAqL1xuXG4vLyBGb3JtIHZhcmlhYmxlc1xuJGlucHV0LWJnQ29sb3IgICAgICAgICAgICA6ICNmZmY7ICAgICAgICAgICAgICAgIC8vIENvbG91ciBvZiBpbnB1dCBiYWNrZ3JvdW5kXG4kaW5wdXQtYm9yZGVyQ29sb3IgICAgICAgIDogI2NjYzsgICAgICAgICAgICAgICAgLy8gQ29sb3VyIG9mIGlucHV0IGJvcmRlcnNcbiRpbnB1dC1ib3JkZXJDb2xvci0tZm9jdXMgOiAkY29sb3ItcHJpbWFyeTsgICAgICAvLyBDb2xvdXIgb2YgaW5wdXQgYm9yZGVycyB3aGVuIGZvY3VzZWRcbiRmb3JtLWFjdGlvbnMtYmdDb2xvciAgICAgOiAjZjVmNWY1OyAgICAgICAgICAgICAvLyBCYWNrZ3JvdW5kIGNvbG91ciBvZiBmb3JtIGFjdGlvbnMgY29udGFpbmVyIChpLmUuIHN1Ym1pdClcbiRsYWJlbC10ZXh0Q29sb3IgICAgICAgICAgOiAkY29sb3ItdGV4dDsgICAgICAgICAvLyBUZXh0IGNvbG91ciBvZiBmb3JtIGxhYmVscyBhbmQgbGVnZW5kc1xuJGlucHV0LXRleHRDb2xvciAgICAgICAgICA6ICRjb2xvci10ZXh0OyAgICAgICAgIC8vIFRleHQgY29sb3VyIG9mIGZvcm0gaW5wdXRzXG4kcGxhY2Vob2xkZXItdGV4dENvbG9yICAgIDogbGlnaHRlbigjMDAwLCA3MCUpOyAgLy8gVGV4dCBjb2xvdXIgb2YgaW5wdXQgcGxhY2Vob2xkZXJcbiRmb3JtLWJvcmRlclJhZGl1cyAgICAgICAgOiA1cHg7XG4vLyBNZXNzYWdlcyAmIGZvcm0gc3RhdGVzIGFuZCBhbGVydHNcbiRjb2xvci13YXJuaW5nICAgICAgICAgICAgOiAjZjRhYTQ3OyAgICAgICAgICAgICAvLyBiYXNlIGNvbG91ciBmb3Igd2FybmluZyBpbnB1dCBzdGF0ZVxuJGNvbG9yLWVycm9yICAgICAgICAgICAgICA6ICNCOTRBNEQ7ICAgICAgICAgICAgIC8vIGJhc2UgY29sb3VyIGZvciBlcnJvciBpbnB1dCBzdGF0ZVxuJGNvbG9yLXN1Y2Nlc3MgICAgICAgICAgICA6ICRncmVlbjsgICAgICAgICAgICAgIC8vIGJhc2UgY29sb3VyIGZvciBzdWNjZXNzIGlucHV0IHN0YXRlXG4kY29sb3ItaW5mbyAgICAgICAgICAgICAgIDogJGJsdWU7ICAgICAgICAgICAgICAgLy8gYmFzZSBjb2xvdXIgZm9yIGluZm8gaW5wdXQgc3RhdGVcblxuLyoqXG4gKiBHZW5lcmljIGZvcm0gc3R5bGVzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIERlbW86IGh0dHA6Ly90cnlraWNrb2ZmLmNvbS9kZW1vcy9mb3Jtcy5odG1sI2xheW91dC1leGFtcGxlLWxhYmVscy1hYm92ZVxuICogQ29kZTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vbXJtYXJ0aW5lYXUvNjcxMjU3NyNmaWxlLWxhYmVscy1hYm92ZS1pbnB1dHMtaHRtbFxuICogVXNhZ2U6XG4gIFx0PGRpdiBjbGFzcz1cImZvcm0tY29udHJvbEdyb3VwXCI+XG4gIFx0XHQ8bGFiZWwgZm9yPVwibmFtZVwiIGNsYXNzPVwiZm9ybS1sYWJlbFwiPk5hbWU8L2xhYmVsPlxuICBcdFx0PGRpdiBjbGFzcz1cImZvcm0tY29udHJvbEdyb3VwLWlucHV0V3JhcHBlclwiPlxuICBcdFx0XHQ8aW5wdXQgdHlwZT1cInRleHRcIiBpZD1cIm5hbWVcIiBwbGFjZWhvbGRlcj1cIlphbmRlciBNYXJ0aW5lYXVcIiBjbGFzcz1cImZvcm0taW5wdXRcIi8+XG4gIFx0XHQ8L2Rpdj5cbiAgXHQ8L2Rpdj5cbiAqL1xuXG4uZm9ybSB7XG5cdG1hcmdpbjogMCAwICRiYXNlbGluZTtcbn1cblxuLmZvcm0tZmllbGRzZXQge1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdGJvcmRlcjogMDtcbn1cblxuLmZvcm0tbGVnZW5kIHtcblx0cGFkZGluZzogMDtcblx0bWFyZ2luLWJvdHRvbTogJGJhc2VsaW5lO1xuXHRAaW5jbHVkZSBrby1mb250LXNpemUobWlkKTtcblx0bGluZS1oZWlnaHQ6ICRsZWFkaW5nLWJhc2U7XG5cdGNvbG9yOiAkbGFiZWwtdGV4dENvbG9yO1xuXHRib3JkZXI6IDA7XG5cdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlO1xuXHR3aGl0ZS1zcGFjZTogbm9ybWFsO1xuXG5cdC8vIFNtYWxsXG5cdHNtYWxsIHtcblx0XHRAaW5jbHVkZSBrby1mb250LXNpemUoc21hbGwpO1xuXHRcdGNvbG9yOiBsaWdodGVuKCMwMDAsIDcwJSk7XG5cdH1cbn1cblxuLyoqXG4gKiBGb3JtIGlucHV0cyBhbmQgZ3JvdXBzXG4gKi9cbi5mb3JtLWNvbnRyb2xHcm91cCB7XG5cdG1hcmdpbi10b3A6IGtvLW11bHRpcGx5KCRiYXNlbGluZSwgMS41KTtcblx0bWFyZ2luLWJvdHRvbToga28tbXVsdGlwbHkoJGJhc2VsaW5lLCAxLjUpO1xufVxuXG4vLyBMZWdlbmQgY29sbGFwc2VzIG1hcmdpbiwgc28gbmV4dCBlbGVtZW50IGlzIHJlc3BvbnNpYmxlIGZvciBzcGFjaW5nXG4uZm9ybS1sZWdlbmQgKyAuZm9ybS1jb250cm9sR3JvdXAge1xuXHRtYXJnaW4tdG9wOiAkYmFzZWxpbmU7XG59XG5cbi8vIElkZW50aWZ5IGNvbnRyb2xzIGJ5IHRoZWlyIGxhYmVsc1xuLmZvcm0tbGFiZWwge1xuXHQvLyBtYXJnaW4tYm90dG9tOiBrby1tdWx0aXBseSgkYmFzZWxpbmUsIDAuNSk7XG5cdGNvbG9yOiAkbGFiZWwtdGV4dENvbG9yO1xuXG5cdHNtYWxsIHtcblx0XHRmb250LXdlaWdodDogbm9ybWFsO1xuXHRcdGNvbG9yOiBsaWdodGVuKCRsYWJlbC10ZXh0Q29sb3IsIDMwJSk7XG5cdH1cbn1cblxuXG4vLyBBbnkgZm9ybSBpbnB1dHNcbi5mb3JtLWlucHV0IHtcblx0aGVpZ2h0OiAyLjVlbTtcblx0cGFkZGluZzogLjVlbTtcblx0QGluY2x1ZGUga28tZm9udC1zaXplKGJhc2UpO1xuXHRmb250LWZhbWlseTogJGZvbnQtZmFtaWx5LWJhc2U7XG5cdGxpbmUtaGVpZ2h0OiAkbGVhZGluZy1iYXNlO1xuXHRjb2xvcjogJGlucHV0LXRleHRDb2xvcjtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcblx0YmFja2dyb3VuZC1jb2xvcjogJGlucHV0LWJnQ29sb3I7XG5cdGJvcmRlcjogMnB4IHNvbGlkICRpbnB1dC1ib3JkZXJDb2xvcjtcblx0Ym9yZGVyLXJhZGl1czogJGZvcm0tYm9yZGVyUmFkaXVzO1xuXHRiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuXHR0cmFuc2l0aW9uOiBib3JkZXIgMjAwbXMgZWFzZS1pbi1vdXQ7XG5cblx0Jjpmb2N1cyB7XG5cdFx0Ym9yZGVyLWNvbG9yOiAkaW5wdXQtYm9yZGVyQ29sb3ItLWZvY3VzO1xuXHR9XG5cblx0Jlt0eXBlPVwiaW1hZ2VcIl0sXG5cdCZbdHlwZT1cImNoZWNrYm94XCJdLFxuXHQmW3R5cGU9XCJyYWRpb1wiXSxcblx0Jlt0eXBlPVwicmFuZ2VcIl0ge1xuXHRcdG1hcmdpbjogM3B4IDA7XG5cdH1cblxuXHQvLyBSZXNldCB0aGUgZmlsZSBpbnB1dCB0byBicm93c2VyIGRlZmF1bHRzXG5cdCZbdHlwZT1cImZpbGVcIl0ge1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRpbnB1dC1iZ0NvbG9yO1xuXHR9XG5cblx0Jlt0eXBlPVwiY29sb3JcIl0ge1xuXHRcdHdpZHRoOiA0MHB4O1xuXHRcdGhlaWdodDogNDBweDtcblx0XHRvdmVyZmxvdzogaGlkZGVuO1xuXHRcdHBhZGRpbmc6IDJweDtcblx0fVxuXG5cdC8vIERpc2FibGVkIFN0YXRlXG5cdCZbZGlzYWJsZWRdLFxuXHQmW3JlYWRvbmx5XSB7XG5cdFx0Y3Vyc29yOiBub3QtYWxsb3dlZDtcblx0fVxuXG5cdC8vIEhUTUw1IGludmFsaWQgc3RhdGVzXG5cdC8vIFVuY29tbWVudCB0aGlzIGlmIHlvdSBuZWVkIGl0XG5cdC8vICY6Zm9jdXM6cmVxdWlyZWQ6aW52YWxpZCB7XG5cdC8vIFx0Y29sb3I6ICNiOTRhNDg7XG5cdC8vIFx0Ym9yZGVyLWNvbG9yOiAjZWU1ZjViO1xuXG5cdC8vIFx0Jjpmb2N1cyB7XG5cdC8vIFx0XHRib3JkZXItY29sb3I6IGRhcmtlbigjZWU1ZjViLCAxMCUpO1xuXHQvLyBcdH1cblx0Ly8gfVxufVxuXG4uZm9ybS1pbnB1dC0tdGV4dGFyZWEge31cblxuLy8gU2V0IHRoZSBoZWlnaHQgb2Ygc2VsZWN0IGFuZCBmaWxlIGNvbnRyb2xzIHRvIG1hdGNoIHRleHQgaW5wdXRzXG4uZm9ybS1pbnB1dC0tc2VsZWN0IHtcblx0Ly8gQ2hyb21lIG9uIExpbnV4IGFuZCBNb2JpbGUgU2FmYXJpIG5lZWQgYmFja2dyb3VuZC1jb2xvclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkaW5wdXQtYmdDb2xvcjtcbn1cblxuLmZvcm0taW5wdXQtZmlsZSB7XG5cdEBpbmNsdWRlIGtvLWZvbnQtc2l6ZShiYXNlKTtcbn1cblxuXG4vKipcbiAqIEZvcm0gYWN0aW9uc1xuICovXG4uZm9ybS1hY3Rpb25zIHtcblx0cGFkZGluZzogJGJhc2VsaW5lIDIwcHg7XG5cdG1hcmdpbi10b3A6ICRiYXNlbGluZTtcblx0bWFyZ2luLWJvdHRvbTogJGJhc2VsaW5lO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkZm9ybS1hY3Rpb25zLWJnQ29sb3I7XG5cdGJvcmRlci10b3A6IDFweCBzb2xpZCAjZGRkO1xuXG5cdC5idG4ge1xuXHRcdG1hcmdpbi1yaWdodDogMTBweDtcblxuXHRcdCY6bGFzdC1jaGlsZCB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0fVxuXHR9XG59XG5cblxuLyoqXG4gKiBGb3JtIHZhbGlkYXRpb24gbWVzc2FnZXNcbiAqL1xuLmZvcm0tbWVzc2FnZSB7XG5cblx0LmZvcm0tY29udHJvbEdyb3VwICYge1xuXHRcdHBhZGRpbmctdG9wOiAwLjVlbTtcblx0XHRwYWRkaW5nLWxlZnQ6IDAuNWVtO1xuXHR9XG5cblx0LmZvcm0tYWN0aW9ucyAmIHtcblx0XHRwYWRkaW5nOiAwLjVlbTtcblx0fVxufVxuXG5cbi8qKlxuICogRm9ybSBmaWVsZCBmZWVkYmFjayBzdGF0ZXNcbiAqL1xuXG4vLyBXYXJuaW5nXG4uaGFzLXdhcm5pbmcge1xuXHRjb2xvcjogJGNvbG9yLXdhcm5pbmc7XG59XG5cbi5mb3JtLWNvbnRyb2xHcm91cC5oYXMtd2FybmluZyB7XG5cdEBpbmNsdWRlIGtvLWZvcm1GaWVsZFN0YXRlKCRjb2xvci13YXJuaW5nKTtcbn1cblxuLy8gRXJyb3Jcbi5oYXMtZXJyb3Ige1xuXHRjb2xvcjogJGNvbG9yLWVycm9yO1xufVxuXG4uZm9ybS1jb250cm9sR3JvdXAuaGFzLWVycm9yIHtcblx0QGluY2x1ZGUga28tZm9ybUZpZWxkU3RhdGUoJGNvbG9yLWVycm9yKTtcbn1cblxuLy8gU3VjY2Vzc1xuLmhhcy1zdWNjZXNzIHtcblx0Y29sb3I6ICRjb2xvci1zdWNjZXNzO1xufVxuXG4uZm9ybS1jb250cm9sR3JvdXAuaGFzLXN1Y2Nlc3Mge1xuXHRAaW5jbHVkZSBrby1mb3JtRmllbGRTdGF0ZSgkY29sb3Itc3VjY2Vzcyk7XG59XG5cbi8vIEluZm9cbi5oYXMtaW5mbyB7XG5cdGNvbG9yOiAkY29sb3ItaW5mbztcbn1cblxuLmZvcm0tY29udHJvbEdyb3VwLmhhcy1pbmZvIHtcblx0QGluY2x1ZGUga28tZm9ybUZpZWxkU3RhdGUoJGNvbG9yLWluZm8pO1xufVxuXG5cbi8qKlxuICogUGxhY2Vob2xkZXIgdGV4dFxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBHZXRzIHNwZWNpYWwgc3R5bGVzOyBjYW4ndCBiZSBidW5kbGVkIHRvZ2V0aGVyIHRob3VnaCBmb3Igc29tZSByZWFzb25cbiAqL1xuQGluY2x1ZGUga28tcGxhY2Vob2xkZXIoJHBsYWNlaG9sZGVyLXRleHRDb2xvcik7XG5cblxuLy8gPT09IDxtaWQgPT09XG5AaW5jbHVkZSBtZWRpYSgnPm1pZCcpIHtcblx0LyoqXG5cdCAqIEhvcml6b250YWwtc3BlY2lmaWMgc3R5bGVzXG5cdCAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQgKiBhZGQgLmZvcm0tLWhvcml6b250YWwgdG8gdGhlIDxmb3JtPiBlbGVtZW50XG5cdCAqIERlbW86IGh0dHA6Ly90cnlraWNrb2ZmLmNvbS9kZW1vcy9mb3Jtcy5odG1sI2xheW91dC1leGFtcGxlLWxhYmVscy1pbmxpbmVcblx0ICogQ29kZTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vbXJtYXJ0aW5lYXUvNjcxMjU3NyNmaWxlLWxhYmVscy1pbmxpbmUtaHRtbFxuXHQgKi9cblx0LmZvcm0tLWhvcml6b250YWwge1xuXHRcdC8vIEluY3JlYXNlIHNwYWNpbmcgYmV0d2VlbiBncm91cHNcblx0XHQuZm9ybS1jb250cm9sR3JvdXAge1xuXHRcdFx0ZGlzcGxheTogZmxleDtcblxuXHRcdFx0PiAuZm9ybS1jb250cm9sR3JvdXAtaW5wdXRXcmFwcGVyIHtcblx0XHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gRmxvYXQgdGhlIGxhYmVscyBsZWZ0XG5cdFx0LmZvcm0tbGFiZWwge1xuXHRcdFx0d2lkdGg6IDE0MHB4O1xuXHRcdFx0bWFyZ2luLXJpZ2h0OiAkYmFzZWxpbmU7XG5cdFx0XHRwYWRkaW5nLXRvcDogMC42ZW07XG5cdFx0fVxuXG5cdFx0Ly8gTW92ZSBvdmVyIGJ1dHRvbnMgaW4gLmZvcm0tYWN0aW9ucyB0byBhbGlnbiB3aXRoIC5mb3JtLWNvbnRyb2xHcm91cC1pbnB1dFdyYXBwZXJcblx0XHQuZm9ybS1hY3Rpb25zIHtcblx0XHRcdHBhZGRpbmctbGVmdDogMTQwcHggKyAkYmFzZWxpbmU7XG5cdFx0fVxuXHR9XG59XG5cbi8vID09PSBlbmQgPG1pZCA9PT1cbiIsIi8vIE1peGluIGZvciBmb3JtIGZpZWxkIHN0YXRlc1xuQG1peGluIGtvLWZvcm1GaWVsZFN0YXRlKCRjb2xvcikge1xuXHQuZm9ybS1sYWJlbCB7XG5cdFx0Y29sb3I6ICRjb2xvcjtcblx0fVxuXG5cdC5mb3JtLWlucHV0IHtcblx0XHRjb2xvcjogJGNvbG9yO1xuXHRcdGJvcmRlci1jb2xvcjogJGNvbG9yO1xuXG5cdFx0Jjpmb2N1cyB7XG5cdFx0XHRib3JkZXItY29sb3I6IGRhcmtlbigkY29sb3IsIDEwJSk7XG5cdFx0fVxuXHR9XG5cblx0LmZvcm0tbWVzc2FnZSB7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0Y29sb3I6ICRjb2xvcjtcblx0fVxufVxuXG5cbi8vIE1peGluIGZvciBmb3JtIGZpZWxkIHN0YXRlc1xuQG1peGluIGtvLWZvcm1GaWVsZFN0YXRlTWF0ZXJpYWwoJGNvbG9yKSB7XG5cdC5mb3JtLWlucHV0QmFyIHtcblx0XHRib3JkZXItY29sb3I6ICRjb2xvcjtcblx0fVxuXG5cdC5mb3JtLW1lc3NhZ2Uge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdGNvbG9yOiAkY29sb3I7XG5cdH1cbn1cbiIsIi8qKlxuICogQ3VzdG9tIENoZWNrYm94ZXMgYW5kIHJhZGlvc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBJRTkrXG4gKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqXG4gKiBDaGVja2JveCBidXR0b24gZXhhbXBsZSBIVE1MXG4gKlxuICpcdDxsYWJlbCBjbGFzcz1cImNvbnRyb2wgY29udHJvbC0tY3VzdG9tXCIgZm9yPVwiY2hlY2tib3gxXCI+XG5cdFx0PGlucHV0IGNsYXNzPVwiY29udHJvbC0tY3VzdG9tLWlucHV0XCIgdHlwZT1cImNoZWNrYm94XCIgaWQ9XCJjaGVja2JveDFcIiBuYW1lPVwibXlDaGVja2JveFwiIHZhbHVlPVwiQSB2YWx1ZVwiLz5cblx0XHRcdDxzcGFuIGNsYXNzPVwiY29udHJvbC1pbmRpY2F0b3IgY29udHJvbC1pbmRpY2F0b3ItLWNoZWNrYm94XCI+PC9zcGFuPlxuXHRcdFx0TXkgQ2hlY2tib3ggTGFiZWwgVGV4dFxuXHRcdDwvbGFiZWw+XG4gKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqIFJhZGlvIGJ1dHRvbiBleGFtcGxlIEhUTUxcbiAqXG4gKlx0PGxhYmVsIGNsYXNzPVwiY29udHJvbCBjb250cm9sLS1jdXN0b21cIiBmb3I9XCJyYWRpbzFcIj5cbiAqXHRcdDxpbnB1dCBjbGFzcz1cImNvbnRyb2wtLWN1c3RvbS1pbnB1dFwiIHR5cGU9XCJyYWRpb1wiIGlkPVwicmFkaW8xXCIgbmFtZT1cIm15UmFkaW9CdG5cIiB2YWx1ZT1cIkEgdmFsdWVcIi8+XG4gKlx0XHQ8c3BhbiBjbGFzcz1cImNvbnRyb2wtaW5kaWNhdG9yIGNvbnRyb2wtaW5kaWNhdG9yLS1yYWRpb1wiPjwvc3Bhbj5cbiAqXHRcdE15IFJhZGlvIEJ1dHRvbiBMYWJlbCBUZXh0XG4gKiBcdDwvbGFiZWw+XG4gKlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vLyAkY3VzdG9tLWlucHV0LWNvbG9yOiAkY29sb3ItcHJpbWFyeTtcbiRjdXN0b20taW5wdXQtY29sb3I6ICRjb2xvci1wcmltYXJ5O1xuJGN1c3RvbS1pbnB1dC1zZWxlY3RlZC1jb2xvcjogJGNvbG9yLWJnO1xuJGN1c3RvbS1pbnB1dC1sZW5ndGg6IDEuM2VtO1xuJGN1c3RvbS1pbnB1dC1ib3JkZXItd2lkdGg6IDFweDtcbiRjdXN0b20taW5wdXQtYm9yZGVyQ29sb3I6ICNjY2MgIWRlZmF1bHQ7XG4kY3VzdG9tLWlucHV0LWJvcmRlckNvbG9yLS1mb2N1czogJGNvbG9yLXByaW1hcnkgIWRlZmF1bHQ7XG4kY2hlY2tib3gtaW5kaWNhdG9yLXdpZHRoOiAwLjFlbTtcblxuLmNvbnRyb2wtLWN1c3RvbSB7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cdHBhZGRpbmctbGVmdDogJGN1c3RvbS1pbnB1dC1sZW5ndGggKyAxZW07XG5cdGhlaWdodDogJGN1c3RvbS1pbnB1dC1sZW5ndGg7XG5cdGxpbmUtaGVpZ2h0OiAkY3VzdG9tLWlucHV0LWxlbmd0aCAhaW1wb3J0YW50O1xufVxuXG4vLyBHaXZlIGlubGluZSBlbGVtZW50cyBzb21lIHNwYWNlIHRvIHRoZSByaWdodFxuLmNvbnRyb2wtLWN1c3RvbS0taW5saW5lIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRwYWRkaW5nLXJpZ2h0OiAyZW07XG59XG5cbi8vIFRoZSBoaWRkZW4gaW5wdXRcbi5jb250cm9sLS1jdXN0b20taW5wdXQge1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdG9wYWNpdHk6IDA7XG5cdHotaW5kZXg6IC0xOyAvLyBQdXQgdGhlIGlucHV0IGJlaGluZCB0aGUgbGFiZWwgc28gaXQgZG9lc24ndCBvdmVybGF5IHRleHRcbn1cblxuLy8gVGhlIG5ldyBjaGVja2JveC9yYWRpb1xuLmNvbnRyb2wtaW5kaWNhdG9yIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRsZWZ0OiAwO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdHdpZHRoOiAkY3VzdG9tLWlucHV0LWxlbmd0aDtcblx0aGVpZ2h0OiAkY3VzdG9tLWlucHV0LWxlbmd0aDtcblx0dHJhbnNpdGlvbjogJGRlZmF1bHQtdHJhbnNpdGlvbjtcblx0Ym9yZGVyOiAkY3VzdG9tLWlucHV0LWJvcmRlci13aWR0aCBzb2xpZCAkY3VzdG9tLWlucHV0LWJvcmRlckNvbG9yO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkY3VzdG9tLWlucHV0LWJvcmRlckNvbG9yO1xuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXHRtYXJnaW4tdG9wOiAwO1xuXHRib3gtc2hhZG93OiAwIDAgMCAycHggdHJhbnNwYXJlbnQsIDAgMCAwIDAgdHJhbnNwYXJlbnQ7IC8vIFVzZWQgdG8gYW5pbWF0ZSBmcm9tIHdoZW4gZWxlbWVudCBpcyBpbiA6Zm9jdXNcbn1cblxuLy8gOmZvY3VzIHN0eWxlc1xuLmNvbnRyb2wtLWN1c3RvbS1pbnB1dDpmb2N1cyB+IC5jb250cm9sLWluZGljYXRvciB7XG5cdGJveC1zaGFkb3c6IDAgMCAwIDJweCAkY29sb3ItYmcsIDAgMCAwIDNweCAkY3VzdG9tLWlucHV0LWJvcmRlckNvbG9yLS1mb2N1cztcbn1cblxuLy8gQ2hlY2tib3ggbW9kaWZpZXJzXG4uY29udHJvbC1pbmRpY2F0b3ItLWNoZWNrYm94LFxuLmNvbnRyb2wtaW5kaWNhdG9yLS10aWNrYm94IHtcblx0Ym9yZGVyLXJhZGl1czogLjJlbTsgLy8gQ2hhbmdlIHRvIDUwJSB0byBtYWtlIHRoZW0gY2lyY3VsYXJcblxuXHQmOmJlZm9yZSxcblx0JjphZnRlciB7XG5cdFx0Y29udGVudDogJyc7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdHRvcDogNTAlO1xuXHRcdGxlZnQ6IDUwJTtcblx0XHR3aWR0aDogOTAlO1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdG9wYWNpdHk6IDA7IC8vIGluZGljYXRvciB3aWxsIGJlIGZhZGVkIG91dCB3aGVuIGRlc2VsZWN0ZWRcblx0XHR0cmFuc2l0aW9uOiBhbGwgMjUwbXMgZWFzZS1pbi1vdXQ7XG5cdH1cbn1cblxuLmNvbnRyb2wtaW5kaWNhdG9yLS1jaGVja2JveCB7XG5cblx0JjpiZWZvcmUsXG5cdCY6YWZ0ZXIge1xuXHRcdHRvcDogNTAlO1xuXHRcdHdpZHRoOiA5MCU7XG5cdFx0aGVpZ2h0OiAwLjFlbTtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkY3VzdG9tLWlucHV0LXNlbGVjdGVkLWNvbG9yO1xuXHR9XG5cblx0JjpiZWZvcmUge1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSg0NWRlZykgc2NhbGUoMCk7XG5cdH1cblxuXHQmOmFmdGVyIHtcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoLTQ1ZGVnKSBzY2FsZSgwKTtcblx0fVxufVxuXG4uY29udHJvbC1pbmRpY2F0b3ItLXRpY2tib3gge1xuXG5cdCY6YmVmb3JlIHtcblx0XHR0b3A6IDA7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHJvdGF0ZSg0NWRlZykgc2NhbGUoMCk7XG5cdFx0Ym9yZGVyOiAkY2hlY2tib3gtaW5kaWNhdG9yLXdpZHRoIHNvbGlkICRjdXN0b20taW5wdXQtc2VsZWN0ZWQtY29sb3I7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0d2lkdGg6IDQwJTtcblx0XHRoZWlnaHQ6IDgwJTtcblx0XHRib3JkZXItdG9wOiAwO1xuXHRcdGJvcmRlci1sZWZ0OiAwO1xuXHR9XG5cblx0JjphZnRlciB7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0fVxufVxuXG4uY29udHJvbC0tY3VzdG9tLWlucHV0OmNoZWNrZWQgfiAuY29udHJvbC1pbmRpY2F0b3ItLWNoZWNrYm94LFxuLmNvbnRyb2wtLWN1c3RvbS1pbnB1dDpjaGVja2VkIH4gLmNvbnRyb2wtaW5kaWNhdG9yLS10aWNrYm94IHtcblx0YmFja2dyb3VuZC1jb2xvcjogJGN1c3RvbS1pbnB1dC1jb2xvcjtcblx0Ym9yZGVyOiAkY2hlY2tib3gtaW5kaWNhdG9yLXdpZHRoIHNvbGlkICRjdXN0b20taW5wdXQtY29sb3I7XG5cblx0JjpiZWZvcmUsXG5cdCY6YWZ0ZXIge1xuXHRcdG9wYWNpdHk6IDE7XG5cdH1cbn1cblxuLmNvbnRyb2wtLWN1c3RvbS1pbnB1dDpjaGVja2VkIH4gLmNvbnRyb2wtaW5kaWNhdG9yLS10aWNrYm94IHtcblx0JjpiZWZvcmUsXG5cdCY6YWZ0ZXIge1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSByb3RhdGUoNDVkZWcpIHNjYWxlKDEpO1xuXHR9XG59XG5cbi5jb250cm9sLS1jdXN0b20taW5wdXQ6Y2hlY2tlZCB+IC5jb250cm9sLWluZGljYXRvci0tY2hlY2tib3gge1xuXHQmOmJlZm9yZSB7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDQ1ZGVnKSBzY2FsZSgxKTtcblx0fVxuXG5cdCY6YWZ0ZXIge1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgtNDVkZWcpIHNjYWxlKDEpO1xuXHR9XG59XG5cblxuLy8gUmFkaW8gbW9kaWZpZXJzXG4uY29udHJvbC1pbmRpY2F0b3ItLXJhZGlvIHtcblx0Ym9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4uY29udHJvbC0tY3VzdG9tLWlucHV0OmNoZWNrZWQgfiAuY29udHJvbC1pbmRpY2F0b3ItLXJhZGlvIHtcblx0YmFja2dyb3VuZC1jb2xvcjogJGN1c3RvbS1pbnB1dC1zZWxlY3RlZC1jb2xvcjtcblx0Ym9yZGVyOiAuM2VtIHNvbGlkICRjdXN0b20taW5wdXQtY29sb3I7XG59XG4iLCIvKipcbiAqIEN1c3RvbSBzZWxlY3QgZWxlbWVudFxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBGaXJlZm94IDM5KywgSUUxMCtcbiAqXG4gKlx0PGRpdiBjbGFzcz1cImZvcm0tY29udHJvbEdyb3VwXCI+XG5cdFx0XHQ8bGFiZWwgZm9yPVwiY3MtY2hvaWNlXCIgY2xhc3M9XCJmb3JtLWxhYmVsXCI+Q3VzdG9tIHNlbGVjdDwvbGFiZWw+XG5cdFx0XHQ8ZGl2IGNsYXNzPVwiZm9ybS1jb250cm9sR3JvdXAtaW5wdXRXcmFwcGVyIGZvcm0tY29udHJvbEdyb3VwLWlucHV0V3JhcHBlci0tc2VsZWN0XCI+XG5cdFx0XHRcdDxzZWxlY3QgaWQ9XCJjcy1jaG9pY2VcIiBuYW1lPVwiY3MtY2hvaWNlXCIgY2xhc3M9XCJmb3JtLWlucHV0IGZvcm0taW5wdXQtLXNlbGVjdFwiPlxuXHRcdFx0XHRcdDxvcHRpb24gdmFsdWU9XCItLVwiPlNlbGVjdCB0aXRsZTwvb3B0aW9uPlxuXHRcdFx0XHRcdDxvcHRpb24gdmFsdWU9XCJNclwiPk1yPC9vcHRpb24+XG5cdFx0XHRcdFx0PG9wdGlvbiB2YWx1ZT1cIk1yc1wiPk1yczwvb3B0aW9uPlxuXHRcdFx0XHQ8L3NlbGVjdD5cblx0XHRcdDwvZGl2PlxuXHQ8L2Rpdj5cbiAqL1xuXG4uZm9ybS1jb250cm9sR3JvdXAtaW5wdXRXcmFwcGVyLS1zZWxlY3Qge1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRwYWRkaW5nOiAwO1xuXG5cdC8qIEN1c3RvbSBhcnJvdyBzaXRzIG9uIHRvcCBvZiB0aGUgc2VsZWN0IC0gY291bGQgYmUgYW4gaW1hZ2UsIFNWRywgaWNvbiBmb250LCBldGMuIG9yIHRoZSBhcnJvdyBjb3VsZCBqdXN0IGJha2VkIGludG8gdGhlIGJnIGltYWdlIG9uIHRoZSBzZWxlY3QgKi9cblx0JjphZnRlciB7XG5cdFx0Y29sb3I6ICRjb2xvci1wcmltYXJ5O1xuXHRcdGNvbnRlbnQ6IFwiXFwyNUJDXCI7XG5cdFx0Zm9udC1zaXplOiAuN2VtO1xuXHRcdHBhZGRpbmc6IDA7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdHJpZ2h0OiAxLjJlbTtcblx0XHR0b3A6IDEuMmVtO1xuXHRcdHotaW5kZXg6IDI7XG5cblx0XHQvKiBUaGVzZSBoYWNrcyBtYWtlIHRoZSBzZWxlY3QgYmVoaW5kIHRoZSBhcnJvdyBjbGlja2FibGUgaW4gc29tZSBicm93c2VycyAqL1xuXHRcdC1tcy1wb2ludGVyLWV2ZW50czogbm9uZTtcblx0XHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0XHRiYWNrZ3JvdW5kOiB1cmwoIyk7XG5cdH1cblxuXHQvLyBIaWRlIGN1c3RvbSBhcnJvdyBvbiBJRSA8PTExXG5cdEBtZWRpYSBzY3JlZW4gYW5kICgtbXMtaGlnaC1jb250cmFzdDogYWN0aXZlKSwgKC1tcy1oaWdoLWNvbnRyYXN0OiBub25lKSB7XG5cdFx0JjphZnRlciB7XG5cdFx0XHRkaXNwbGF5OiBub25lO1xuXHRcdH1cblx0fVxuXG5cdC5mb3JtLWlucHV0LS1zZWxlY3Qge1xuXHRcdGFwcGVhcmFuY2U6IG5vbmU7XG5cblx0XHRAbWVkaWEgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IGFjdGl2ZSksICgtbXMtaGlnaC1jb250cmFzdDogbm9uZSkge1xuXHRcdFx0Ly8gUmVtb3ZlcyB0aGUgb2RkIGJsdWUgYmcgY29sb3IgYmVoaW5kIHRoZSB0ZXh0IGluIElFIDEwLzExIGFuZCBzZXRzIHRoZSB0ZXh0IHRvIG1hdGNoIHRoZSBmb2N1cyBzdHlsZSB0ZXh0XG5cdFx0XHQmOmZvY3VzOjotbXMtdmFsdWUge1xuXHRcdFx0XHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblx0XHRcdFx0Y29sb3I6ICMyMjI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbm9wdGlvbiB7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG4iLCIvKipcbiAqIEN1c3RvbSBmaWxlIGlucHV0XG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIDxkaXYgY2xhc3M9XCJmb3JtLWNvbnRyb2xHcm91cFwiPlxuXHRcdDxsYWJlbCBjbGFzcz1cImZvcm0tbGFiZWxcIiBmb3I9XCJmaWxlXCI+RmlsZSB1cGxvYWQ8L2xhYmVsPlxuXG5cdFx0PGRpdiBjbGFzcz1cImZvcm0tY29udHJvbEdyb3VwLWlucHV0V3JhcHBlclwiPlxuXHRcdFx0PGxhYmVsIGNsYXNzPVwiZm9ybS1pbnB1dCBmb3JtLWlucHV0LS1maWxlXCI+XG5cdFx0XHRcdDxzcGFuIGNsYXNzPVwiZm9ybS1pbnB1dC0tZmlsZS10ZXh0XCI+Q2hvb3NlIGZpbGUuLjwvc3Bhbj5cblx0XHRcdFx0PHNwYW4gY2xhc3M9XCJmb3JtLWlucHV0LS1maWxlLWJ1dHRvblwiPkJyb3dzZTwvc3Bhbj5cblx0XHRcdFx0PGlucHV0IGNsYXNzPVwiZm9ybS1pbnB1dC0tZmlsZS1pbnB1dFwiIHR5cGU9XCJmaWxlXCIgaWQ9XCJmaWxlXCIgYWNjZXB0PVwiaW1hZ2UvKlwiIHNpemU9XCIxNFwiIC8+XG5cdFx0XHQ8L2xhYmVsPlxuXHRcdDwvZGl2PlxuXHQ8L2Rpdj5cbiAqL1xuJGN1c3RvbS1pbnB1dC1ib3JkZXJDb2xvcjogI2NjYyAhZGVmYXVsdDtcblxuLyoqXG4gKiBDdXN0b20gZmlsZSBpbnB1dFxuICovXG4uZm9ybS1pbnB1dC0tZmlsZSB7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0cGFkZGluZy1yaWdodDogMTIwcHg7XG5cdHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG4uZm9ybS1pbnB1dC0tZmlsZS1pbnB1dCB7XG5cdG9wYWNpdHk6IDA7XG5cdHZpc2liaWxpdHk6IGhpZGRlbjtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDA7XG5cdGxlZnQ6IDA7XG59XG5cbi5mb3JtLWlucHV0LS1maWxlLWJ1dHRvbiB7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogMDtcblx0cmlnaHQ6IC0xcHg7XG5cdGJvdHRvbTogMDtcblx0cGFkZGluZzogLjQ0ZW0gMWVtIDA7XG5cdGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGN1c3RvbS1pbnB1dC1ib3JkZXJDb2xvciwgNSUpO1xuXG5cdCY6aG92ZXIge1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRjdXN0b20taW5wdXQtYm9yZGVyQ29sb3I7XG5cdH1cbn1cbiIsIi8qKlxuICogTGlua3NcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmEge1xuXHR0cmFuc2l0aW9uOiAkZGVmYXVsdC10cmFuc2l0aW9uO1xuXG5cdCYsICY6bGluayB7XG5cdFx0Y29sb3I6ICRjb2xvci1saW5rLWRlZmF1bHQ7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHR9XG5cblx0Jjp2aXNpdGVkIHtcblx0XHRjb2xvcjogJGNvbG9yLWxpbmstdmlzaXRlZDtcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdH1cblxuXHQmOmhvdmVyLCAmOmZvY3VzIHtcblx0XHRjb2xvcjogJGNvbG9yLWxpbmstaG92ZXI7XG5cdFx0Ly90ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcblx0fVxuXG5cdCY6YWN0aXZlIHtcblx0XHRjb2xvcjogJGNvbG9yLWxpbmstYWN0aXZlO1xuXHRcdC8vdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG5cdH1cbn1cbiIsIi8qKlxuICogQnV0dG9uc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiAtIEFzc29jaWF0ZWQgQnV0dG9uIFZhcmlhYmxlc1xuICogLSBCYXNlIGJ1dHRvbiBzdHlsaW5nXG4gKiDigJMgQnV0dG9uIE1vZGlmaWVyc1xuICogXHQg4oCTIGJ0bi0tcHJpbWFyeVxuICogICDigJMgYnRuLS1ibG9ja1xuICovXG5cblxuLyoqXG4gKiBEZWZpbmUgYXNzb2NpYXRlZCBCdXR0b24gdmFyaWFibGVzXG4gKi9cbiRidG4tYm9yZGVyUmFkaXVzICAgICAgICAgICAgICAgIDogNXB4O1xuJGJ0bi1kZWZhdWx0LWJnQ29sb3IgICAgICAgICAgICAgOiAkZ3JheTtcbiRidG4tZGVmYXVsdC1iZ0NvbG9yLS1oaWdobGlnaHQgIDogZGFya2VuKCRidG4tZGVmYXVsdC1iZ0NvbG9yLCAxMCUpO1xuXG4kYnRuLXByaW1hcnktYmdDb2xvciAgICAgICAgICAgICA6ICRjb2xvci1saW5rLWRlZmF1bHQ7XG4kYnRuLXByaW1hcnktYmdDb2xvci0taGlnaGxpZ2h0ICA6IGRhcmtlbigkYnRuLXByaW1hcnktYmdDb2xvciwgMTAlKTtcblxuXG4vKipcbiAqIEJhc2UgYnV0dG9uIHN0eWxlcyDigJMgQmFzZWQgb24gY3Nzd2l6YXJkcnkuY29tL2JlYXV0b25zXG4gKlxuICogMS4gQWxsb3cgdXMgdG8gYmV0dGVyIHN0eWxlIGJveCBtb2RlbCBwcm9wZXJ0aWVzLlxuICogMi4gTGluZSBkaWZmZXJlbnQgc2l6ZWQgYnV0dG9ucyB1cCBhIGxpdHRsZSBuaWNlci5cbiAqIDMuIFN0b3AgYnV0dG9ucyB3cmFwcGluZyBhbmQgbG9va2luZyBicm9rZW4uXG4gKiA0LiBNYWtlIGJ1dHRvbnMgaW5oZXJpdCBmb250IHN0eWxlcy5cbiAqIDUuIEZvcmNlIGFsbCBlbGVtZW50cyB1c2luZyBiZWF1dG9ucyB0byBhcHBlYXIgY2xpY2thYmxlLlxuICogNi4gTm9ybWFsaXNlIGJveCBtb2RlbCBzdHlsZXMuXG4gKiA3LiBJZiB0aGUgYnV0dG9u4oCZcyB0ZXh0IGlzIDFlbSwgYW5kIHRoZSBidXR0b24gaXMgKDMgKiBmb250LXNpemUpIHRhbGwsIHRoZW5cbiAqICAgIHRoZXJlIGlzIDFlbSBvZiBzcGFjZSBhYm92ZSBhbmQgYmVsb3cgdGhhdCB0ZXh0LiBXZSB0aGVyZWZvcmUgYXBwbHkgMWVtXG4gKiAgICBvZiBzcGFjZSB0byB0aGUgbGVmdCBhbmQgcmlnaHQsIGFzIHBhZGRpbmcsIHRvIGtlZXAgY29uc2lzdGVudCBzcGFjaW5nLlxuICogOC4gRml4ZXMgb2RkIGlubmVyIHNwYWNpbmcgaW4gSUU3LlxuICogOS4gRG9u4oCZdCBhbGxvdyBidXR0b25zIHRvIGhhdmUgdW5kZXJsaW5lczsgaXQga2luZGEgcnVpbnMgdGhlIGlsbHVzaW9uLlxuICoxMC4gUHJldmVudHMgZnJvbSBpbmhlcml0aW5nIGRlZmF1bHQgYW5jaG9yIHN0eWxlcy5cbiAqL1xuXG4uYnRuIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrOyAgICAgIC8qIFsxXSAqL1xuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAgICAgLyogWzJdICovXG5cdHdoaXRlLXNwYWNlOiBub3dyYXA7ICAgICAgICAvKiBbM10gKi9cblx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7ICAgICAgIC8qIFs0XSAqL1xuXHRmb250LXNpemU6IDEwMCU7ICAgICAgICAgICAgLyogWzRdICovXG5cdGN1cnNvcjogcG9pbnRlcjsgICAgICAgICAgICAvKiBbNV0gKi9cblx0Ym9yZGVyOiBub25lOyAgICAgICAgICAgICAgIC8qIFs2XSAqL1xuXHRtYXJnaW46IDA7ICAgICAgICAgICAgICAgICAgLyogWzZdICovXG5cdHBhZGRpbmctdG9wOiAgICAwOyAgICAgICAgICAvKiBbNl0gKi9cblx0cGFkZGluZy1ib3R0b206IDA7ICAgICAgICAgIC8qIFs2XSAqL1xuXHRsaW5lLWhlaWdodDogMi41OyAgICAgICAgICAgLyogWzddICovXG5cdGhlaWdodDogICAgICAyLjVlbTsgICAgICAgICAvKiBbN10gKi9cblx0cGFkZGluZy1yaWdodDogMS41ZW07ICAgICAgIC8qIFs3XSAqL1xuXHRwYWRkaW5nLWxlZnQ6IDEuNWVtOyAgICAgICAgLyogWzddICovXG5cdG92ZXJmbG93OiB2aXNpYmxlOyAgICAgICAgICAvKiBbOF0gKi9cblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRib3JkZXItcmFkaXVzOiAkYnRuLWJvcmRlclJhZGl1cztcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cblx0Ly8gWW91IG1heSB3YW50IHRvIGNoYW5nZSB0aGlzXG5cdGJhY2tncm91bmQtY29sb3I6ICRidG4tZGVmYXVsdC1iZ0NvbG9yO1xuXG5cdCYsXG5cdCY6bGluayxcblx0Jjp2aXNpdGVkIHtcblx0XHRjb2xvcjogI2ZmZjtcblx0fVxuXG5cdCY6aG92ZXIsXG5cdCY6YWN0aXZlLFxuXHQmOmZvY3VzIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkYnRuLWRlZmF1bHQtYmdDb2xvci0taGlnaGxpZ2h0O1xuXHR9XG5cblx0Jixcblx0Jjpob3Zlcixcblx0JjphY3RpdmUsXG5cdCY6Zm9jdXMsXG5cdCY6dmlzaXRlZCB7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHR9XG5cblx0JjphY3RpdmUsXG5cdCY6Zm9jdXMge1xuXHRcdG91dGxpbmU6IG5vbmU7XG5cdH1cblxuXHQvLyBEaXNhYmxlZCBzdGF0ZVxuXHQmLmRpc2FibGVkLFxuXHQmW2Rpc2FibGVkXSB7XG5cdFx0Y3Vyc29yOiBkZWZhdWx0O1xuXHRcdGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG5cdFx0b3BhY2l0eTogLjU7XG5cdH1cbn1cblxuLy8gU2V0IHRoZSBiYWNrZ3JvdW5kc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLmJ0bi0tcHJpbWFyeSB7XG5cdGJhY2tncm91bmQtY29sb3I6ICRidG4tcHJpbWFyeS1iZ0NvbG9yO1xuXG5cdCYsXG5cdCY6bGluayxcblx0Jjp2aXNpdGVkIHtcblx0XHRjb2xvcjogI2ZmZjtcblx0fVxuXG5cdCY6aG92ZXIsXG5cdCY6YWN0aXZlLFxuXHQmOmZvY3VzIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkYnRuLXByaW1hcnktYmdDb2xvci0taGlnaGxpZ2h0O1xuXHR9XG59XG5cbi8vIEJsb2NrIGJ1dHRvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLmJ0bi0tYmxvY2sge1xuXHRkaXNwbGF5OiBibG9jaztcblx0d2lkdGg6IDEwMCU7XG5cdHBhZGRpbmctbGVmdDogMDtcblx0cGFkZGluZy1yaWdodDogMDtcblxuXHQvLyBWZXJ0aWNhbGx5IHNwYWNlIG91dCBtdWx0aXBsZSBibG9jayBidXR0b25zXG5cdC8vIHNhbWUgYWQgLmJ0bi0tYmxvY2sgKyAuYnRuLS1ibG9ja1xuXHQmICsgJiB7XG5cdFx0bWFyZ2luLXRvcDogMTBweDtcblx0fVxufVxuXG5cbi8vIFNwZWNpZmljaXR5IG92ZXJyaWRlc1xuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSxcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJidXR0b25cIl0ge1xuXHQmLmJ0bi0tYmxvY2sge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG59XG4iLCIvKipcbiAqIExpc3RzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIC0gKFVuKW9yZGVyZWQgbGlzdHNcbiAqIC0gVW5zdHlsZWQgbGlzdHNcbiAqIC0gRGVmaW5pdGlvbiBsaXN0c1xuICogLSBDZW50cmVkIGxpc3RzXG4gKiAtIEZsb2F0ZWQgbGlzdHNcbiAqL1xuXG51bCB7XG5cdGxpc3Qtc3R5bGUtdHlwZTogZGlzYztcbn1cblxub2wge1xuXHRsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWw7XG59XG5cbi8vIFVub3JkZXJlZCBhbmQgT3JkZXJlZCBsaXN0c1xuLy8gQWRkIGEgLnVuc3R5bGVkIGNsYXNzIHRvIHVub3JkZXJlZC9vcmRlcmVkIGxpc3RzIGlmIHlvdSB3YW50IHRoZW0gdG8gaGF2ZSBidWxsZXRzL251bWJlcnNcbnVsLCBvbCB7XG5cdHBhZGRpbmc6IDA7XG5cdG1hcmdpbjogMCAwICRiYXNlbGluZSAkYmFzZWxpbmU7XG5cblx0dWwsXG5cdG9sIHtcblx0XHRtYXJnaW4tbGVmdDogJGJhc2VsaW5lICogMjtcblx0fVxuXG5cdHVsIHtcblx0XHRsaXN0LXN0eWxlLXR5cGU6IGNpcmNsZTtcblxuXHRcdHVsIHtcblx0XHRcdGxpc3Qtc3R5bGUtdHlwZTogc3F1YXJlO1xuXHRcdH1cblx0fVxuXG5cdG9sIHtcblx0XHRsaXN0LXN0eWxlLXR5cGU6IHVwcGVyLXJvbWFuO1xuXG5cdFx0b2wge1xuXHRcdFx0bGlzdC1zdHlsZS10eXBlOiBsb3dlci1yb21hbjtcblx0XHR9XG5cdH1cblxuXHR1bCwgb2wge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdH1cbn1cblxuLyoqXG4gKiBVbnN0eWxlZCBsaXN0c1xuICovXG4udW5zdHlsZWQge1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG5cdGxpc3Qtc3R5bGU6IG5vbmU7XG5cdGxpc3Qtc3R5bGUtaW1hZ2U6IG5vbmU7XG59XG5cblxuLyoqXG4gKiBEZWZpbml0aW9uIGxpc3RzXG4gKi9cbmRsIHsgbWFyZ2luLWJvdHRvbTogJGJhc2VsaW5lOyB9XG5kdCB7IGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtYm9sZDsgfVxuZGQgeyBtYXJnaW4tbGVmdDogJGJhc2VsaW5lOyB9XG5cblxuLyoqXG4gKiBDZW50cmVkIGxpc3RzXG4gKlxuICogVXNhZ2U6XG5cdDx1bCBjbGFzcz1cImwtbGlzdC0tY2VudHJlZFwiPlxuXHRcdDxsaT48L2xpPlxuXHQ8L3VsPlxuICovXG5cbi5sLWxpc3QtLWNlbnRyZWQsIC5sLWxpc3QtLWNlbnRlcmVkIHtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXG5cdGxpIHtcblx0XHRkaXNwbGF5OiBpbmxpbmU7XG5cdH1cbn1cblxuXG4vKipcbiAqIEZsb2F0ZWQgbGlzdHNcbiAqIFVzYWdlOlxuXHQ8dWwgY2xhc3M9XCJsLWxpc3QtLWZsb2F0ZWRcIj5cblx0XHQ8bGk+PC9saT5cblx0PC91bD5cbiAqL1xuXG4ubC1saXN0LS1mbG9hdGVkIHtcblx0QGluY2x1ZGUga28tY2xlYXJmaXg7XG5cblx0bGkge1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0fVxufVxuIiwiLyoqXG4gKiBFbWJlZGRlZCBjb250ZW50XG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbWcge1xuXHRmb250LXN0eWxlOiBpdGFsaWM7XG5cdGNvbG9yOiAjYzAwO1xuXHRib3JkZXI6IDA7XG5cdC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7XG59XG5cbi8vIEltYWdlcywgRmxhc2ggJiB2aWRlb1xuaW1nLFxub2JqZWN0LFxuZW1iZWQsXG52aWRlbyB7XG5cdG1heC13aWR0aDogMTAwJTtcbn1cbiIsIi8qKlxuICogSWNvbnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogRm9yIGFuIGV4YW1wbGUgb2YgaG93IHRvIHVzZSB0aGVzZSwgc2VlXG4gKiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9tcm1hcnRpbmVhdS8zMTRiMDFiMzAwZmEyMGE1YTgyMGE0ZDY4ODlmZmQ0MlxuICogaHR0cDovL2NvZGVwZW4uaW8vbXJtYXJ0aW5lYXUvcGVuL2Fta1pCYj9lZGl0b3JzPTExMDBcbiAqXG4gKiBTVkcgaWNvbiB1c2FnZTpcbiAgIDxzdmcgdGl0bGU9XCJXaGF0c2FwcFwiIGNsYXNzPVwiaWNvbiBpY29uLS13aGF0c2FwcFwiPlxuICAgICA8dXNlIHhsaW5rOmhyZWY9XCIvYXNzZXRzL2Rpc3QvaW1nL2ljb25zLnN2ZyNsb2dvLXdoYXRzYXBwXCIvPlxuICAgPC9zdmc+XG4gKi9cbltjbGFzcyo9XCJpY29uXCJdIHtcblx0c3BlYWs6IG5vbmU7XG59XG5cbi5pY29uLS1sYXJnZSB7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHR3aWR0aDogMTIwcHg7XG5cdGhlaWdodDogMTIwcHg7XG59XG5cbi5pY29uLS1zbWFsbCB7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0d2lkdGg6IDI1cHg7XG5cdGhlaWdodDogMjVweDtcbn1cblxuLyoqXG4gKiBJbmNsdWRlZCBTb2NpYWwgTWVkaWEgYW5kIG90aGVyIGljb25zXG4gKi9cbi5pY29uLS10d2l0dGVyIHsgY29sb3I6ICRjb2xvci10d2l0dGVyOyB9XG4uaWNvbi0tZmFjZWJvb2sgeyBjb2xvcjogJGNvbG9yLWZhY2Vib29rOyB9XG4uaWNvbi0taW5zdGFncmFtIHsgY29sb3I6ICRjb2xvci1pbnN0YWdyYW07IH1cbi5pY29uLS1waW50ZXJlc3QgeyBjb2xvcjogJGNvbG9yLXBpbnRlcmVzdDsgfVxuLmljb24tLXlvdXR1YmUgeyBjb2xvcjogJGNvbG9yLXlvdXR1YmU7IH1cbi5pY29uLS13aGF0c2FwcCB7IGNvbG9yOiAkY29sb3Itd2hhdHNhcHA7IH1cbi5pY29uLS1lbWFpbCB7IGNvbG9yOiAkYmx1ZTsgfVxuLmljb24tLWtpY2tvZmYge1xuXHRmaWxsOiAkY29sb3Ita2lja29mZi1ibHVlO1xuXHRjb2xvcjogJGNvbG9yLWtpY2tvZmYtb3JhbmdlO1xufVxuLmljb24tLXRtdyB7XG5cdGNvbG9yOiAjZWY3NTIxO1xuXHRmaWxsOiAjOGE4YjhjO1xufVxuIiwiLyoqXG4gKiBTa2lwIHRvIG1haW4gY29udGVudCBsaW5rXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIDxkaXYgY2xhc3M9XCJza2lwVG9Db250ZW50XCI+XG5cdCBcdDxhIGhyZWY9XCIjbWFpbkNvbnRlbnRcIiBjbGFzcz1cImJ0biBidG4tLXByaW1hcnlcIj5Ta2lwIHRvIG1haW4gY29udGVudDwvYT5cblx0IDwvZGl2PlxuICovXG5cbi5za2lwVG9Db250ZW50IHtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdGhlaWdodDogMDtcblxuXHRhIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0dG9wOiAtMTAwcHg7XG5cdFx0ei1pbmRleDogMTAwO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG5cdFx0dHJhbnNpdGlvbjogJGRlZmF1bHQtdHJhbnNpdGlvbjtcblxuXHRcdCY6Zm9jdXMge1xuXHRcdFx0dG9wOiA1cHg7XG5cdFx0fVxuXHR9XG59XG4iLCIvKipcbiAqIFByZWZvcm1hdHRlZCBjb2RlXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvZGUgdHlwb2dyYXBoeSBzdHlsZXMgZm9yIHRoZSA8Y29kZT4gYW5kIDxwcmU+IGVsZW1lbnRzXG4gKi9cblxuLyoqXG4gKiBEZWZpbmUgYXNzb2NpYXRlZCBDb2RlIHZhcmlhYmxlc1xuICovXG4kY29kZS10ZXh0Q29sb3IgICAgICAgICAgICAgICA6ICM0NDQ7XG4kY29kZS1iZ0NvbG9yICAgICAgICAgICAgICAgICA6ICNkZGQ7XG4kcHJlLXRleHRDb2xvciAgICAgICAgICAgICAgICA6ICM0NDQ7XG4kcHJlLWJnQ29sb3IgICAgICAgICAgICAgICAgICA6ICNkZGQ7XG5cbi8vIElubGluZSBhbmQgYmxvY2sgY29kZSBzdHlsZXNcbmNvZGUsXG5wcmUge1xuXHRwYWRkaW5nOiAwIDNweCAycHg7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktbW9ubztcblx0QGluY2x1ZGUga28tZm9udC1zaXplKHNtYWxsKTtcblx0Y29sb3I6ICRjb2RlLXRleHRDb2xvcjtcblx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHR0YWItc2l6ZTogMztcbn1cblxuLy8gSW5saW5lIGNvZGVcbmNvZGUge1xuXHRwYWRkaW5nOiAycHggNHB4O1xuXHRjb2xvcjogJGNvZGUtdGV4dENvbG9yO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkY29kZS1iZ0NvbG9yO1xufVxuXG4vLyBCbG9ja3Mgb2YgY29kZVxucHJlIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHBhZGRpbmc6ICRiYXNlbGluZSAvIDI7XG5cdG1hcmdpbjogMCAwICRiYXNlbGluZTtcblx0Ly8gbGluZS1oZWlnaHQ6ICRsZWFkaW5nLWJhc2U7XG5cdGNvbG9yOiAkcHJlLXRleHRDb2xvcjtcblx0YmFja2dyb3VuZC1jb2xvcjogJHByZS1iZ0NvbG9yO1xuXHRib3JkZXItcmFkaXVzOiA0cHg7XG5cdHdoaXRlLXNwYWNlOiBwcmU7XG5cdC8vIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcblx0Ly8gd29yZC1icmVhazogYnJlYWstYWxsO1xuXHQvLyB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG5cblx0Ly8gQWNjb3VudCBmb3Igc29tZSBjb2RlIG91dHB1dHMgdGhhdCBwbGFjZSBjb2RlIHRhZ3MgaW4gcHJlIHRhZ3Ncblx0Y29kZSB7XG5cdFx0cGFkZGluZzogMDtcblx0XHRjb2xvcjogJHByZS10ZXh0Q29sb3I7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogJHByZS1iZ0NvbG9yO1xuXHRcdGJvcmRlcjogMDtcblx0fVxufVxuXG4vLyBFbmFibGUgc2Nyb2xsYWJsZSBibG9ja3Mgb2YgY29kZVxuLnByZS0tc2Nyb2xsYWJsZSB7XG5cdG1heC1oZWlnaHQ6IDM0MHB4O1xuXHRvdmVyZmxvdy15OiBzY3JvbGw7XG59XG4iLCIvKipcbiAqIFRhYmxlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiAtIEFzc29jaWF0ZWQgVGFibGUgVmFyaWFibGVzXG4gKiAtIERlZmF1bHQgdGFibGUgU3R5bGVzXG4gKiDigJMgVGFibGUgbW9kaWZpZXJzOlxuICogICAtIC50YWJsZS0tc3RyaXBlZFxuICog4oCTIC5yZXNwb25zaXZlVGFibGVcbiAqL1xuXG4vKipcbiAqIERlZmluZSBhc3NvY2lhdGVkIFRhYmxlIHZhcmlhYmxlc1xuICovXG4kdGFibGUtYmdDb2xvciAgICAgICAgICAgICAgICA6ICRjb2xvci1iZyAhZGVmYXVsdDsgLy8gRGVmYXVsdCBiYWNrZ3JvdW5kIGNvbG9yIHVzZWQgZm9yIGFsbCB0YWJsZXMuXG4kdGFibGUtYmdDb2xvci0tYWNjZW50ICAgICAgICA6ICNmOWY5ZjkgIWRlZmF1bHQ7IC8vIEJhY2tncm91bmQgY29sb3IgdXNlZCBmb3IgYC50YWJsZS1zdHJpcGVkYC5cbiR0YWJsZS1iZ0NvbG9yLS1ob3ZlciAgICAgICAgIDogaW5oZXJpdCAhZGVmYXVsdDsgLy8gQmFja2dyb3VuZCBjb2xvciB1c2VkIGZvciBgLnRhYmxlLWhvdmVyYCDigJMgc2V0IHRvICdpbmhlcml0JyBieSBkZWZhdWx0IChzbyBubyBob3ZlciBlZmZlY3QpXG4kdGFibGUtYm9yZGVyQ29sb3IgICAgICAgICAgICA6ICNjY2MgIWRlZmF1bHQ7IC8vIEJvcmRlciBjb2xvciBmb3IgdGFibGUgYW5kIGNlbGwgYm9yZGVycy5cblxuLyoqXG4gKiBDdXN0b21pemVzIHRoZSBgLnRhYmxlYCBjb21wb25lbnQgd2l0aCBiYXNpYyB2YWx1ZXMsIGVhY2ggdXNlZCBhY3Jvc3MgYWxsIHRhYmxlIHZhcmlhdGlvbnMuXG4gKi9cbiR0YWJsZS1jZWxsLXBhZGRpbmcgICAgICAgICAgIDogOHB4ICFkZWZhdWx0OyAvLyBQYWRkaW5nIGZvciBgPHRoPmBzIGFuZCBgPHRkPmBzLlxuXG5cbi8vIEJhc2VsaW5lIHN0eWxlc1xudGFibGUge1xuXHR3aWR0aDogMTAwJTtcblx0bWF4LXdpZHRoOiAxMDAlO1xuXHRtYXJnaW4tYm90dG9tOiAkYmFzZWxpbmU7XG5cdGJvcmRlci1zcGFjaW5nOiAwO1xuXHRib3JkZXI6IDJweCBzb2xpZCAkdGFibGUtYm9yZGVyQ29sb3I7XG5cdGJhY2tncm91bmQtY29sb3I6ICR0YWJsZS1iZ0NvbG9yO1xuXHR0YWJsZS1sYXlvdXQ6IGZpeGVkOyAvLyBodHRwczovL2Nzcy10cmlja3MuY29tL2ZpeGluZy10YWJsZXMtbG9uZy1zdHJpbmdzL1xuXG5cdC8vIENlbGxzXG5cdHRoLFxuXHR0ZCB7XG5cdFx0cGFkZGluZzogJHRhYmxlLWNlbGwtcGFkZGluZztcblx0XHRsaW5lLWhlaWdodDogJGJhc2VsaW5lO1xuXHRcdHZlcnRpY2FsLWFsaWduOiB0b3A7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQgJHRhYmxlLWJvcmRlckNvbG9yO1xuXG5cdFx0JjpmaXJzdC1jaGlsZCB7XHRib3JkZXItbGVmdDogMDtcdH1cblx0XHQmOmxhc3QtY2hpbGQge1x0Ym9yZGVyLXJpZ2h0OiAwO1x0fVxuXHR9XG5cblx0Ly8gQm90dG9tIGFsaWduIGZvciBjb2x1bW4gaGVhZGluZ3Ncblx0PiB0aGVhZCB7XG5cdFx0dGgsXG5cdFx0dGQge1xuXHRcdFx0dmVydGljYWwtYWxpZ246IGJvdHRvbTtcblx0XHRcdGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkdGFibGUtYm9yZGVyQ29sb3I7XG5cdFx0fVxuXHR9XG5cblx0PiB0Zm9vdCB0ZCB7XG5cdFx0Ym9yZGVyLXRvcDogMnB4IHNvbGlkICR0YWJsZS1ib3JkZXJDb2xvcjtcblx0XHRib3JkZXItYm90dG9tOiAwO1xuXHR9XG5cblx0Ly8gUmVtb3ZlIHRvcCBib3JkZXIgZnJvbSB0aGVhZCBieSBkZWZhdWx0XG5cdD4gdGhlYWQ6Zmlyc3QtY2hpbGQge1xuXHRcdD4gdHI6Zmlyc3QtY2hpbGQge1xuXHRcdFx0PiB0aCxcblx0XHRcdD4gdGQge1xuXHRcdFx0XHRib3JkZXItdG9wOiAwO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIGlmIGEgaG92ZXIgY29sb3IgaGFzIGJlZW4gc2V0IGluIHRoZSB2YXJpYWJsZXNcblx0dHI6aG92ZXIge1xuXHRcdHRkLCB0aCB7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkdGFibGUtYmdDb2xvci0taG92ZXI7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQWNjb3VudCBmb3IgbXVsdGlwbGUgdGJvZHkgaW5zdGFuY2VzXG5cdD4gdGJvZHkgKyB0Ym9keSB7XG5cdFx0Ym9yZGVyLXRvcDogMnB4IHNvbGlkICR0YWJsZS1ib3JkZXJDb2xvcjtcblx0fVxuXG5cdC8vIE5lc3Rpbmdcblx0JiB0YWJsZSxcblx0JiAudGFibGUge1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1iZztcblx0fVxufVxuXG50aCB7XG5cdHRleHQtYWxpZ246IGxlZnQ7XG59XG5cblxuLyoqXG4gKiBaZWJyYS1zdHJpcGluZ1xuICogRGVmYXVsdCB6ZWJyYS1zdHJpcGUgc3R5bGVzIChhbHRlcm5hdGluZyBncmF5IGFuZCB0cmFuc3BhcmVudCBiYWNrZ3JvdW5kcylcbiAqL1xuLnRhYmxlLS1zdHJpcGVkIHtcblx0dGJvZHkgOm50aC1jaGlsZChvZGQpIHRoLFxuXHR0Ym9keSA6bnRoLWNoaWxkKG9kZCkgdGQge1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICR0YWJsZS1iZ0NvbG9yLS1hY2NlbnQgIWltcG9ydGFudDtcblx0fVxufVxuXG5cbi8qKlxuICogUmVzcG9uc2l2ZSB0YWJsZXNcbiAqIFdyYXAgeW91ciB0YWJsZXMgaW4gYC5yZXNwb25zaXZlVGFibGVgIGFuZCB3ZSdsbCBtYWtlIHRoZW0gbW9iaWxlIGZyaWVuZGx5IGJ5IGVuYWJsaW5nIGhvcml6b250YWwgc2Nyb2xsaW5nLiBPbmx5IGFwcGxpZXMgPDc2OHB4LiBFdmVyeXRoaW5nIGFib3ZlIHRoYXQgd2lsbCBkaXNwbGF5IG5vcm1hbGx5LlxuICpcbiAqIElmIHlvdSBuZWVkIG1vcmUgcmVzcG9uc2l2ZSB0YWJsZXMsIGNvbnNpZGVyIFRhYmxlc2F3IGJ5IHRoZSBGaWxhbWVudCBHcm91cDpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9maWxhbWVudGdyb3VwL3RhYmxlc2F3XG4gKi9cbi5yZXNwb25zaXZlVGFibGUge1xuXHRAaW5jbHVkZSBtZWRpYSgnPG1pZCcpIHtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtYXJnaW4tYm90dG9tOiAoJGxpbmUtaGVpZ2h0LWJhc2UgKiAuNzUpICsgcHg7XG5cdFx0b3ZlcmZsb3cteTogaGlkZGVuO1xuXHRcdG92ZXJmbG93LXg6IGF1dG87XG5cdFx0LW1zLW92ZXJmbG93LXN0eWxlOiAtbXMtYXV0b2hpZGluZy1zY3JvbGxiYXI7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQgJHRhYmxlLWJvcmRlckNvbG9yO1xuXHRcdC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcblxuXHRcdC8vIFRpZ2h0ZW4gdXAgc3BhY2luZ1xuXHRcdD4gdGFibGUge1xuXHRcdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRcdGJvcmRlcjogMDtcblxuXHRcdFx0Ly8gRW5zdXJlIHRoZSBjb250ZW50IGRvZXNuJ3Qgd3JhcFxuXHRcdFx0PiB0aGVhZCxcblx0XHRcdD4gdGJvZHksXG5cdFx0XHQ+IHRmb290IHtcblx0XHRcdFx0dGgsXG5cdFx0XHRcdHRkIHtcblx0XHRcdFx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG5cdFx0XHRcdFx0Ly8gTnVrZSB0aGUgYXBwcm9wcmlhdGUgYm9yZGVycyBzbyB0aGF0IHRoZSBwYXJlbnQgY2FuIGhhbmRsZSB0aGVtXG5cdFx0XHRcdFx0JjpmaXJzdC1jaGlsZCB7XHRib3JkZXItbGVmdDogMDsgfVxuXHRcdFx0XHRcdCY6bGFzdC1jaGlsZCB7XHRib3JkZXItcmlnaHQ6IDA7IH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBPbmx5IG51a2UgdGhlIGxhc3Qgcm93J3MgYm90dG9tLWJvcmRlciBpbiBgdGJvZHlgIGFuZCBgdGZvb3RgIHNpbmNlXG5cdFx0XHQvLyBjaGFuY2VzIGFyZSB0aGVyZSB3aWxsIGJlIG9ubHkgb25lIGB0cmAgaW4gYSBgdGhlYWRgIGFuZCB0aGF0IHdvdWxkXG5cdFx0XHQvLyByZW1vdmUgdGhlIGJvcmRlciBhbHRvZ2V0aGVyLlxuXHRcdFx0PiB0Ym9keSxcblx0XHRcdD4gdGZvb3QgdHI6bGFzdC1jaGlsZCB7XG5cdFx0XHRcdD4gdGgsXG5cdFx0XHRcdD4gdGQge1xuXHRcdFx0XHRcdGJvcmRlci1ib3R0b206IDA7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cblxuIiwiLyoqXG4gKiBNYXN0aGVhZFxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbi5tYXN0aGVhZCB7fVxuIiwiLyoqXG4gKiBGb290ZXJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG4uZm9vdGVyIHt9XG4iLCIvKipcbiAqIEJyb3dzZXIgdXBncmFkZSBtZXNzYWdlXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuLmJyb3dzZXJ1cGdyYWRlIHtcblx0bWFyZ2luOiAuMmVtIDA7XG5cdGJhY2tncm91bmQ6ICNjY2M7XG5cdGNvbG9yOiAjMDAwO1xuXHRwYWRkaW5nOiAuMmVtIDA7XG59XG4iLCIvKipcbiAqIEdsb2JhbCBhcHAvc2l0ZSBzdHlsZXNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5ib2R5IHtcblx0YmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWJnO1xufVxuXG4vKipcbiAqIERlZmF1bHQgbGF5b3V0IGNvbnRhaW5lclxuICovXG4ubC1jb250YWluZXIge1xuXHR3aWR0aDogOTAlO1xuXHRtYXgtd2lkdGg6ICN7JGxheW91dC1tYXgtd2lkdGh9cHg7XG5cdG1hcmdpbjogMCBhdXRvO1xufVxuIiwiLyoqXG4gKiBIZWxwZXIgY2xhc3Nlc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBOb24tc2VtYW50aWMgaGVscGVyIGNsYXNzZXNcbiAqL1xuXG4vKipcbiAqIENsZWFyZml4XG4gKiBodHRwOi8vd3d3LmNzc21vam8uY29tL2xhdGVzdF9uZXdfY2xlYXJmaXhfc29fZmFyL1xuICogU2VlIG1peGlucy9fdXRpbGl0eS5zY3NzIGZvciBhIG1peGluIHZlcnNpb24gb2YgdGhpc1xuICovXG4uY2xlYXJmaXg6OmFmdGVyIHtcblx0Y29udGVudDogXCJcIjtcblx0ZGlzcGxheTogdGFibGU7XG5cdGNsZWFyOiBib3RoO1xufVxuXG5cbi8vIEZvciBiYWNrZ3JvdW5kIGltYWdlIHJlcGxhY2VtZW50XG4uaXIge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcblx0Ym9yZGVyOiAwO1xuXHRkaXJlY3Rpb246IGx0cjtcblx0ZGlzcGxheTogYmxvY2s7XG5cdG92ZXJmbG93OiBoaWRkZW47XG5cdHRleHQtYWxpZ246IGxlZnQ7XG5cdHRleHQtaW5kZW50OiAtOTk5ZW07XG5cblx0YnIge1xuXHRcdGRpc3BsYXk6IG5vbmU7XG5cdH1cbn1cblxuXG4vLyBIaWRlIGZyb20gYm90aCBzY3JlZW5yZWFkZXJzIGFuZCBicm93c2VyczogaDVicC5jb20vdVxuLmlzLWhpZGRlbiB7XG5cdGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcblx0dmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7XG59XG5cbi5pcy1zaG93biB7IGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8vIEhpZGUgb25seSB2aXN1YWxseSwgYnV0IGhhdmUgaXQgYXZhaWxhYmxlIGZvciBzY3JlZW5yZWFkZXJzOiBoNWJwLmNvbS92XG4uaXMtdmlzdWFsbHlIaWRkZW4ge1xuXHRib3JkZXI6IDA7XG5cdGNsaXA6IHJlY3QoMCAwIDAgMCk7XG5cdGhlaWdodDogMXB4O1xuXHRtYXJnaW46IC0xcHg7XG5cdG92ZXJmbG93OiBoaWRkZW47XG5cdHBhZGRpbmc6IDA7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0d2lkdGg6IDFweDtcblxuXHQvLyBFeHRlbmRzIHRoZSAudmlzdWFsbHloaWRkZW4gY2xhc3MgdG8gYWxsb3cgdGhlIGVsZW1lbnQgdG8gYmUgZm9jdXNhYmxlIHdoZW4gbmF2aWdhdGVkIHRvIHZpYSB0aGUga2V5Ym9hcmQ6IGg1YnAuY29tL3Bcblx0Ji5mb2N1c2FibGU6YWN0aXZlLFxuXHQmLmZvY3VzYWJsZTpmb2N1cyB7XG5cdFx0Y2xpcDogYXV0bztcblx0XHRoZWlnaHQ6IGF1dG87XG5cdFx0bWFyZ2luOiAwO1xuXHRcdG92ZXJmbG93OiB2aXNpYmxlO1xuXHRcdHBvc2l0aW9uOiBzdGF0aWM7XG5cdFx0d2lkdGg6IGF1dG87XG5cdH1cbn1cblxuLy8gSGlkZSB2aXN1YWxseSBhbmQgZnJvbSBzY3JlZW5yZWFkZXJzLCBidXQgbWFpbnRhaW4gbGF5b3V0XG4uaXMtaW52aXNpYmxlIHsgdmlzaWJpbGl0eTogaGlkZGVuOyB9XG5cbi5sLWZsb2F0TGVmdCB7XG5cdGZsb2F0OiBsZWZ0O1xufVxuXG4ubC1mbG9hdFJpZ2h0IHtcblx0ZmxvYXQ6IHJpZ2h0O1xufVxuXG4ubC1jbGVhciB7XG5cdGNsZWFyOiBib3RoO1xuXHRmbG9hdDogbm9uZTtcbn1cblxuLmwtbWIwIHsgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50OyB9XG4ubC1tdDAgeyBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7IH1cblxuXG4qIHtcblx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xufVxuXG4vKiBBIGhhY2sgZm9yIEhUTUw1IGNvbnRlbnRlZGl0YWJsZSBhdHRyaWJ1dGUgb24gbW9iaWxlICovXG50ZXh0YXJlYVtjb250ZW50ZWRpdGFibGVdIHtcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4ucHJvbW90ZS1sYXllciB7XG5cdC8qXG5cdFRoaXMgbWF5IHByb21vdGUgdGhlIGxheWVyIHRvIGEgY29tcG9zaXRlZFxuXHRsYXllci5cblxuXHRSZXBsYWNlIHdpdGggd2lsbC1jaGFuZ2Ugd2hlbiBhdmFpbGFibGVcblxuXHQjcGVyZm1hdHRlcnNcblx0Ki9cblx0YmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4vLyBBZGQgdGhlIGRlZmF1bHQgdHJhbnNpdGlvbiB0byBhbnkgZWxlbWVudFxuLnRyYW5zaXRpb24ge1xuXHR0cmFuc2l0aW9uOiAkZGVmYXVsdC10cmFuc2l0aW9uO1xufVxuXG4vLyBGYXN0ZXIgdGFwcyBvbiBtb2JpbGUgZGV2aWNlc1xuLy8gU2VlIGh0dHBzOi8vYWRhY3Rpby5jb20vam91cm5hbC8xMDAxOSBmb3IgbW9yZSBpbmZvXG5hLFxuYXJlYSxcbmJ1dHRvbixcbmlucHV0LFxubGFiZWwsXG5zZWxlY3QsXG50ZXh0YXJlYSxcblt0YWJpbmRleF0ge1xuXHR0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbn1cbiIsIi8qKlxuICogUHJpbnQgc3R5bGVzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5AbWVkaWEgcHJpbnQge1xuXHQqLFxuXHQqOmJlZm9yZSxcblx0KjphZnRlcixcblx0KjpmaXJzdC1sZXR0ZXIge1xuXHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG5cdFx0Y29sb3I6ICMwMDAgIWltcG9ydGFudDsgLyogQmxhY2sgcHJpbnRzIGZhc3RlcjogaHR0cDovL3d3dy5zYW5iZWlqaS5jb20vYXJjaGl2ZXMvOTUzICovXG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuXHRcdHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG5cdH1cblxuXHRhIHtcblx0XHQmOnZpc2l0ZWQge1xuXHRcdFx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG5cdFx0fVxuXG5cdFx0JltocmVmXTphZnRlciB7XG5cdFx0XHRjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjtcblx0XHR9XG5cdH1cblxuXHRhYmJyW3RpdGxlXTphZnRlciB7XG5cdFx0Y29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiO1xuXHR9XG5cblx0Lypcblx0ICogRG9uJ3Qgc2hvdyBsaW5rcyBmb3IgaW1hZ2VzLCBvciBqYXZhc2NyaXB0L2ludGVybmFsIGxpbmtzXG5cdCAqL1xuXHQuaXIgYTphZnRlcixcblx0YVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyLFxuXHRhW2hyZWZePVwiI1wiXTphZnRlciB7XG5cdFx0Y29udGVudDogXCJcIjtcblx0fVxuXG5cdHByZSxcblx0YmxvY2txdW90ZSB7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQgIzk5OTtcblx0XHRwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG5cdH1cblxuXHR0aGVhZCB7XG5cdFx0ZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOyAvKiBoNWJwLmNvbS90ICovXG5cdH1cblxuXHR0cixcblx0aW1nIHtcblx0XHRwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG5cdH1cblxuXHRpbWcge1xuXHRcdG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuXHR9XG5cblx0QHBhZ2Uge1xuXHRcdG1hcmdpbjogLjVjbTtcblx0fVxuXG5cdHAsIGgyLCBoMyB7XG5cdFx0b3JwaGFuczogMztcblx0XHR3aWRvd3M6IDM7XG5cdH1cblxuXHRoMiwgaDMge1xuXHRcdHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuXHR9XG59XG4iXX0= */
