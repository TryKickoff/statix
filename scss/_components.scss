/* ==========================================================================
	Components:
	* Embedded content
	* Centred list
	* Floated lists
	* Wells
	* Tabs
	* Media Object
	* Block grids
	========================================================================== */

/*
	Embedded content
	========================================================================== */
img {
	font-style:italic;
	color:#c00;
	border: 0;
	-ms-interpolation-mode: bicubic;

	&.img--left {
		margin:0 20px 0 0;
	}

	&.img--right {
		margin:0 0 0 20px;
	}
}

svg:not(:root) { overflow: hidden; }

// Images, Flash & video
img, object, embed, video{
	max-width:100%;
}


/*
	Centred lists

	<ul class="l-list--centred">
		<li></li>
	</ul>
	========================================================================== */
.l-list--centred, .l-list--centered {
	text-align: center;

	& li {
		display: inline;
	}
}


/*
	Floated lists

	<ul class="l-list--floated">
		<li></li>
	</ul>
	========================================================================== */
.l-list--floated {
	@include clearfix;

	& li {
		float: left;
		display: inline-block;
	}
}


/*
	Wells

	Use the well as a simple effect on an element to give it an inset effect
	<div class="well"></div>
	========================================================================== */
.well {
	min-height: 20px;
	padding: 19px;
	margin-bottom: 20px;
	background-color: #f5f5f5;
	border: 1px solid #eee;
	border: 1px solid rgba(0,0,0,.05);
	@include border-radius(4px);
	@include box-shadow(inset 0 1px 1px rgba(0,0,0,.05));

	& blockquote {
		border-color: #ddd;
		border-color: rgba(0,0,0,.15);
	}
}

// Sizes
.well--large {
	padding: 24px;
	@include border-radius(6px);
}
.well--small {
	padding: 9px;
	@include border-radius(3px);
}


/*
	Tabs

	* Usage: 
	<ul class="tabs">
		<li><a href="#tabs-example-1" class="is-active">Tab 1</a></li>
		<li><a href="#tabs-example-2">Tab 2</a></li>
	</ul>
	
	<!-- Tabs Content -->
	<ul class="l-tabsContent">
		<li id="tabs-example-1" class="is-active">
			Tab 1 content
		</li>

		<li id="tabs-example-2">
			Tab 2 content
		</li>
	</ul>
	========================================================================== */
.tabs {
	@include clearfix;
	@extend .unstyled;
	margin-bottom: $base-line-height + px;
	border-bottom: 2px solid $active-tab;

	&.tabs--alignRight {
		& li {
			float: right;
		}
	}

	&.tabs--alignCentre,
	&.tabs--alignCenter {
		text-align: center;

		& > li {
			display: inline;
			float: none;
		}
	}

	& > li {
		float: left;
		margin: 0 5px;
	}

	a {
		background-color: $inactive-tab;
		@extend .btn;
		@include border-radius(4px 4px 0 0);
		color: #fff;

		&.is-active {
			background-color: $active-tab;
		}
	}
}

.l-tabsContent {
	@extend .unstyled;
	& > li {
		display: none;
	}

	& > li.is-active {
		display: block;
	}
}

/*
	Media Object

	* Place any image- and text-like content side-by-side, as per:
	* stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
	* E.g.:
	*
	<div class="media">
		<img src="http://placekitten.com/100/100" alt="" class="media-img>"
		<p class="media-body">Lorem ipsum dolor sit amet, consectetur adipisicing elit,
		sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
	</div>
	========================================================================== */

.media {
	display: block;
}
.media-img {
	float: left;
	margin-right: $base-line-height + px;
}

/**
 * Reversed image location (right instead of left).
 */
.media-img--rev {
	float: right;
	margin-left: $base-line-height + px;
}

.media-img img,
.media-img--rev img{
	display: block;
}

.media-body{
	overflow: hidden;
}
.media-body,
.media-body > :last-child{
	margin-bottom:0;
}


/*
   Block grids

   These are 2-up, 3-up, 4-up and 5-up ULs, suited for repeating blocks of content. Add 'mobile' to them to switch them just like the layout grid (one item per line) on phones. For IE7/8 compatibility blockGrid items need to be the same height. You can optionally uncomment the lines below to support arbitrary height, but know that IE7/8 do not support :nth-child.

   Usage:
   <ul class="l-blockGrid l-blockGrid--twoUp">
       <li></li>
   </ul>
   ========================================================================== */
.l-blockGrid {
	display: block;
	list-style-type: none;
	@include clearfix;

	& li {
		display: block;
		height: auto;
	}
}

// === <$breakpoint-single-col ===
@include respond-min($breakpoint-single-col) {
	.l-blockGrid {
		& li {
			display: block;
			height: auto;
			float: left;
		}

		&.l-blockGrid--twoUp {
			margin-left: -4%;

			& li {
				margin-left: 4%;
				width: 46%;
				margin-bottom: 4%;
				//&:nth-child(2n+1) {clear: left;}
			}
		}

		&.l-blockGrid--threeUp {
			margin-left: -2%;

			& li {
				margin-left: 2%;
				width: 31.3%;
				margin-bottom: 2%;
				//&:nth-child(3n+1) {clear: left;}
			}
		}

		&.l-blockGrid--fourUp {
			margin-left: -2%;

			& li {
				margin-left: 2%;
				width: 23%;
				margin-bottom: 2%;
				//&:nth-child(4n+1) {clear: left;}
			}
		}

		&.l-blockGrid--fiveUp {
			margin-left: -1.5%;

			& li {
				margin-left: 1.5%;
				width: 18.5%;
				margin-bottom: 1.5%;
				//&:nth-child(5n+1) {clear: left;}
			}
		}
	}
}
// === end <$breakpoint-single-col ===


